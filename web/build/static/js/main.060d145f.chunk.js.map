{"version":3,"sources":["utils/Constants.js","containers/Dashboard.js","actions/userAction.js","images/logo.png","containers/Login.js","containers/User.js","containers/UserProfile.js","containers/MyProfile.js","actions/notificationAction.js","containers/Notification.js","containers/Setting.js","actions/packageAction.js","containers/Package.js","actions/actionAction.js","containers/Action.js","actions/campaignAction.js","containers/Campaign.js","containers/CampaignDetail.js","actions/rewardAction.js","containers/Reward.js","actions/transactionAction.js","containers/Transaction.js","components/NotificationMenu.js","components/SuperAdminLayout.js","components/AdminLayout.js","components/CustomerLayout.js","router/ProtectedRoute.js","router/ProtectedLogin.js","App.js","reportWebVitals.js","reducers/ProductListReducer.js","reducers/ActionReducer.js","reducers/AuthReducer.js","reducers/CampaignReducer.js","reducers/PackageReducer.js","reducers/NotificationReducer.js","reducers/RewardReducer.js","reducers/TransactionReducer.js","reducers/UserReducer.js","reducers/RootReducer.js","Store.js","index.js"],"names":["config","url","API_URL","API_URL_USERS","BASE_URL","BROADCAST_URL","BROADCAST_KEY","TIMEZONE","Dashboard","props","auth","useSelector","state","Auth","useState","campaigns","setCampaigns","actions","setActions","customers","setCustomers","packages","setPackages","options","title","text","noData","labels","colors","series","transactions","setTransactions","React","useEffect","fetchTransactions","fetchActiveCampaigns","fetchActiveActions","fetchCustomers","fetchPackages","event","a","axios","get","res","data","cancelled","pending","confirmed","completed","prev","total","Row","className","Col","md","Carousel","indicators","Item","src","alt","Card","Body","Text","type","user","dispatch","post","payload","history","push","response","apiRoute","GetData","params","Login","useDispatch","username","setUsername","password","setPassword","validated","setValidated","onLogin","preventDefault","stopPropagation","form","currentTarget","checkValidity","email","Form","noValidate","onSubmit","Image","logo","height","Control","placeholder","onChange","e","target","value","isInvalid","errorMsg","required","Feedback","Button","variant","User","userList","setData","filters","setFilters","show","setShow","create","baseURL","headers","saving","setSaving","adminFields","customerFields","fields","setFields","vehicleFields","handleClose","fieldErrors","tmpFields","errorData","Object","hasOwnProperty","call","key","fieldError","split","length","index","findIndex","item","fieldIndex","fetchUsers","$params","timezoneConvert","time","userTz","moment","tz","guess","handleEditShow","val","dataVal","vFields","customer_id","info","package_id","package","id","name","vehicles","map","i","vehicle_info","handleDelete","delete","DeleteData","search","results","result","label","promisePackagesOptions","inputValue","Promise","resolve","setTimeout","vehicleForm","vKey","vIndex","CloseButton","onClick","removeVehicle","field","Group","as","controlId","control_id","Label","column","sm","size","_","isUndefined","defaultValue","finalData","tmpData","newVFields","filter","vData","handleFilterInputChange","tmpFilter","user_type_id","Modal","onHide","backdrop","vehicle","clearFieldErrors","put","reject","EditData","then","toast","success","position","POSITION","BOTTOM_RIGHT","catch","error","undefined","message","Register","Header","closeButton","Title","hidden","option","styles","control","provided","borderColor","isSelected","defaultOptions","loadOptions","addVehicle","Footer","Spinner","animation","role","aria-hidden","lg","custom","isEmpty","handleTypeChange","Table","responsive","hover","loading","colSpan","el","to","type_name","phone_number","created_at","format","updated_at","ButtonGroup","Pagination","links","page","active","disabled","dangerouslySetInnerHTML","__html","showPagination","asyncSel","useRef","userid","match","setUser","rewards","setRewards","fetchData","fetchUserRewards","cancelFetchActionsTokenSource","cancelFetchRewardsTokenSource","cancelFetchCampaignTokenSource","$url","fetchActions","cancel","CancelToken","source","campaign_id","cancelToken","token","action","fetchRewards","action_id","reward","fetchCampaigns","handleRewardSubmit","balance","current","select","clearValue","Figure","Caption","qrCode","Subtitle","address","points","firstname","middlename","lastname","isNull","style","borderTop","paddingTop","vehicle_id","year","make","model","trim","color","vin_no","vehicleInfos","ref","isMulti","ListGroup","dataList","reward_name","showRewards","showRewardsPagination","AdminProfile","handleClaim","reward_id","status","stateData","newData","Badge","vehicle_year","vehicle_make","vehicle_model","vehicle_trim","vehicle_color","vehicle_vin_no","CustomerProfile","MarkAsRead","console","log","Notification","notifications","setNotifications","fetchNotification","getDayDiff","timestamp","b","diff","notification","parseZone","parseInt","notif","Setting","errors","setErrors","fetchProfile","handleSettingSubmit","new_password","new_password_confirmation","GetPackages","Package","packageList","product","cancelTokenSource","DeletePackage","packageData","EditPackage","AddPackage","min","parseFloat","cacheOptions","description","multiplier","AdminAction","actionList","Action","AddData","AdminCampaign","asyncSelReward","asyncSelAction","Campaign","campaignList","setCampaignList","setReward","showAddCampaign","setShowAddCampaign","showAddReward","setShowAddReward","handleCloseAddCampaign","handleRewardsShow","cancelActionTokenSource","cancelRewardTokenSource","addReward","newCampaign","tmp","fetchCampaignData","Date","striped","bordered","is_expired","start_date","end_date","minDate","dateFormat","selected","date","quantity","UserCampaign","CampaignDetail","campaignid","campaign","setCampaign","AdminReward","Reward","deleting","setDeleting","cost","UserReward","handleRedeem","radioValue","setRadioValue","toggle","radio","idx","ToggleButton","checked","AdminTransaction","transactionList","Transaction","dialogShow","setDialogShow","statusUpdateData","setStatusUpdateData","handleDialogClose","handleDialogConfirm","initialSettings","startDate","endDate","onCallback","start","end","width","transaction_id","reference_no","customer","salesperson","CustomerTransaction","NotificationMenu","showCount","setShowCount","messageCount","setMessageCount","setTarget","listen","setListen","processNotification","count","initEcho","window","Echo","private","newNotification","getContent","indexOf","splitted","ret","markAsRead","data-count","handleClick","Overlay","placement","container","containerPadding","rootClose","Popover","Content","padding","Boolean","SuperAdminHeader","Navbar","collapseOnSelect","expand","bg","Brand","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onLogout","SuperAdminSidebar","Collapse","exact","AdminHeader","AdminSidebar","CustomerHeader","CustomerSidebar","setDefault","ProtectedRoute","Component","component","rest","defaults","interceptors","use","broadcaster","cluster","wsHost","wsPort","forceTLS","authorizer","channel","authorize","socketId","callback","socket_id","channel_name","Authorization","Accept","render","pathname","from","location","disconnect","allowed","Container","fluid","ProtectedLogin","App","path","UserProfile","MyProfile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","DefaultState","ProductListReducer","ActionReducer","newPackages","localStorage","getItem","JSON","parse","LoginReducer","setItem","stringify","removeItem","CampaignReducer","PackageReducer","NotificationReducer","newNotifications","read_at","RewardReducer","TransactionReducer","UserReducer","RootReducer","combineReducers","AuthReducer","ProductList","Store","createStore","composeWithDevTools","applyMiddleware","store","next","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.060d145f.chunk.js","sourcesContent":["const prod = {\r\n    url: {\r\n        API_URL: 'https://fr-api.thedreamteamdigitalmarketing.com/v1',\r\n        API_URL_USERS: 'https://fr-api.thedreamteamdigitalmarketing.com',\r\n        BASE_URL: 'https://fr-api.thedreamteamdigitalmarketing.com',\r\n        BROADCAST_URL: 'localhost',\r\n        BROADCAST_KEY: '658ad8bb2f982c7fa645',\r\n        TIMEZONE: \"Asia/Manila\"\r\n    }\r\n};\r\n\r\nconst dev = {\r\n    url: {\r\n        API_URL: 'http://localhost:8000/v1',\r\n        BASE_URL: 'http://localhost:8000',\r\n        BROADCAST_URL: 'localhost',\r\n        BROADCAST_KEY: 'd92ca03f4633b565fe7f',\r\n        TIMEZONE: \"Asia/Manila\"\r\n    }\r\n};\r\n\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;","import React, {useState} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Card, Carousel, Col, Row } from 'react-bootstrap';\r\nimport Chart from \"react-apexcharts\";\r\nimport axios from 'axios';\r\nimport { config } from '../utils/Constants';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n    const [campaigns, setCampaigns] = useState(0);\r\n    const [actions, setActions] = useState(0);\r\n    const [customers, setCustomers] = useState(0);\r\n    const [packages, setPackages] = useState(0);\r\n    const [transactions, setTransactions] = useState({\r\n        options: {\r\n            title: {\r\n                text: 'Transactions'\r\n            },\r\n            noData: {\r\n                text: 'No data'\r\n            },\r\n            labels: ['Cancelled', 'Pending', 'Confirmed', 'Completed'],\r\n            colors: ['#d8334a', '#ffd11f', '#f9a72b', '#ffeea3']\r\n        },\r\n        series: []\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetchTransactions()\r\n        fetchActiveCampaigns()\r\n        fetchActiveActions()\r\n        fetchCustomers()\r\n        fetchPackages()\r\n    }, [])\r\n\r\n    const fetchTransactions = async event => {\r\n\r\n        const res = await axios.get('/summary/transactions')\r\n        let data = res.data.data\r\n\r\n        if(data.cancelled != 0 || data.pending != 0 || data.confirmed != 0 || data.completed)\r\n        setTransactions(prev => ({...prev, 'series' : [data.cancelled, data.pending, data.confirmed, data.completed]}))\r\n\r\n    }\r\n\r\n    const fetchActiveCampaigns = async event => {\r\n\r\n        const res = await axios.get('/summary/active_campaigns')\r\n        let data = res.data.data\r\n\r\n        setCampaigns(data.total)\r\n\r\n    }\r\n\r\n    const fetchActiveActions = async event => {\r\n\r\n        const res = await axios.get('/summary/active_actions')\r\n        let data = res.data.data\r\n\r\n        setActions(data.total)\r\n\r\n    }\r\n\r\n    const fetchCustomers = async event => {\r\n\r\n        const res = await axios.get('/summary/total_customers')\r\n        let data = res.data.data\r\n\r\n        setCustomers(data.total)\r\n\r\n    }\r\n\r\n    const fetchPackages = async event => {\r\n\r\n        const res = await axios.get('/summary/total_packages')\r\n        let data = res.data.data\r\n\r\n        setPackages(data.total)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"dashboard-page\">\r\n                <Col md={12} className=\"mb-3\">\r\n                    <Carousel indicators={false}>\r\n                        <Carousel.Item>\r\n                            <img\r\n                            className=\"d-block w-100\"\r\n                            src={config.url.BASE_URL+\"/images/slider-1.png\"}\r\n                            alt=\"First slide\"\r\n                            />\r\n                        </Carousel.Item>\r\n                        <Carousel.Item>\r\n                            <img\r\n                            className=\"d-block w-100\"\r\n                            src={config.url.BASE_URL+\"/images/slider-2.png\"}\r\n                            alt=\"Second slide\"\r\n                            />\r\n                        </Carousel.Item>\r\n                    </Carousel>\r\n                </Col>\r\n                <Col className=\"d-flex mt-n5\">\r\n                    <Col md={6} className=\"mb-3\">\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    <Chart options={transactions.options} series={transactions.series} type=\"pie\"/>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6} className=\"mb-3\">\r\n                        <Row>\r\n                            <Col md={6} className=\"mb-3\">\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                            <h6>Active Campaigns</h6>\r\n                                            <h3>{campaigns}</h3>\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col md={6} className=\"mb-3\">\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                            <h6>Active Actions</h6>\r\n                                            <h3>{actions}</h3>\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                            {auth.user.type != 3 && <Col md={6} className=\"mb-3\">\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                            <h6>Users</h6>\r\n                                            <h3>{customers}</h3>\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>}\r\n                            <Col md={6} className=\"mb-3\">\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                            <h6>Packages</h6>\r\n                                            <h3>{packages}</h3>\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Dashboard;","import axios from \"axios\";\r\n\r\nexport const Auth = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"LOGIN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post('/login', data)\r\n\r\n        dispatch({\r\n            type: \"LOGIN_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        props.history.push(\"/\");\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"LOGIN_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const Register = (props, data) => async dispatch => {\r\n    dispatch({\r\n        type: \"USER_REQUEST\"\r\n    })\r\n\r\n    await axios.post('/register', data)\r\n    .then((res) => {\r\n\r\n        dispatch({\r\n            type: \"USER_ADD\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n\r\n    })\r\n    .catch((error) => {\r\n        if(error.response) {\r\n            dispatch({\r\n                type: \"USER_FAIL\",\r\n                payload: error.response.data\r\n            })\r\n        }\r\n\r\n        return Promise.reject(error);\r\n    })\r\n}\r\n\r\nexport const Logout = (props) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"USER_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post('/logout')\r\n\r\n        window.Echo.disconnect();\r\n\r\n        dispatch({\r\n            type: \"LOGOUT_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"USER_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nconst apiRoute = '/users'\r\n\r\nexport const GetData = (props, url = apiRoute, params = {}) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"USER_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(url, {params: params})\r\n\r\n        dispatch({\r\n            type: \"USER_FETCH\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"USER_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"USER_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.put(apiRoute + '/' + data.id, data)\r\n\r\n        dispatch({\r\n            type: \"USER_UPDATE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve()\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"USER_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n\r\n        return Promise.reject(error)\r\n        \r\n    }\r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"USER_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.delete(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"USER_DELETE\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"USER_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/logo.60af3259.png\";","import React, { useState } from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, Form, Image } from 'react-bootstrap';\r\nimport { Auth } from \"../actions/userAction\";\r\nimport '../css/signin.css'\r\nimport logo from '../images/logo.png'\r\n\r\nconst Login = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const onLogin = async (event) => {\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const form = event.currentTarget;\r\n    \r\n        setValidated(true);\r\n\r\n        if (form.checkValidity() === false) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        const data = {\r\n            email: username,\r\n            password: password\r\n        }\r\n\r\n        dispatch(Auth(props, data));\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container text-center\">\r\n            <Form className=\"form-signin\" noValidate validated={validated} onSubmit={onLogin}>\r\n                <Image className=\"mb-4\" src={logo} height=\"180\"/>\r\n\r\n                <div className=\"form-fields\">\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"EMAIL\" \r\n                        onChange={ e => setUsername(e.target.value) }\r\n                        isInvalid={auth.errorMsg}\r\n                        required\r\n                    />\r\n            \r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"PASSWORD\" \r\n                        onChange={ e => setPassword(e.target.value) }\r\n                        isInvalid={auth.errorMsg}\r\n                        required\r\n                    />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {auth.errorMsg && (\r\n                            <div>{auth.errorMsg}</div>\r\n                        )}\r\n                    </Form.Control.Feedback>\r\n\r\n                    <Button \r\n                        variant=\"dark\" \r\n                        type=\"submit\"\r\n                    >\r\n                        LOG IN\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, ButtonGroup, CloseButton, Col, Form, Row, Modal, Pagination, Spinner, Table } from 'react-bootstrap';\r\nimport _, { isUndefined } from \"lodash\";\r\nimport axios from \"axios\";\r\nimport AsyncSelect from 'react-select/async';\r\nimport { Register, GetData, EditData, DeleteData } from \"../actions/userAction\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport moment from 'moment-timezone';\r\nimport {config} from '../utils/Constants'\r\n\r\nconst User = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userList = useSelector(state => state.User);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [filters, setFilters] = useState({});\r\n    const [show, setShow] = useState(false);  \r\n    const dmsAxios = axios.create({\r\n        baseURL: 'https://stage.apigw.cdkapps.eu',\r\n        headers: {\"Access-Control-Allow-Origin\": \"http://localhost:3000\"}\r\n    });\r\n    const [saving, setSaving] = useState(false)\r\n    const adminFields = [\r\n        {\r\n            'key': 'user_type_id',\r\n            'title': 'Type',\r\n            'type': 'select',\r\n            'placeholder': 'Enter action type',\r\n            'options': [\r\n                {\r\n                    'label': 'Customer',\r\n                    'key': '3'\r\n                }, \r\n                {\r\n                    'label': 'Admin',\r\n                    'key': '2'\r\n                }\r\n            ],\r\n            'default': 2,\r\n            'control_id': 'formActionType',\r\n            'errorMsg': 'Please select type.',\r\n            'required': false\r\n        },\r\n        {\r\n            'key': 'firstname',\r\n            'title': 'First name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter first name',\r\n            'control_id': 'formFirstName',\r\n            'errorMsg': 'Please provide first name.',\r\n            'required': false\r\n        },\r\n        {\r\n            'key': 'middlename',\r\n            'title': 'Middle name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter middle name',\r\n            'control_id': 'formMiddleName'\r\n        },\r\n        {\r\n            'key': 'lastname',\r\n            'title': 'Last name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter last name',\r\n            'control_id': 'formLastName',\r\n            'errorMsg': 'Please provide last name.',\r\n            'required': false\r\n        },\r\n        {\r\n            'key': 'email',\r\n            'title': 'Email',\r\n            'type': 'email',\r\n            'placeholder': 'Enter email',\r\n            'control_id': 'formEmail',\r\n            'errorMsg': 'Please provide email address.',\r\n            'required': false\r\n        },\r\n        {\r\n            'key': 'phone_number',\r\n            'title': 'Phone number',\r\n            'type': 'text',\r\n            'placeholder': 'Enter phone number',\r\n            'control_id': 'formPhone',\r\n            'errorMsg': 'Please provide phone number.',\r\n            'required': false\r\n        }\r\n    ];\r\n    const customerFields = [\r\n        {\r\n            'key': 'user_type_id',\r\n            'title': 'Type',\r\n            'type': 'select',\r\n            'placeholder': 'Enter action type',\r\n            'options': [\r\n                {\r\n                    'label': 'Customer',\r\n                    'key': '3'\r\n                }, \r\n                {\r\n                    'label': 'Admin',\r\n                    'key': '2'\r\n                }\r\n            ],\r\n            'default': 2,\r\n            'control_id': 'formActionType',\r\n            'errorMsg': ['Please select type.'],\r\n            'required': false,\r\n            'isInvalid': false\r\n        },\r\n        {\r\n            'key': 'customer_id',\r\n            'title': 'Customer ID',\r\n            'type': 'text',\r\n            'placeholder': 'Enter customer ID',\r\n            'control_id': 'formCustomerId',\r\n            'errorMsg': ['Please provide customer ID.'],\r\n            'required': false,\r\n            'isInvalid': false\r\n        },\r\n        {\r\n            'key': 'firstname',\r\n            'title': 'First name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter first name',\r\n            'control_id': 'formFirstName',\r\n            'errorMsg': ['Please provide first name.'],\r\n            'required': false,\r\n            'isInvalid': false\r\n        },\r\n        {\r\n            'key': 'middlename',\r\n            'title': 'Middle name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter middle name',\r\n            'control_id': 'formMiddleName'\r\n        },\r\n        {\r\n            'key': 'lastname',\r\n            'title': 'Last name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter last name',\r\n            'control_id': 'formLastName',\r\n            'errorMsg': ['Please provide last name.'],\r\n            'required': false,\r\n            'isInvalid': false\r\n        },\r\n        {\r\n            'key': 'email',\r\n            'title': 'Email',\r\n            'type': 'email',\r\n            'placeholder': 'Enter email',\r\n            'control_id': 'formEmail',\r\n            'errorMsg': ['Please provide email address.'],\r\n            'required': false,\r\n            'isInvalid': false\r\n        },\r\n        {\r\n            'key': 'phone_number',\r\n            'title': 'Phone number',\r\n            'type': 'text',\r\n            'placeholder': 'Enter phone number',\r\n            'control_id': 'formPhone',\r\n            'errorMsg': ['Please provide phone number.'],\r\n            'required': false,\r\n            'isInvalid': false\r\n        },\r\n        {\r\n            'key': 'points',\r\n            'title': 'Points',\r\n            'type': 'number',\r\n            'placeholder': 'Enter points',\r\n            'control_id': 'formPoints',\r\n            'errorMsg': [],\r\n            'required': false,\r\n            'isInvalid': false\r\n        },\r\n        {\r\n            'key': 'package_id',\r\n            'title': 'Package',\r\n            'type': 'asyncselect',\r\n            'placeholder': 'Enter name',\r\n            'control_id': 'formName',\r\n            'errorMsg': ['Please add package.'],\r\n            'required': false,\r\n            'isInvalid': false\r\n        },\r\n        {\r\n            'key': 'vehicles',\r\n            'fields': [\r\n                [\r\n                    {\r\n                        'key': 'vehicle_id',\r\n                        'title': 'ID',\r\n                        'type': 'text',\r\n                        'placeholder': 'Enter vehicle ID',\r\n                        'control_id': 'formVehicleID'\r\n                    },\r\n                    {\r\n                        'key': 'year',\r\n                        'title': 'Year',\r\n                        'type': 'text',\r\n                        'placeholder': 'Enter vehicle year',\r\n                        'control_id': 'formVehicleYear'\r\n                    },\r\n                    {\r\n                        'key': 'make',\r\n                        'title': 'Make',\r\n                        'type': 'text',\r\n                        'placeholder': 'Enter vehicle make',\r\n                        'control_id': 'formVehicleMake'\r\n                    },\r\n                    {\r\n                        'key': 'model',\r\n                        'title': 'Model',\r\n                        'type': 'text',\r\n                        'placeholder': 'Enter vehicle model',\r\n                        'control_id': 'formVehicleModel'\r\n                    },\r\n                    {\r\n                        'key': 'trim',\r\n                        'title': 'Trim',\r\n                        'type': 'text',\r\n                        'placeholder': 'Enter vehicle trim',\r\n                        'control_id': 'formVehicleTrim'\r\n                    },\r\n                    {\r\n                        'key': 'color',\r\n                        'title': 'Color',\r\n                        'type': 'text',\r\n                        'placeholder': 'Enter vehicle color',\r\n                        'control_id': 'formVehicleColor'\r\n                    },\r\n                    {\r\n                        'key': 'vin_no',\r\n                        'title': 'Vin No.',\r\n                        'type': 'text',\r\n                        'placeholder': 'Enter vehicle number',\r\n                        'control_id': 'formVehicleVinNo'\r\n                    }\r\n                ]\r\n            ]\r\n        }\r\n    ];\r\n    const [fields, setFields] = useState(customerFields);\r\n    const vehicleFields = [\r\n        {\r\n            'key': 'vehicle_id',\r\n            'title': 'ID',\r\n            'type': 'text',\r\n            'placeholder': 'Enter vehicle ID',\r\n            'control_id': 'formVehicleID'\r\n        },\r\n        {\r\n            'key': 'year',\r\n            'title': 'Year',\r\n            'type': 'text',\r\n            'placeholder': 'Enter vehicle year',\r\n            'control_id': 'formVehicleYear'\r\n        },\r\n        {\r\n            'key': 'make',\r\n            'title': 'Make',\r\n            'type': 'text',\r\n            'placeholder': 'Enter vehicle make',\r\n            'control_id': 'formVehicleMake'\r\n        },\r\n        {\r\n            'key': 'model',\r\n            'title': 'Model',\r\n            'type': 'text',\r\n            'placeholder': 'Enter vehicle model',\r\n            'control_id': 'formVehicleModel'\r\n        },\r\n        {\r\n            'key': 'trim',\r\n            'title': 'Trim',\r\n            'type': 'text',\r\n            'placeholder': 'Enter vehicle trim',\r\n            'control_id': 'formVehicleTrim'\r\n        },\r\n        {\r\n            'key': 'color',\r\n            'title': 'Color',\r\n            'type': 'text',\r\n            'placeholder': 'Enter vehicle color',\r\n            'control_id': 'formVehicleColor'\r\n        },\r\n        {\r\n            'key': 'vin_no',\r\n            'title': 'Vin No.',\r\n            'type': 'text',\r\n            'placeholder': 'Enter vehicle number',\r\n            'control_id': 'formVehicleVinNo'\r\n        }\r\n    ]\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {\r\n\r\n        setData({\r\n            user_type_id: 3,\r\n            vehicles: [{}]\r\n        })\r\n\r\n        setValidated(false)\r\n\r\n        setFields(customerFields)\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    const clearFieldErrors = () => {\r\n        let tmpFields = fields;\r\n\r\n        setValidated(false)\r\n\r\n        tmpFields = tmpFields.map((item, i) => {\r\n            return ({...item, isInvalid: false})\r\n        })\r\n\r\n        const index = tmpFields.findIndex((item) => item.key === 'vehicles');\r\n\r\n        if(!isUndefined(tmpFields[index])) {\r\n            tmpFields[index].fields = tmpFields[index].fields.map((vehicle, i) => {\r\n                return vehicle.map((item, i) => {\r\n                    return ({...item, isInvalid: false})\r\n                })\r\n            })\r\n\r\n        }\r\n\r\n        setFields(tmpFields)\r\n\r\n        return tmpFields\r\n    }\r\n\r\n    const fieldErrors = (tmpFields, errorData) => {\r\n        for (let key in errorData) {\r\n\r\n            if (Object.hasOwnProperty.call(errorData, key)) {\r\n\r\n                const fieldError = errorData[key];\r\n\r\n                const split = key.split('.');\r\n                if(split[0] === 'vehicles') {\r\n                    if(split.length === 3) {\r\n                        key = split[0];\r\n                        var index = fields.findIndex((item) => item.key === key)\r\n                        var fieldIndex = tmpFields[index]['fields'][split[1]].findIndex((item) => item.key === split[2])\r\n        \r\n                        tmpFields[index]['fields'][split[1]][fieldIndex]['errorMsg'] = fieldError\r\n                        tmpFields[index]['fields'][split[1]][fieldIndex]['isInvalid'] = true\r\n                    } else {\r\n                        key = split[0];\r\n                        var index = fields.findIndex((item) => item.key === key)\r\n        \r\n                        tmpFields[index]['errorMsg'] = fieldError\r\n                        tmpFields[index]['isInvalid'] = true\r\n                    }\r\n                } else {\r\n                    key = (key === 'package_id.value') ? 'package_id' : key;\r\n                    var index = fields.findIndex((item) => item.key === key)\r\n    \r\n                    tmpFields[index]['errorMsg'] = fieldError\r\n                    tmpFields[index]['isInvalid'] = true\r\n                }\r\n                \r\n            }\r\n            \r\n        }\r\n\r\n        setFields(tmpFields)\r\n\r\n        setValidated(true)\r\n    }\r\n\r\n    const addUser = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n        const tmpFields = clearFieldErrors();\r\n\r\n        setSaving(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n    \r\n            if(data.id) {\r\n                dispatch(EditData(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n                    setSaving(false)\r\n\r\n                    toast.success(\"User has been updated successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n\r\n                    if(typeof error.response.data.data != undefined) {\r\n                        var errorData = error.response.data.data\r\n\r\n                        fieldErrors(tmpFields, errorData)\r\n                    }\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n        \r\n                })\r\n            } else {\r\n                dispatch(Register(props, data))\r\n                .then(() => {\r\n                    setShow(false);\r\n                    setSaving(false)\r\n\r\n                    toast.success(\"User has been added successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n\r\n                    if(typeof error.response.data.data != undefined) {\r\n                        var errorData = error.response.data.data\r\n\r\n                        fieldErrors(tmpFields, errorData)\r\n                    }\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n        \r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const fetchUsers = (url = '/users', $params = {}) => {\r\n\r\n        dispatch(GetData(props, url, $params));\r\n\r\n    }\r\n\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(userList.data.links))\r\n        return userList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchUsers(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const timezoneConvert = (time) => {\r\n        var userTz = moment.tz.guess(true);\r\n        var time = moment.tz(time, config.url.TIMEZONE);\r\n\r\n        return time.tz(userTz);\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(userList.data.data)) {\r\n\r\n            return userList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td><Link to={'user/' + el.id}>{el.info ? el.info.customer_id : '-'}</Link></td>\r\n                    <td><Link to={'user/' + el.id}>{el.name}</Link></td>\r\n                    <td>{el.type_name}</td>\r\n                    <td>{el.email}</td>\r\n                    <td>{el.phone_number}</td>\r\n                    <td>{el.info && el.info.package ? el.info.package.name : 'None'}</td>\r\n                    <td>{timezoneConvert(el.created_at).format('YYYY-MM-DD hh:mm:ss A')}</td>\r\n                    <td>{timezoneConvert(el.updated_at).format('YYYY-MM-DD hh:mm:ss A')}</td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id)}}>Delete</Button>\r\n                            <Button onClick={e => handleEditShow(el)}>Edit</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(userList.loading) {\r\n\r\n            return <tr><td colSpan=\"9\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(userList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"9\" className=\"text-center\">{userList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"9\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const handleEditShow = (val) => {\r\n        let dataVal = {...val};\r\n        const key = 'vehicles';\r\n        let vFields = [...customerFields];\r\n        const index = vFields.findIndex((item) => item.key === key);\r\n\r\n        dataVal.customer_id = dataVal.info ? dataVal.info.customer_id : ''\r\n        dataVal.package_id = dataVal.info ? {'value' : dataVal.info.package.id, 'label' : dataVal.info.package.name} : ''\r\n        dataVal.vehicles = dataVal.vehicles.map((item, i) => {\r\n            if(i > 0) {vFields[index]['fields'] = [...vFields[index]['fields'], vehicleFields]}\r\n\r\n            return ({...item.vehicle_info, id: item.id})\r\n        });\r\n\r\n        setFields(vFields);\r\n\r\n        setData(dataVal)\r\n\r\n        setShow(true);\r\n    }\r\n\r\n    const handleDelete = id => {\r\n    \r\n        dispatch(DeleteData(props, id))\r\n\r\n    }\r\n\r\n    const fetchPackages = async (search) => {\r\n\r\n        const res = await axios.get('/packages?search=' + search)\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n\r\n        return options\r\n        \r\n    }\r\n\r\n    const promisePackagesOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(fetchPackages(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    const searchCustomer = async (email) => {\r\n\r\n        const res = await dmsAxios.get('/sample/sample/v3/customers?email='+email+'&page=1&pageSize=50')\r\n\r\n        console.log(res);\r\n    }\r\n\r\n    const promiseCustomersOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(searchCustomer(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    const userForm = () => {\r\n        let form = fields\r\n\r\n        return form.map((field, i) => {\r\n            if(field.key == 'vehicles') {\r\n                return vehicleForm(field.fields, field.key)\r\n            } else if(field.type === 'text' || field.type === 'email' || field.type === 'number') {\r\n                return <Form.Group as={Row} key={i} controlId={field.control_id}>\r\n                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                    <Col sm={9}>\r\n                        <Form.Control\r\n                            size=\"sm\"\r\n                            required={field.required}\r\n                            isInvalid={field.isInvalid}\r\n                            type={field.type} \r\n                            placeholder={field.placeholder}\r\n                            value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                            defaultValue={data[field.key]}\r\n                            onChange={ e => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {field.errorMsg}\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                </Form.Group>\r\n            } else if(field.type === 'select') {\r\n                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                    <Col sm={9}>\r\n                        <Form.Control \r\n                            size=\"sm\"\r\n                            required={field.required}\r\n                            isInvalid={field.isInvalid}\r\n                            as={field.type} \r\n                            placeholder={field.placeholder}\r\n                            value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                            onChange={ (e) => {\r\n                                setValidated(false)\r\n\r\n                                if(field.key == 'user_type_id') {\r\n                                    if(e.target.value == 2) {\r\n                                        setFields(adminFields)\r\n                                    } else {\r\n                                        setFields(customerFields)\r\n                                    }\r\n                                }\r\n\r\n                                setData(prev => ({...prev, [field.key] : e.target.value}))\r\n                            }}>\r\n\r\n                            {field.options.map((option, i) => {\r\n                                return <option key={i} value={option.key}>{option.label}</option>\r\n                            })}\r\n\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {field.errorMsg}\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                </Form.Group>\r\n            } else if(field.type === 'asyncselect') {\r\n                if(field.key == 'package_id') {\r\n                    return <Form.Group key={i} as={Row}>\r\n                        <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                        <Col sm={9}>\r\n                            <AsyncSelect size=\"sm\" className={field.isInvalid ? 'is-invalid' : ''} styles={{\r\n                                control: (provided, state) => ({\r\n                                    ...provided,\r\n                                    borderColor: field.isInvalid ? (state.isSelected ? 'red' : 'red') : '#ced4da'\r\n                                }),\r\n                            }} defaultOptions defaultValue={!_.isUndefined(data[field.key]) ? data[field.key] : ''} loadOptions={promisePackagesOptions} onChange={value => setData(prev => ({...prev, [field.key] : value}))} />\r\n                            \r\n                            {field.isInvalid && <Form.Control.Feedback type=\"invalid\">\r\n                                {field.errorMsg}\r\n                            </Form.Control.Feedback>}\r\n                        </Col>\r\n                    </Form.Group>\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const vehicleForm = (vFields, vKey) => {\r\n        return vFields.map((fields, i) => {\r\n            const vIndex = i;\r\n            return (\r\n                <>\r\n                    <p>Vehicle #{vIndex + 1} {vIndex !== 0 && <CloseButton onClick={() => removeVehicle(vIndex)} />}</p>\r\n                    <hr/>\r\n                    {\r\n                        fields.map((field, i) => {\r\n                            return <Form.Group as={Row} key={i} controlId={field.control_id}>\r\n                                <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                <Col sm={9}>\r\n                                    <Form.Control \r\n                                        size=\"sm\"\r\n                                        required={field.required}\r\n                                        isInvalid={field.isInvalid}\r\n                                        type={field.type} \r\n                                        placeholder={field.placeholder}\r\n                                        value={!_.isUndefined(data[vKey]) && !_.isUndefined(data[vKey][vIndex]) && !_.isUndefined(data[vKey][vIndex][field.key]) ? data[vKey][vIndex][field.key] : ''}\r\n                                        defaultValue={!_.isUndefined(data[vKey]) && !_.isUndefined(data[vKey][vIndex]) && !_.isUndefined(data[vKey][vIndex][field.key]) ? data[vKey][vIndex][field.key] : ''}\r\n                                        onChange={ e => {\r\n                                            let finalData = data[vKey];\r\n                                            let tmpData = finalData[vIndex];\r\n                                            tmpData = {...tmpData, [field.key]: e.target.value};\r\n                                            finalData[vIndex] = tmpData;\r\n                                            \r\n                                            setData(prev => ({...prev, [vKey] : finalData}))\r\n                                        } }\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {field.errorMsg}\r\n                                    </Form.Control.Feedback>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        })\r\n                    }\r\n                </>\r\n            )\r\n        })\r\n    }\r\n\r\n    const addVehicle = () => {\r\n        const key = 'vehicles';\r\n        let vFields = [...fields];\r\n        const index = vFields.findIndex((item) => item.key === key);\r\n        vFields[index]['fields'] = [...vFields[index]['fields'], vehicleFields]\r\n        setFields(vFields);\r\n\r\n        let vData = {...data}\r\n        vData['vehicles'] = [...vData['vehicles'], {}]\r\n        setData(vData)\r\n    }\r\n\r\n    const removeVehicle = (i) => {\r\n        const key = 'vehicles';\r\n        let vFields = [...fields];\r\n        const index = vFields.findIndex((item) => item.key === key);\r\n        let vFieldsTmp = vFields[index].fields;\r\n        let newVFields = vFieldsTmp.filter((item, index) => index != i);\r\n        vFields[index]['fields'] = newVFields\r\n        setFields(vFields);\r\n\r\n        let vData = {...data};\r\n        vData['vehicles'] = vData['vehicles'].filter((item, index) => index != i);\r\n        setData(vData);\r\n    }\r\n\r\n    const handleTypeChange = (val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, type : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchUsers('/users', tmpFilter)\r\n    }\r\n\r\n    const handleFilterInputChange = (key, val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, [key] : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchUsers('/users', tmpFilter)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchUsers()\r\n\r\n        // fetchRewards()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Button variant=\"primary\" onClick={handleShow}>\r\n                        Add User\r\n                    </Button>\r\n                </Col>\r\n        \r\n                <Modal show={show} onHide={handleClose} backdrop=\"static\">\r\n                    <Form noValidate validated={validated} onSubmit={addUser}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{!_.isUndefined(data.id) ? 'Edit User' : 'Add User'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>                            \r\n                            {userForm()}\r\n                            {data.user_type_id == 3 && <Button variant=\"primary\" onClick={(e) => {addVehicle()}}>Add Vehicle</Button>}\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                            {saving && <Spinner \r\n                                as=\"span\"\r\n                                animation=\"border\" \r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\" />} Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>Type</Form.Label>\r\n                            <Col lg={3}>\r\n                                <Form.Control as=\"select\" size=\"sm\" custom defaultValue={!_.isEmpty(filters) && !_.isEmpty(filters.type) ? filters.type : 'all'} onChange={(e) => handleTypeChange(e.target.value)}>\r\n                                <option value=\"all\">All</option>\r\n                                <option value=\"3\">Customers</option>\r\n                                <option value=\"2\">Admins</option>\r\n                                <option value=\"1\">Super Admins</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Customer ID\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g ABC123\" onChange={(e) => handleFilterInputChange('customer_id', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Name\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g John Doe\" onChange={(e) => handleFilterInputChange('search', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Email\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g example@example.com\" onChange={(e) => handleFilterInputChange('email', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table responsive hover size=\"sm\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Type</th>\r\n                                <th>Email</th>\r\n                                <th>Phone</th>\r\n                                <th>Package</th>\r\n                                <th>Created</th>\r\n                                <th>Updated</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {showData()}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Pagination size=\"sm\" className=\"float-right\">                    \r\n                        {showPagination()}\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default User;","import React, {useState, useRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Figure, Form, ListGroup, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport QRCode from \"qrcode.react\";\r\nimport AsyncSelect from 'react-select/async';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst AdminProfile = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const asyncSel = useRef(null);\r\n\r\n    const userid = props.match.params.user;\r\n    const [data, setData] = useState({});\r\n\r\n    const [user, setUser] = useState({})\r\n    const [rewards, setRewards] = useState({\r\n        loading: false,\r\n        data: [],\r\n        errorMsg: ''\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n        fetchUserRewards()\r\n        \r\n        setData(prev => ({'type' : 'earn', 'user_id' : userid}))\r\n    }, [])\r\n\r\n    const fetchUserRewards = async ($url = null) => {\r\n\r\n        setRewards(prev => ({...prev, 'loading' : true}));\r\n\r\n        const res = await axios.get($url ? $url : '/users/' + userid + '/rewards')\r\n\r\n        let result = res.data.data\r\n        \r\n        setRewards(prev => ({...prev, 'loading' : false}));\r\n\r\n        setRewards(prev => ({...prev, 'data' : result.rewards}));\r\n\r\n    }\r\n\r\n    const showRewardsPagination = () => {\r\n        if(!_.isEmpty(rewards.data.links))\r\n        return rewards.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchUserRewards(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const showRewards = () => {\r\n\r\n        let dataList = rewards\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n                return <ListGroup.Item key={key}>{el.reward_name}</ListGroup.Item>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const fetchData = async event => {\r\n\r\n        const res = await axios.get('/users/' + userid)\r\n\r\n        setUser(res.data.data)\r\n\r\n    }\r\n\r\n    const qrCode = () => {\r\n        if(!_.isEmpty(user.info) && !_.isEmpty(user.info.customer_id)) {\r\n\r\n            return <Figure>\r\n                        <QRCode value={user.info.customer_id} />\r\n                        <Figure.Caption>{user.info.customer_id}</Figure.Caption>\r\n                    </Figure>\r\n\r\n        }\r\n    }\r\n\r\n    let cancelFetchActionsTokenSource;\r\n    const fetchActions = async (search) => {\r\n\r\n        if(typeof cancelFetchActionsTokenSource != typeof undefined) {\r\n            cancelFetchActionsTokenSource.cancel(\"Operation canceled due to new request.\")\r\n        }\r\n\r\n        cancelFetchActionsTokenSource = axios.CancelToken.source();\r\n\r\n        const res = await axios.get('/campaigns/'+data.campaign_id+'/actions', {\r\n            cancelToken: cancelFetchActionsTokenSource.token,\r\n            params : {\r\n                'search': search,\r\n                'activity': true\r\n            }\r\n        })\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a].action\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n\r\n        return options\r\n        \r\n    }\r\n\r\n    const promiseActionOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(fetchActions(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    let cancelFetchRewardsTokenSource;\r\n    const fetchRewards = async (search) => {\r\n\r\n        if(typeof cancelFetchRewardsTokenSource != typeof undefined) {\r\n            cancelFetchRewardsTokenSource.cancel(\"Operation canceled due to new request.\")\r\n        }\r\n\r\n        cancelFetchRewardsTokenSource = axios.CancelToken.source();\r\n\r\n        const res = await axios.get('/campaigns/' + data.campaign_id + '/actions/' + data.action_id, {\r\n            cancelToken: cancelFetchRewardsTokenSource.token,\r\n            params: {\r\n                search: search\r\n            }\r\n        })\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a].reward\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n\r\n        return options\r\n        \r\n    }\r\n\r\n    const promiseRewardOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(fetchRewards(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    let cancelFetchCampaignTokenSource;\r\n    const fetchCampaigns = async (search) => {\r\n\r\n        if(typeof cancelFetchCampaignTokenSource != typeof undefined) {\r\n            cancelFetchCampaignTokenSource.cancel(\"Operation canceled due to new request.\")\r\n        }\r\n\r\n        cancelFetchCampaignTokenSource = axios.CancelToken.source();\r\n\r\n        const res = await axios.get('/campaigns', {\r\n            cancelToken: cancelFetchCampaignTokenSource.token,\r\n            params : {\r\n                'search': search,\r\n                'activity': true\r\n            }\r\n        })\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n\r\n        return options\r\n        \r\n    }\r\n\r\n    const promiseCampaignOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(fetchCampaigns(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    const handleRewardSubmit = async () => {\r\n        try {\r\n            const res = await axios.post('transactions', data)\r\n    \r\n            var result = res.data.data\r\n            \r\n            setData(prev => ({'type' : 'earn', 'user_id' : userid}))\r\n            setUser(prev => ({...prev, 'points' : result.balance}))\r\n    \r\n            asyncSel.current.select.select.clearValue();\r\n\r\n            toast.success(\"Reward has been added successfully\", {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n    \r\n            fetchUserRewards()\r\n        } catch (error) {\r\n            toast.error(error.response.data.message, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n        }\r\n    }\r\n\r\n    const vehicleInfos = () => {\r\n        if(user.vehicles) return user.vehicles.map((vehicle, i) => {\r\n            return <Card.Text style={{borderTop: '1px solid #dee2e6', paddingTop: '10px'}}>\r\n                <Row>\r\n                    <Col md=\"3\" className=\"font-weight-bold\">ID</Col>\r\n                    <Col md=\"9\">{!_.isEmpty(vehicle.vehicle_info) && !_.isNull(vehicle.vehicle_id) ? vehicle.vehicle_id : '' }</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"3\" className=\"font-weight-bold\">Year</Col>\r\n                    <Col md=\"9\">{!_.isEmpty(vehicle.vehicle_info) && !_.isNull(vehicle.vehicle_info.year) ? vehicle.vehicle_info.year : '' }</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"3\" className=\"font-weight-bold\">Make</Col>\r\n                    <Col md=\"9\">{!_.isEmpty(vehicle.vehicle_info) && !_.isNull(vehicle.vehicle_info.make) ? vehicle.vehicle_info.make : '' }</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"3\" className=\"font-weight-bold\">Model</Col>\r\n                    <Col md=\"9\">{!_.isEmpty(vehicle.vehicle_info) && !_.isNull(vehicle.vehicle_info.model) ? vehicle.vehicle_info.model : '' }</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"3\" className=\"font-weight-bold\">Trim</Col>\r\n                    <Col md=\"9\">{!_.isEmpty(vehicle.vehicle_info) && !_.isNull(vehicle.vehicle_info.trim) ? vehicle.vehicle_info.trim : '' }</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"3\" className=\"font-weight-bold\">Color</Col>\r\n                    <Col md=\"9\">{!_.isEmpty(vehicle.vehicle_info) && !_.isNull(vehicle.vehicle_info.color) ? vehicle.vehicle_info.color : '' }</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"3\" className=\"font-weight-bold\">Vin No.</Col>\r\n                    <Col md=\"9\">{!_.isEmpty(vehicle.vehicle_info) && !_.isNull(vehicle.vehicle_info.vin_no) ? vehicle.vehicle_info.vin_no : '' }</Col>\r\n                </Row>\r\n            </Card.Text>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <Card className=\"user-info\">\r\n                        <Card.Body>\r\n                            {qrCode()}\r\n                            <Card.Title>{user.name}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{!_.isEmpty(user.info) && !_.isEmpty(user.info.address) ? user.info.address : '' }</Card.Subtitle>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md={9} className=\"user-points-container d-flex pr-0 pl-0 pb-1\">\r\n                                        <Col md=\"5\" className=\"font-weight-bold m-0\">Points</Col>\r\n                                        <Col md=\"7\" className=\"m-0\">{user.points}</Col>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Personal Information</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Firstname</Col>\r\n                                    <Col md=\"8\">{user.firstname}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Middlename</Col>\r\n                                    <Col md=\"8\">{user.middlename}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Lastname</Col>\r\n                                    <Col md=\"8\">{user.lastname}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Email</Col>\r\n                                    <Col md=\"8\">{user.email}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Phone</Col>\r\n                                    <Col md=\"8\">{user.phone_number}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Package</Col>\r\n                                    <Col md=\"8\">{!_.isEmpty(user.info) && !_.isNull(user.info.package) ? user.info.package.name : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Vehicle Info</Card.Title>\r\n                            {vehicleInfos()}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Card className=\"user-info\">\r\n                        <Card.Body>\r\n                            <Card.Title>Add User Action</Card.Title>\r\n                            <Card.Text>\r\n                                <AsyncSelect ref={asyncSel} defaultOptions loadOptions={promiseCampaignOptions} onChange={value => {(value != null) ? setData(prev => ({'type' : 'earn', 'user_id' : userid, 'campaign_id' : value.value, 'campaign_name' : value.label})) : setData(prev => ({'type' : 'earn', 'user_id' : userid}))}} />\r\n                                {data.campaign_id ? <AsyncSelect key={'campaign-' + data.campaign_id} defaultOptions loadOptions={promiseActionOptions} onChange={value => setData(prev => ({...prev, 'action_id' : value.value, 'action_name' : value.label}))} /> : ''}\r\n                                {data.action_id ? <AsyncSelect key={'action-' + data.action_id} isMulti defaultOptions loadOptions={promiseRewardOptions} onChange={value => setData(prev => ({...prev, 'rewards' : value}))} /> : ''}\r\n\r\n                                {data.campaign_id && data.action_id  && !_.isEmpty(data.rewards) ? <Button onClick={handleRewardSubmit}>Submit</Button> : ''}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card className=\"user-rewards\">\r\n                        <Card.Body>\r\n                            <Card.Title>Rewards</Card.Title>\r\n                            <Card.Text>\r\n                                <ListGroup variant=\"flush\">\r\n                                {showRewards()}\r\n                                </ListGroup>\r\n                                \r\n                                <Pagination size=\"sm\" className=\"float-right\">                    \r\n                                    {showRewardsPagination()}\r\n                                </Pagination>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst CustomerProfile = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const userid = props.match.params.user;\r\n    const [data, setData] = useState({});\r\n\r\n    const [user, setUser] = useState({})\r\n    const [rewards, setRewards] = useState({\r\n        loading: false,\r\n        data: [],\r\n        errorMsg: ''\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n        fetchUserRewards()\r\n        \r\n        setData(prev => ({...prev, 'type' : 'earn'}))\r\n        setData(prev => ({...prev, 'user_id' : userid}))\r\n    }, [])\r\n\r\n    const fetchUserRewards = async ($url = null) => {\r\n\r\n        setRewards(prev => ({...prev, 'loading' : true}));\r\n\r\n        const res = await axios.get($url ? $url : '/users/' + userid + '/rewards')\r\n\r\n        let result = res.data.data\r\n        \r\n        setRewards(prev => ({...prev, 'loading' : false}));\r\n\r\n        setRewards(prev => ({...prev, 'data' : result.rewards}));\r\n\r\n    }\r\n\r\n    const handleClaim = async (reward_id) => {\r\n\r\n        const res = await axios.post('claim', {'reward_id' : reward_id, 'qty' : 1})\r\n\r\n        let result = res.data.data\r\n        let reward = result.reward\r\n\r\n        if(reward.status == 'completed') {\r\n            let stateData = rewards.data\r\n            let newData = stateData.data.filter((item) => item.id !== reward.id)\r\n            \r\n            stateData.data = newData;\r\n\r\n            setRewards(prev => ({...prev, 'data' : stateData}));\r\n        }\r\n\r\n    }    \r\n\r\n    const showRewardsPagination = () => {\r\n        if(!_.isEmpty(rewards.data.links))\r\n        return rewards.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchUserRewards(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const showRewards = () => {\r\n\r\n        let dataList = rewards\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n                return <ListGroup.Item key={key}>{el.reward_name} <Button size=\"sm\" onClick={() => handleClaim(el.id)}>Claim</Button></ListGroup.Item>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const fetchData = async event => {\r\n\r\n        const res = await axios.get('/users/' + userid)\r\n\r\n        setUser(res.data.data)\r\n\r\n    }\r\n\r\n    const qrCode = () => {\r\n        if(!_.isEmpty(user.info) && !_.isEmpty(user.info.customer_id)) {\r\n\r\n            return <Figure>\r\n                        <QRCode value={user.info.customer_id} />\r\n                        <Figure.Caption>{user.info.customer_id}</Figure.Caption>\r\n                    </Figure>\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            {qrCode()}\r\n                            <Card.Title>{user.name}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{!_.isEmpty(user.info) && !_.isEmpty(user.info.address) ? user.info.address : '' }</Card.Subtitle>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Points</Col>\r\n                                    <Col md=\"9\"><Badge variant=\"info\">{user.points}</Badge></Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Personal Information</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Firstname</Col>\r\n                                    <Col md=\"8\">{user.firstname}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Middlename</Col>\r\n                                    <Col md=\"8\">{user.middlename}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Lastname</Col>\r\n                                    <Col md=\"8\">{user.lastname}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Email</Col>\r\n                                    <Col md=\"8\">{user.email}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Phone</Col>\r\n                                    <Col md=\"8\">{user.phone_number}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Package</Col>\r\n                                    <Col md=\"8\">{!_.isEmpty(user.info) && !_.isNull(user.info.package) ? user.info.package.name : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Vehicle Info</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Year</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_year) ? user.info.vehicle_year : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Make</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_make) ? user.info.vehicle_make : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Model</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_model) ? user.info.vehicle_model : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Trim</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_trim) ? user.info.vehicle_trim : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Color</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_color) ? user.info.vehicle_color : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Vin No.</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_vin_no) ? user.info.vehicle_vin_no : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Rewards</Card.Title>\r\n                            <Card.Text>\r\n                                <ListGroup variant=\"flush\">\r\n                                {showRewards()}\r\n                                </ListGroup>\r\n                                \r\n                                <Pagination size=\"sm\" className=\"float-right\">                    \r\n                                    {showRewardsPagination()}\r\n                                </Pagination>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminProfile(props)\r\n\r\n    } else {\r\n\r\n        return CustomerProfile(props)\r\n\r\n    }\r\n}","import React, {useState, useRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Figure, Form, ListGroup, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport QRCode from \"qrcode.react\";\r\n\r\nconst AdminProfile = (props) => {\r\n    \r\n    const [user, setUser] = useState({})\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = async event => {\r\n\r\n        const res = await axios.get('/profile')\r\n\r\n        setUser(res.data.data)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col md=\"8\">\r\n                    <Card className=\"user-info\">\r\n                        <Card.Body>\r\n                            <Card.Title>{user.name}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{user.type_name}</Card.Subtitle>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Points</Col>\r\n                                    <Col md=\"9\"><Badge variant=\"info\">{user.points}</Badge></Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Personal Information</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Firstname</Col>\r\n                                    <Col md=\"8\">{user.firstname || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Middlename</Col>\r\n                                    <Col md=\"8\">{user.middlename || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Lastname</Col>\r\n                                    <Col md=\"8\">{user.lastname || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Email</Col>\r\n                                    <Col md=\"8\">{user.email}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Phone</Col>\r\n                                    <Col md=\"8\">{user.phone_number || '-'}</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst CustomerProfile = (props) => {\r\n    \r\n    const auth = useSelector(state => state.Auth);\r\n    const [user, setUser] = useState({})\r\n    const [rewards, setRewards] = useState({\r\n        loading: false,\r\n        data: [],\r\n        errorMsg: ''\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n        fetchUserRewards()\r\n    }, [])\r\n\r\n    const fetchUserRewards = async ($url = null) => {\r\n\r\n        setRewards(prev => ({...prev, 'loading' : true}));\r\n\r\n        const res = await axios.get($url ? $url : '/users/' + auth.user.id + '/rewards')\r\n\r\n        let result = res.data.data\r\n        \r\n        setRewards(prev => ({...prev, 'loading' : false}));\r\n\r\n        setRewards(prev => ({...prev, 'data' : result.rewards}));\r\n\r\n    }\r\n\r\n    const fetchData = async event => {\r\n\r\n        const res = await axios.get('/profile')\r\n\r\n        setUser(res.data.data)\r\n\r\n    }\r\n\r\n    const handleClaim = async (reward_id) => {\r\n\r\n        const res = await axios.post('claim', {'reward_id' : reward_id, 'qty' : 1})\r\n\r\n        let result = res.data.data\r\n        let reward = result.reward\r\n\r\n        if(reward.status == 'completed') {\r\n            let stateData = rewards.data\r\n            let newData = stateData.data.filter((item) => item.id !== reward.id)\r\n            \r\n            stateData.data = newData;\r\n\r\n            setRewards(prev => ({...prev, 'data' : stateData}));\r\n        }\r\n\r\n    }    \r\n\r\n    const showRewardsPagination = () => {\r\n        if(!_.isEmpty(rewards.data.links))\r\n        return rewards.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchUserRewards(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const showRewards = () => {\r\n\r\n        let dataList = rewards\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n                return <ListGroup.Item key={key}>{el.reward_name}<Button size=\"sm\" className=\"float-right\" variant=\"dark\" onClick={() => handleClaim(el.id)}>Claim</Button></ListGroup.Item>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">Unable to get data</td></tr>\r\n\r\n    }\r\n\r\n    const qrCode = () => {\r\n        if(!_.isEmpty(user.info) && !_.isEmpty(user.info.customer_id)) {\r\n\r\n            return <Figure>\r\n                        <QRCode value={user.info.customer_id} />\r\n                        <Figure.Caption>{user.info.customer_id}</Figure.Caption>\r\n                    </Figure>\r\n\r\n        }\r\n    }\r\n\r\n    const vehicleInfos = () => {\r\n        if(user.vehicles) return user.vehicles.map((vehicle, i) => {\r\n            return <Card.Text style={{borderTop: '1px solid #dee2e6', paddingTop: '10px'}}>\r\n                <Row>\r\n                    <Col md=\"3\" className=\"font-weight-bold\">ID</Col>\r\n                    <Col md=\"9\">{!_.isEmpty(vehicle.vehicle_id) ? vehicle.vehicle_id : '' }</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"3\" className=\"font-weight-bold\">Year</Col>\r\n                    <Col md=\"9\">{!_.isEmpty(vehicle.vehicle_info) && !_.isNull(vehicle.vehicle_info.year) ? vehicle.vehicle_info.year : '' }</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"3\" className=\"font-weight-bold\">Make</Col>\r\n                    <Col md=\"9\">{!_.isEmpty(vehicle.vehicle_info) && !_.isNull(vehicle.vehicle_info.make) ? vehicle.vehicle_info.make : '' }</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"3\" className=\"font-weight-bold\">Model</Col>\r\n                    <Col md=\"9\">{!_.isEmpty(vehicle.vehicle_info) && !_.isNull(vehicle.vehicle_info.model) ? vehicle.vehicle_info.model : '' }</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"3\" className=\"font-weight-bold\">Trim</Col>\r\n                    <Col md=\"9\">{!_.isEmpty(vehicle.vehicle_info) && !_.isNull(vehicle.vehicle_info.trim) ? vehicle.vehicle_info.trim : '' }</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"3\" className=\"font-weight-bold\">Color</Col>\r\n                    <Col md=\"9\">{!_.isEmpty(vehicle.vehicle_info) && !_.isNull(vehicle.vehicle_info.color) ? vehicle.vehicle_info.color : '' }</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"3\" className=\"font-weight-bold\">Vin No.</Col>\r\n                    <Col md=\"9\">{!_.isEmpty(vehicle.vehicle_info) && !_.isNull(vehicle.vehicle_info.vin_no) ? vehicle.vehicle_info.vin_no : '' }</Col>\r\n                </Row>\r\n            </Card.Text>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <Card className=\"user-info\">\r\n                        <Card.Body>\r\n                            {qrCode()}\r\n                            <Card.Title>{user.name}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{user.type_name}</Card.Subtitle>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Points</Col>\r\n                                    <Col md=\"9\"><Badge variant=\"info\">{user.points}</Badge></Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Personal Information</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Firstname</Col>\r\n                                    <Col md=\"8\">{user.firstname || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Middlename</Col>\r\n                                    <Col md=\"8\">{user.middlename || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Lastname</Col>\r\n                                    <Col md=\"8\">{user.lastname || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Email</Col>\r\n                                    <Col md=\"8\">{user.email}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Phone</Col>\r\n                                    <Col md=\"8\">{user.phone_number || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Package</Col>\r\n                                    <Col md=\"8\">{!_.isEmpty(user.info) && !_.isNull(user.info.package) ? user.info.package.name : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Vehicle Info</Card.Title>\r\n                            {vehicleInfos()}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Card className=\"user-rewards\">\r\n                        <Card.Body>\r\n                            <Card.Title>Rewards</Card.Title>\r\n                            <Card.Text>\r\n                                <ListGroup variant=\"flush\">\r\n                                {showRewards()}\r\n                                </ListGroup>\r\n                                \r\n                                <Pagination className=\"float-right\">                    \r\n                                    {showRewardsPagination()}\r\n                                </Pagination>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminProfile(props)\r\n\r\n    } else {\r\n\r\n        return CustomerProfile(props)\r\n\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nconst apiRoute = '/notifications'\r\n\r\nexport const GetData = (props, url = apiRoute) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"NOTIFICATION_REQUEST\"\r\n    })\r\n\r\n    try {\r\n\r\n        const res = await axios.get(url)\r\n\r\n        dispatch({\r\n            type: \"NOTIFICATION_FETCH\",\r\n            payload: res.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"NOTIFICATION_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const AddData = (props, data) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"NOTIFICATION_REQUEST\"\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(apiRoute, data)\r\n\r\n        dispatch({\r\n            type: \"NOTIFICATION_ADD\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"NOTIFICATION_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"NOTIFICATION_REQUEST\"\r\n    })\r\n\r\n    try {\r\n\r\n        const res = await axios.put(apiRoute + '/' + data.id, data)\r\n\r\n        dispatch({\r\n            type: \"NOTIFICATION_UPDATE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n        \r\n        dispatch({\r\n            type: \"NOTIFICATION_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"NOTIFICATION_REQUEST\"\r\n    })\r\n\r\n    try {\r\n\r\n        const res = await axios.delete(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"NOTIFICATION_DELETE\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n        \r\n        dispatch({\r\n            type: \"NOTIFICATION_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n        \r\n    }\r\n        \r\n}\r\n\r\nexport const MarkAsRead = () => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"NOTIFICATION_REQUEST\"\r\n    })\r\n\r\n    try {\r\n\r\n        // const res = await axios.post('notifications/read')\r\n\r\n        dispatch({\r\n            type: \"NOTIFICATION_READ\"\r\n        })\r\n\r\n        console.log('notification read');\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n        \r\n        // dispatch({\r\n        //     type: \"NOTIFICATION_FAIL\",\r\n        //     payload: error.response.data\r\n        // })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Form, ListGroup, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport moment from 'moment-timezone';\r\nimport {config} from '../utils/Constants'\r\nimport {MarkAsRead} from \"../actions/notificationAction\";\r\n\r\nconst Notification = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const [notifications, setNotifications] = useState({\r\n        loading: false,\r\n        data: []\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetchNotification()\r\n    }, [])\r\n\r\n    const fetchNotification = async () => {\r\n        setNotifications(prev => ({...prev, loading: true}));\r\n\r\n        const res = await axios.get('notifications');\r\n\r\n        let data = res.data.data;\r\n\r\n        setNotifications(prev => ({...prev, data: data, loading: false}));\r\n\r\n        dispatch(MarkAsRead())\r\n    }\r\n\r\n    const seeMoreNotification = async (link) => {\r\n        setNotifications(prev => ({...prev, loading: true}))\r\n\r\n        const res = await axios.get(link);\r\n\r\n        let data = res.data.data;\r\n\r\n        data.data = [...notifications.data.data, ...data.data];\r\n\r\n        setNotifications(prev => ({...prev, data: data, loading: false}));\r\n    }\r\n\r\n    const renderNotifications = () => {\r\n\r\n        if(notifications.loading) {\r\n            return <ListGroup.Item>Loading...</ListGroup.Item>\r\n        }\r\n\r\n        if(notifications.data && notifications.data.data) {\r\n            return notifications.data.data.map((notification, i) => {\r\n                let time = moment.parseZone(timezoneConvert(notification.created_at)).format('x');\r\n                time = getDayDiff(parseInt(time));\r\n                let notif = notification.data;\r\n                return <ListGroup.Item key={i}>\r\n                    <Row>\r\n                        <Col md=\"9\" className=\"mb-0\">{notif.title}</Col>\r\n                        <Col md=\"3\" className=\"mb-0 text-right\">{time}</Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n            })\r\n        } else {\r\n            return <ListGroup.Item>No notifications.</ListGroup.Item>\r\n        }\r\n    }\r\n\r\n    const timezoneConvert = (time) => {\r\n        var userTz = moment.tz.guess(true);\r\n        var time = moment.tz(time, config.url.TIMEZONE);\r\n\r\n        return time.tz(userTz);\r\n    }\r\n\r\n    // Calculate the day diff\r\n    const getDayDiff = timestamp => {\r\n        let a = moment();\r\n        let b = moment(timestamp);\r\n        let diff = a.diff(b, 'year');\r\n        if (diff === 0) {\r\n            diff = a.diff(b, 'month');\r\n            if (diff === 0) {\r\n                diff = a.diff(b, 'days');\r\n                if (diff === 0) {\r\n                    diff = a.diff(b, 'hour');\r\n                    if (diff === 0) {\r\n                        diff = a.diff(b, 'minute');\r\n                        if (diff === 0) {\r\n                            diff = a.diff(b, 'second');\r\n                            return `${diff} second(s) ago`;\r\n                        } else {\r\n                            return `${diff} minute(s) ago`;\r\n                        }\r\n                    } else {\r\n                        return `${diff} hour(s) ago`;\r\n                    }\r\n                } else {\r\n                    return `${diff} days(s) ago`;\r\n                }\r\n            } else {\r\n                return `${diff} month(s) ago`;\r\n            }\r\n        } else {\r\n            return `${diff} year(s) ago`;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md=\"12\">\r\n                <Card>\r\n                    <Card.Header>Notifications</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        {renderNotifications()}\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n\r\n}\r\n\r\nexport default Notification;","import React, {useState} from \"react\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Form, Modal, Pagination, Row, Spinner, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst Setting = (props) => {\r\n    \r\n    const [user, setUser] = useState({})\r\n    const [validated, setValidated] = useState(false);\r\n    const [errors, setErrors] = useState({})\r\n    const [saving, setSaving] = useState(false)\r\n\r\n    React.useEffect(() => {\r\n        fetchProfile(1)\r\n    }, [])\r\n\r\n    const fetchProfile = async event => {\r\n\r\n        const res = await axios.get('/profile')\r\n\r\n        setUser(res.data.data)\r\n\r\n        console.log(res.data.data);\r\n\r\n    }\r\n\r\n    const handleSettingSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setSaving(true)\r\n\r\n        try {\r\n            const res = await axios.post('/settings', user)\r\n            \r\n            setErrors({});\r\n\r\n            toast.success(\"Settings has been updated successfully.\", {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n\r\n            setSaving(false)\r\n        } catch (error) {\r\n            setErrors(error.response.data.data);\r\n        \r\n            toast.error(error.response.data.message, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n\r\n            setSaving(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Card>\r\n            <Form noValidate validated={validated} onSubmit={handleSettingSubmit}>\r\n                <Card.Body>\r\n                    <Card.Title>Personal Information</Card.Title>\r\n                    <Card.Text>\r\n                        <Row><Col>Name</Col></Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Form.Control \r\n                                placeholder=\"First name\"\r\n                                value={user.firstname}\r\n                                onChange={ (e) => setUser(prev => ({...prev, firstname : e.target.value})) } />\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control placeholder=\"Middle name\"\r\n                                value={user.middlename}\r\n                                onChange={ (e) => setUser(prev => ({...prev, middlename : e.target.value})) } />\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control placeholder=\"Last name\"\r\n                                value={user.lastname}\r\n                                onChange={ (e) => setUser(prev => ({...prev, lastname : e.target.value})) } />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Form.Group controlId=\"formGridAddress1\">\r\n                            <Form.Label>Phone number</Form.Label>\r\n                            <Form.Control placeholder=\"1234 Main St\"\r\n                            value={user.phone_number}\r\n                            onChange={ (e) => setUser(prev => ({...prev, phone_number : e.target.value})) } />\r\n                        </Form.Group>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                <Card.Body>\r\n                    <Card.Title>Security</Card.Title>\r\n                    <Card.Text>\r\n                        <Form.Group controlId=\"formGridEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control placeholder=\"Email\"\r\n                            value={user.email}\r\n                            onChange={ (e) => setUser(prev => ({...prev, email : e.target.value})) } \r\n                            isInvalid={errors.email} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {errors.email}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGridPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            onChange={ (e) => setUser(prev => ({...prev, password : e.target.value})) } \r\n                            isInvalid={errors.password}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {errors.password}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGridNewPassword\">\r\n                            <Form.Label>New Password</Form.Label>\r\n                            <Form.Control placeholder=\"New Password\"\r\n                            type=\"password\"\r\n                            onChange={ (e) => setUser(prev => ({...prev, new_password : e.target.value})) }\r\n                            isInvalid={errors.new_password} />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {errors.new_password}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGridConfirmPassword\">\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control placeholder=\"Confirm Password\"\r\n                            type=\"password\"\r\n                            onChange={ (e) => setUser(prev => ({...prev, new_password_confirmation : e.target.value})) } />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            {saving && <Spinner \r\n                            as=\"span\"\r\n                            animation=\"border\" \r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\" />} Update\r\n                        </Button>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Form>\r\n        </Card>\r\n        <ToastContainer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Setting;","import axios from \"axios\";\r\n\r\nexport const GetPackages = (props, url = '/packages') => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(url)\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const AddPackage = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post('/packages', data)\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_ADDED\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const EditPackage = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.put('/packages/' + data.id, data)\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_UPDATED\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const DeletePackage = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.delete('/packages/' + id)\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_DELETED\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n        \r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, ButtonGroup, Col, Form, Modal, Pagination, Row, Spinner, Table } from 'react-bootstrap';\r\nimport _, { map } from \"lodash\";\r\nimport axios from \"axios\";\r\nimport {AddPackage, DeletePackage, EditPackage, GetPackages} from \"../actions/packageAction\";\r\nimport AsyncSelect from 'react-select/async';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport moment from 'moment-timezone';\r\nimport {config} from '../utils/Constants'\r\n\r\nconst Package = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const packageList = useSelector(state => state.Package);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [reward, setReward] = useState({});\r\n    const [errors, setErrors] = useState({})\r\n    const [saving, setSaving] = useState(false)\r\n    const [fields, setFields] = useState([\r\n        {\r\n            'key': 'id',\r\n            'title': 'Name',\r\n            'type': 'hidden',\r\n            'placeholder': 'Package ID',\r\n            'control_id': 'formPackageId',\r\n            'hidden': true\r\n        },\r\n        {\r\n            'key': 'name',\r\n            'title': 'Name',\r\n            'type': 'text',\r\n            'isInvalid': false,\r\n            'placeholder': 'Enter package name',\r\n            'control_id': 'formPackageName',\r\n            'errorMsg': ['The name field is required.'],\r\n            'required': false\r\n        },\r\n        {\r\n            'key': 'description',\r\n            'title': 'Description',\r\n            'type': 'text',\r\n            'isInvalid': false,\r\n            'placeholder': 'Enter package description',\r\n            'control_id': 'formPackageDescription',\r\n            'errorMsg': ['The description field is required.'],\r\n            'required': false\r\n        },\r\n        {\r\n            'key': 'multiplier',\r\n            'title': 'Multiplier',\r\n            'type': 'text',\r\n            'isInvalid': false,\r\n            'placeholder': 'Enter package multiplier',\r\n            'control_id': 'formPackageMultiplier',\r\n            'errorMsg': ['The multiplier field is required.'],\r\n            'required': false\r\n        }\r\n    ])\r\n\r\n    const productName = props.match.params.product;\r\n\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (packageData) => {\r\n\r\n        setData({})\r\n\r\n        setShow(true);\r\n\r\n    }\r\n    const handleEditShow = (packageData) => {\r\n\r\n        clearFieldErrors()\r\n\r\n        packageData.rewards.map((reward, i) => {\r\n            reward['value'] = reward.reward_id\r\n            reward['label'] = reward.reward.name\r\n            return reward\r\n        })\r\n\r\n        setData(packageData)\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = (url = '/packages') => {\r\n\r\n        dispatch(GetPackages(props, url));\r\n\r\n    }\r\n\r\n    const clearFieldErrors = () => {\r\n        let tmpFields = fields;\r\n\r\n        setValidated(false)\r\n\r\n        tmpFields = tmpFields.map((item, i) => {\r\n            return ({...item, isInvalid: false})\r\n        })\r\n\r\n        setFields(tmpFields)\r\n\r\n        return tmpFields\r\n    }\r\n\r\n    const fieldErrors = (tmpFields, errorData) => {\r\n        for (const key in errorData) {\r\n\r\n            if (Object.hasOwnProperty.call(errorData, key)) {\r\n\r\n                const fieldError = errorData[key];\r\n                var index = fields.findIndex((item) => item.key === key)\r\n\r\n                tmpFields[index]['errorMsg'] = fieldError\r\n                tmpFields[index]['isInvalid'] = true\r\n                \r\n            }\r\n            \r\n        }\r\n\r\n        setFields(tmpFields)\r\n\r\n        setValidated(true)\r\n    }\r\n\r\n    const addPackage = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n        const tmpFields = clearFieldErrors();\r\n\r\n        setSaving(true)\r\n\r\n        if(form.checkValidity() !== false) {\r\n\r\n            if(data.id) {\r\n                dispatch(EditPackage(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n                    setSaving(false)\r\n\r\n                    toast.success(\"Package updated successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                }).catch((error) => {\r\n                    setSaving(false)\r\n\r\n                    if(typeof error.response.data.data != undefined) {\r\n                        var errorData = error.response.data.data\r\n\r\n                        fieldErrors(tmpFields, errorData)\r\n                    }\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            }\r\n            else {\r\n                dispatch(AddPackage(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n                    setSaving(false)\r\n\r\n                    toast.success(\"Package added successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                }).catch((error) => {\r\n                    setSaving(false)\r\n\r\n                    if(typeof error.response.data.data != undefined) {\r\n                        var errorData = error.response.data.data\r\n\r\n                        fieldErrors(tmpFields, errorData)\r\n                    }\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    let cancelTokenSource;\r\n    const fetchRewards = async (search) => {\r\n\r\n        if(typeof cancelTokenSource != typeof undefined) {\r\n            cancelTokenSource.cancel(\"Operation canceled due to new request.\")\r\n        }\r\n\r\n        cancelTokenSource = axios.CancelToken.source();\r\n\r\n        const res = await axios.get('/rewards', {\r\n            cancelToken: cancelTokenSource.token,\r\n            params: {\r\n                search: search\r\n            }\r\n        })\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n        \r\n        return options\r\n    }\r\n\r\n    const promiseRewardOptions = inputValue => new Promise(resolve => {\r\n\r\n        setTimeout(() => {\r\n            resolve(fetchRewards(inputValue));\r\n        }, 1000);\r\n\r\n    });\r\n\r\n    const handleDelete = id => {\r\n    \r\n        dispatch(DeletePackage(props, id))\r\n\r\n    }\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(packageList.data.links))\r\n        return packageList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const timezoneConvert = (time) => {\r\n        var userTz = moment.tz.guess(true);\r\n        var time = moment.tz(time, config.url.TIMEZONE);\r\n\r\n        return time.tz(userTz).format('YYYY-MM-DD hh:mm:ss A');\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(packageList.data.data)) {\r\n\r\n            return packageList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.name}</td>\r\n                    <td>{el.description}</td>\r\n                    <td>{el.multiplier}</td>\r\n                    <td>{timezoneConvert(el.created_at)}</td>\r\n                    <td>{timezoneConvert(el.updated_at)}</td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id)}}>Delete</Button>\r\n                            <Button onClick={e => handleEditShow(el)}>Edit</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(packageList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(packageList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{packageList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Button variant=\"primary\" onClick={handleShow}>\r\n                        Add Packages\r\n                    </Button>\r\n                </Col>\r\n        \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Form noValidate validated={validated} onSubmit={addPackage}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{data.id ? 'Update Package' : 'Add Packages'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            {fields.map((field, i) => {\r\n                                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        {field.type === 'number' ?                                        \r\n                                            <Form.Control \r\n                                                required={field.required}\r\n                                                isInvalid={field.isInvalid}\r\n                                                type={field.type} \r\n                                                placeholder={field.placeholder}\r\n                                                value={data[field.key]}\r\n                                                min={field.min}\r\n                                                onChange={ (e) => setData(prev => ({...prev, [field.key] : parseFloat(e.target.value)})) }\r\n                                            />\r\n                                        :\r\n                                            <Form.Control \r\n                                                required={field.required}\r\n                                                isInvalid={field.isInvalid}\r\n                                                type={field.type} \r\n                                                placeholder={field.placeholder}\r\n                                                value={data[field.key]}\r\n                                                onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                            />\r\n                                        }\r\n                                        \r\n                                        {field.isInvalid && <Form.Control.Feedback type=\"invalid\">\r\n                                          {field.errorMsg}\r\n                                        </Form.Control.Feedback>}\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            })}\r\n                            <AsyncSelect key={0} isMulti cacheOptions defaultOptions defaultValue={data.rewards} loadOptions={promiseRewardOptions} onChange={value => setData(prev => ({...prev, 'rewards' : value}))} placeholder=\"None\" />\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                {saving && <Spinner \r\n                                as=\"span\"\r\n                                animation=\"border\" \r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\" />} Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table responsive hover size=\"sm\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n                                <th>Multiplier</th>\r\n                                <th>Created</th>\r\n                                <th>Updated</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {showData()}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Pagination size=\"sm\" className=\"float-right\">                    \r\n                        {showPagination()}\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Package;","import axios from \"axios\";\r\n\r\nconst apiRoute = '/actions'\r\n\r\nexport const GetData = (props, url = apiRoute) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"ACTION_REQUEST\"\r\n    })\r\n\r\n    try {\r\n\r\n        const res = await axios.get(url)\r\n\r\n        dispatch({\r\n            type: \"ACTION_FETCH\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"ACTION_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const AddData = (props, data) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"ACTION_REQUEST\"\r\n    })\r\n\r\n    try {\r\n        \r\n        const res = await axios.post(apiRoute, data)\r\n\r\n        dispatch({\r\n            type: \"ACTION_ADD\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"ACTION_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"ACTION_REQUEST\"\r\n    })\r\n\r\n    try {\r\n\r\n        const res = await axios.put(apiRoute + '/' + data.id, data)\r\n\r\n        dispatch({\r\n            type: \"ACTION_UPDATE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n        \r\n        dispatch({\r\n            type: \"ACTION_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"ACTION_REQUEST\"\r\n    })\r\n\r\n    try {\r\n\r\n        const res = await axios.delete(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"ACTION_DELETE\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n        \r\n        dispatch({\r\n            type: \"ACTION_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n        \r\n    }\r\n        \r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, ButtonGroup, Card, Col, Form, Modal, Pagination, Row, Spinner, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport {AddData, DeleteData, EditData, GetData} from \"../actions/actionAction\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport moment from 'moment-timezone';\r\nimport {config} from '../utils/Constants'\r\n\r\nconst AdminAction = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const actionList = useSelector(state => state.Action);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [saving, setSaving] = useState(false)\r\n    const fields = [\r\n        {\r\n            'key': 'id',\r\n            'title': 'Name',\r\n            'type': 'hidden',\r\n            'placeholder': 'Action ID',\r\n            'control_id': 'formActionId',\r\n            'hidden': true\r\n        },\r\n        {\r\n            'key': 'name',\r\n            'title': 'Name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter action name',\r\n            'control_id': 'formActionName',\r\n            'errorMsg': 'Please provide action name.',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'description',\r\n            'title': 'Description',\r\n            'type': 'text',\r\n            'placeholder': 'Enter action description',\r\n            'control_id': 'formActionDescription',\r\n            'errorMsg': 'Please provide action description.',\r\n            'required': true\r\n        }\r\n    ];\r\n\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {\r\n\r\n        setData({})\r\n\r\n        setShow(true);\r\n\r\n    }\r\n    const handleEditShow = (val) => {\r\n\r\n        setData(val)\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    const fetchData = (url = '/actions') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n            setSaving(true)\r\n\r\n            if(data.id) {\r\n                dispatch(EditData(props, data))\r\n                .then(() => {\r\n                    setSaving(false)\r\n                    setShow(false)\r\n\r\n                    toast.success(\"Action updated successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                }).catch((error) => {\r\n                    setSaving(false)\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            } else {\r\n                dispatch(AddData(props, data))\r\n                .then(() => {\r\n                    setSaving(false)\r\n                    setShow(false)\r\n\r\n                    toast.success(\"Action added successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                }).catch((error) => {\r\n                    setSaving(false)\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleDelete = id => {\r\n    \r\n        dispatch(DeleteData(props, id))\r\n\r\n    }\r\n\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(actionList.data.links))\r\n        return actionList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const timezoneConvert = (time) => {\r\n        var userTz = moment.tz.guess(true);\r\n        var time = moment.tz(time, config.url.TIMEZONE);\r\n\r\n        return time.tz(userTz).format('YYYY-MM-DD hh:mm:ss A');\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(actionList.data.data)) {\r\n\r\n            return actionList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.name}</td>\r\n                    <td>{el.description}</td>\r\n                    <td>{timezoneConvert(el.created_at)}</td>\r\n                    <td>{timezoneConvert(el.updated_at)}</td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id)}}>Delete</Button>\r\n                            <Button onClick={e => handleEditShow(el)}>Edit</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(actionList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(actionList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{actionList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Button variant=\"primary\" onClick={handleShow}>\r\n                        Add Action\r\n                    </Button>\r\n                </Col>\r\n        \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{data.id ? 'Update Action' : 'Add Action'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            {fields.map((field, i) => {\r\n                                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        <Form.Control \r\n                                            required={field.required}\r\n                                            type={field.type} \r\n                                            placeholder={field.placeholder}\r\n                                            value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                            onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                          {field.errorMsg}\r\n                                        </Form.Control.Feedback>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            })}\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                            {saving && <Spinner \r\n                                as=\"span\"\r\n                                animation=\"border\" \r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\" />} Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table responsive hover size=\"sm\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n                                <th>Created</th>\r\n                                <th>Updated</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {showData()}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Pagination size=\"sm\" className=\"float-right\">                    \r\n                        {showPagination()}\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst UserAction = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const actionList = useSelector(state => state.Action);\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(actionList.data.data)) {\r\n\r\n            return actionList.data.data.map((el, key) => {\r\n\r\n                return <Col md={4} className=\"mb-3\">\r\n                    <Card key={key}>\r\n                        <Card.Body>\r\n                            <Card.Title>{el.name}</Card.Title>\r\n                            <Card.Text>{el.description}</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            })\r\n\r\n        }\r\n\r\n        if(actionList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(actionList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{actionList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchData()\r\n\r\n    }, [])\r\n\r\n    const fetchData = (url = '/actions') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"pt-3\">\r\n                {showData()}\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst Init  = (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminAction(props)\r\n\r\n    } else {\r\n\r\n        return UserAction(props)\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default AdminAction","import axios from \"axios\";\r\n\r\nconst apiRoute = '/campaigns'\r\n\r\nexport const GetData = (props, url = apiRoute) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(url)\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FETCH\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const GetDataById = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FETCH\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const AddData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post(apiRoute, data)\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_ADD\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.put(apiRoute + '/' + data.id, data)\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_UPDATE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.delete(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_DELETE\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        console.log(error.response.data);\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}","import React, {useState, useRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Form, Modal, Pagination, Row, Spinner, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport {AddData, DeleteData, EditData, GetData} from \"../actions/campaignAction\";\r\nimport Moment from 'react-moment';\r\nimport AsyncSelect from 'react-select/async';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport moment from 'moment-timezone';\r\nimport {config} from '../utils/Constants'\r\n\r\nconst AdminCampaign = (props) => {\r\n    \r\n    const dispatch = useDispatch();    \r\n    const asyncSelReward = useRef(null);\r\n    const asyncSelAction = useRef(null);\r\n    const dataList = useSelector(state => state.Campaign);\r\n    const [campaignList, setCampaignList] = useState({\r\n        loading: false,\r\n        data: [],\r\n        errorMsg: ''\r\n    });\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [reward, setReward] = useState({});\r\n    const [showAddCampaign, setShowAddCampaign] = useState(false);\r\n    const [showAddReward, setShowAddReward] = useState(false);\r\n    const [saving, setSaving] = useState(false)\r\n    const fields = [\r\n        {\r\n            'key': 'id',\r\n            'title': 'ID',\r\n            'type': 'hidden',\r\n            'placeholder': 'Campaign ID',\r\n            'control_id': 'formCampaignId',\r\n            'hidden': true\r\n        },\r\n        {\r\n            'key': 'name',\r\n            'title': 'Name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter campaign name',\r\n            'errorMsg': 'Please provide campaign name.',\r\n            'control_id': 'formCampaignName',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'description',\r\n            'title': 'Description',\r\n            'type': 'text',\r\n            'placeholder': 'Enter campaign description',\r\n            'errorMsg': 'Please provide campaign description.',\r\n            'control_id': 'formCampaignDescription',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'start_date',\r\n            'title': 'Start Date',\r\n            'type': 'datepicker',\r\n            'placeholder': 'Enter campaign start date',\r\n            'errorMsg': 'Please provide campaign name.',\r\n            'control_id': 'formStartDescription',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'end_date',\r\n            'title': 'End Date',\r\n            'type': 'datepicker',\r\n            'placeholder': 'Enter campaign end date',\r\n            'control_id': 'formEndDescription',\r\n            'required': true\r\n        }\r\n    ];\r\n    \r\n    const handleCloseAddCampaign = () => setShowAddCampaign(false);\r\n\r\n    const handleShow = () => {\r\n\r\n        setData({\r\n            'start_date': new Date(),\r\n            'end_date': new Date()\r\n        })\r\n\r\n        setShowAddCampaign(true);\r\n\r\n    }\r\n\r\n    const handleEditShow = (val) => {\r\n\r\n        setData({\r\n            'id': val.id,\r\n            'name': val.name,\r\n            'description': val.description,\r\n            'start_date': new Date(val.start_date),\r\n            'end_date': new Date(val.end_date)\r\n        })\r\n\r\n        setShowAddCampaign(true);\r\n\r\n    }\r\n\r\n    const handleCloseAddReward = () => setShowAddReward(false);\r\n\r\n    const handleRewardsShow = async (campaign_id) => {\r\n\r\n        setShowAddReward(true);\r\n\r\n        setCampaignList({...campaignList, loading: true});\r\n        \r\n        const res = await axios.get('/campaigns/' + campaign_id)\r\n        var data = res.data.data;\r\n\r\n        setCampaignList({...campaignList, data: data, loading: false});\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchData()\r\n\r\n        // fetchActions()\r\n\r\n        // fetchRewards()\r\n\r\n    }, [])\r\n\r\n    const fetchData = (url = '/campaigns') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    let cancelActionTokenSource;\r\n    const fetchActions = async (search) => {\r\n\r\n        if(typeof cancelActionTokenSource != typeof undefined) {\r\n            cancelActionTokenSource.cancel(\"Operation canceled due to new request.\")\r\n        }\r\n\r\n        cancelActionTokenSource = axios.CancelToken.source();\r\n\r\n        const res = await axios.get('/actions', {\r\n            cancelToken: cancelActionTokenSource.token,\r\n            params: {\r\n                search: search\r\n            }\r\n        })\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n\r\n        return options\r\n        \r\n    }\r\n\r\n    const promiseActionOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(fetchActions(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    let cancelRewardTokenSource;\r\n    const fetchRewards = async (search) => {\r\n\r\n        if(typeof cancelRewardTokenSource != typeof undefined) {\r\n            cancelRewardTokenSource.cancel(\"Operation canceled due to new request.\")\r\n        }\r\n\r\n        cancelRewardTokenSource = axios.CancelToken.source();\r\n\r\n        const res = await axios.get('/rewards', {\r\n            cancelToken: cancelRewardTokenSource.token,\r\n            params: {\r\n                search: search\r\n            }\r\n        })\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n        \r\n        return options\r\n    }\r\n\r\n    const promiseRewardOptions = inputValue => new Promise(resolve => {\r\n\r\n        setTimeout(() => {\r\n            resolve(fetchRewards(inputValue));\r\n        }, 1000);\r\n\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n            setSaving(true);\r\n\r\n            if(data.id) {\r\n                dispatch(EditData(props, data))\r\n                .then(() => {\r\n                    setSaving(false);\r\n                    setShowAddCampaign(false)\r\n                    \r\n                    toast.success(\"Campaign added successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false);\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            }\r\n            else {\r\n                dispatch(AddData(props, data))\r\n                .then(() => {\r\n                    setSaving(false);\r\n                    setShowAddCampaign(false)\r\n                    \r\n                    toast.success(\"Campaign added successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false);\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const addReward = async () => {\r\n        const data = {...reward, campaign_id: campaignList.data.id}\r\n\r\n        setSaving(true);\r\n        const res = await axios.post('/campaign_rewards', data)\r\n        const newCampaign = res.data.data;\r\n        const tmp = campaignList\r\n        setSaving(false)\r\n\r\n        setReward({});\r\n        asyncSelReward.current.select.select.clearValue();\r\n        asyncSelAction.current.select.select.clearValue();\r\n        \r\n        tmp.data.campaigns.data = [newCampaign, ...tmp.data.campaigns.data];\r\n\r\n        setCampaignList({...campaignList, ...tmp});\r\n\r\n    }\r\n\r\n    const handleDelete = async (id, key) => {\r\n\r\n        switch (key) {\r\n            case 'campaign':\r\n\r\n                const res = await axios.delete('campaign_rewards/' + id)\r\n\r\n                const data = res.data.data;\r\n\r\n                var tmp = campaignList.data\r\n                tmp.campaigns.data = tmp.campaigns.data.filter((item) => item.id !== data.id)\r\n                \r\n                setCampaignList({...campaignList, data: tmp});\r\n\r\n                break;\r\n        \r\n            default:\r\n    \r\n                dispatch(DeleteData(props, id))\r\n\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    const fetchCampaignData = async (url) => {\r\n\r\n        const res = await axios.get(url)\r\n        const data = res.data.data\r\n\r\n        setCampaignList({...campaignList, data: data});\r\n\r\n    }\r\n\r\n    const showPagination = (key) => {\r\n        switch (key) {\r\n            case 'campaigns':\r\n\r\n                if(!_.isEmpty(campaignList.data.campaigns) && !_.isEmpty(campaignList.data.campaigns.links))\r\n                return campaignList.data.campaigns.links.map((page, i) => {\r\n                    return <Pagination.Item key={i} active={page.active} onClick={() => fetchCampaignData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                        __html: page.label\r\n                    }}></span></Pagination.Item>\r\n                })\r\n                \r\n                break;\r\n        \r\n            default:\r\n\r\n                if(!_.isEmpty(dataList.data.links))\r\n                return dataList.data.links.map((page, i) => {\r\n                    return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                        __html: page.label\r\n                    }}></span></Pagination.Item>\r\n                })\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    const timezoneConvert = (time) => {\r\n        var userTz = moment.tz.guess(true);\r\n        var time = moment.tz(time, config.url.TIMEZONE);\r\n\r\n        return time.tz(userTz);\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.name} <Badge variant={(el.is_expired ? \"danger\": \"success\")}>{(el.is_expired ? \"expired\": \"active\")}</Badge></td>\r\n                    <td>{el.description}</td>\r\n                    <td><Moment format=\"YYYY/MM/DD\">{timezoneConvert(el.start_date)}</Moment></td>\r\n                    <td><Moment format=\"YYYY/MM/DD\">{timezoneConvert(el.end_date)}</Moment></td>\r\n                    <td><Moment format=\"YYYY/MM/DD hh:mm:ss\">{timezoneConvert(el.created_at)}</Moment></td>\r\n                    <td><Moment format=\"YYYY/MM/DD hh:mm:ss\">{timezoneConvert(el.updated_at)}</Moment></td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"success\" onClick={() => {handleRewardsShow(el.id)}}>Rewards</Button>\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id)}}>Delete</Button>\r\n                            <Button onClick={e => handleEditShow(el)}>Edit</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"7\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"7\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"7\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const showCampaigns = () => {\r\n\r\n        if(!_.isEmpty(campaignList.data.campaigns) && !_.isEmpty(campaignList.data.campaigns.data)) {\r\n\r\n            return campaignList.data.campaigns.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.reward.name}</td>\r\n                    <td>{el.action.name}</td>\r\n                    <td>{el.quantity}</td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id, 'campaign')}}>Delete</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(campaignList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(campaignList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Button variant=\"primary\" onClick={handleShow}>\r\n                        Add Campaign\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table responsive striped bordered hover size=\"sm\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n                                <th>Start</th>\r\n                                <th>End</th>\r\n                                <th>Created</th>\r\n                                <th>Updated</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {showData()}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Pagination size=\"sm\" className=\"float-right\">                    \r\n                        {showPagination()}\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* Start Modals */}\r\n        \r\n            <Modal show={showAddCampaign} onHide={handleCloseAddCampaign}>\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{!_.isUndefined(data.id) ? 'Update Campaign' : 'Add Campaign'}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {fields.map((field, i) => {\r\n                            if(field.type === 'text') {\r\n                                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        <Form.Control \r\n                                            required={field.required}\r\n                                            type={field.type} \r\n                                            placeholder={field.placeholder}\r\n                                            value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                            onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                          {field.errorMsg}\r\n                                        </Form.Control.Feedback>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            } else if(field.type === 'select') {\r\n                                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        <Form.Control \r\n                                            size=\"sm\"\r\n                                            required={field.required}\r\n                                            as={field.type} \r\n                                            placeholder={field.placeholder}\r\n                                            value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                            onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }>\r\n\r\n                                            {field.options.map((option, i) => {\r\n                                                return <option key={i} value={option.key}>{option.label}</option>\r\n                                            })}\r\n\r\n                                        </Form.Control>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {field.errorMsg}\r\n                                        </Form.Control.Feedback>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            } else if(field.type === 'datepicker') {\r\n                                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                <Col sm={9}>\r\n                                    <DatePicker className=\"form-control\" minDate={new Date()} dateFormat=\"MM/dd/yyyy\" selected={data[field.key]} onChange={date => setData(prev => ({...prev, [field.key] : (date == null ? new Date() : date)}))} required={field.required} />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {field.errorMsg}\r\n                                    </Form.Control.Feedback>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            }\r\n                        })}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleCloseAddCampaign}>\r\n                        Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            {saving && <Spinner \r\n                            as=\"span\"\r\n                            animation=\"border\" \r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\" />} Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        \r\n            <Modal show={showAddReward} onHide={handleCloseAddReward}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Rewards</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className=\"mb-2\" controlId=\"formAction\">\r\n                            <Form.Label>Action</Form.Label>\r\n                            <AsyncSelect ref={asyncSelReward} defaultOptions loadOptions={promiseActionOptions} onChange={value => {(value != null) ? setReward(prev => ({...prev, 'action_id' : value.value})) : setReward(prev => ({}))}} />\r\n                            <Form.Text className=\"text-muted\">\r\n                            Choose action first.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-2\" controlId=\"formReward\">\r\n                            <Form.Label>Reward</Form.Label>\r\n                            <AsyncSelect ref={asyncSelAction} defaultOptions loadOptions={promiseRewardOptions} onChange={value => {(value != null) ? setReward(prev => ({...prev, 'reward_id' : value.value})) : setReward(prev => ({}))} } />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-2\" controlId=\"formQuantity\">\r\n                            <Form.Label>Quantity</Form.Label>\r\n                            <Form.Control type=\"number\" placeholder=\"Enter qty\" onChange={e => setReward(prev => ({...prev, 'quantity' : e.target.value}))} value={!_.isUndefined(reward.quantity) ? reward.quantity : ''} />\r\n                        </Form.Group>\r\n                        <Button onClick={addReward}>\r\n                        {saving && <Spinner \r\n                            as=\"span\"\r\n                            animation=\"border\" \r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\" />} Add\r\n                        </Button>\r\n                    </Form>\r\n                    <Row className=\"mt-2\">     \r\n                        <Col md=\"12\">\r\n                            <Table responsive striped bordered hover size=\"sm\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Reward</th>\r\n                                        <th>Action</th>\r\n                                        <th>Qty</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {showCampaigns()}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                            <Pagination size=\"sm\" className=\"float-right\">                    \r\n                                {showPagination('campaigns')}\r\n                            </Pagination>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* End Modals */}\r\n\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst UserCampaign = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const dataList = useSelector(state => state.Campaign);\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n\r\n                return <Col md={4}>\r\n                    <Card key={key}>\r\n                        <Card.Body>\r\n                            <Card.Title>{el.name}</Card.Title>\r\n                            <Card.Text>\r\n                                <Row><Col>{el.description}</Col></Row>\r\n                                <Row><Col>Expiration: {el.end_date}</Col></Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchData()\r\n\r\n    }, [])\r\n\r\n    const fetchData = (url = '/campaigns') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"pt-3\">\r\n                {showData()}\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminCampaign(props)\r\n\r\n    } else {\r\n\r\n        return UserCampaign(props)\r\n\r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, ButtonGroup, Col, Form, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nconst CampaignDetail = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const campaignid = props.match.params.campaign;\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const [campaign, setCampaign] = useState({})\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = async event => {\r\n\r\n        const res = await axios.get('/campaigns/' + campaignid)\r\n\r\n        console.log(res.data.data);\r\n\r\n        setCampaign(res.data.data)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md=\"12\">{campaign.name}</Col>\r\n                <Col md=\"12\">{campaign.description}</Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default CampaignDetail;","import axios from \"axios\";\r\n\r\nconst apiRoute = '/rewards'\r\n\r\nexport const GetData = (params, url = apiRoute) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REWARD_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(url, {\r\n            params: params\r\n        })\r\n\r\n        dispatch({\r\n            type: \"REWARD_FETCH\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"REWARD_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const AddData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REWARD_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post(apiRoute, data)\r\n\r\n        dispatch({\r\n            type: \"REWARD_ADD\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"REWARD_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REWARD_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.put(apiRoute + '/' + data.id, data)\r\n\r\n        dispatch({\r\n            type: \"REWARD_UPDATE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"REWARD_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REWARD_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.delete(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"REWARD_DELETE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"REWARD_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Form, Modal, Pagination, Row, Spinner, Table, ToggleButton } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport {AddData, DeleteData, EditData, GetData} from \"../actions/rewardAction\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport moment from 'moment-timezone';\r\nimport {config} from '../utils/Constants'\r\n\r\nconst AdminReward = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const dataList = useSelector(state => state.Reward);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [saving, setSaving] = useState(false)\r\n    const [deleting, setDeleting] = useState(false)\r\n    const [fields, setFields] = useState([\r\n        {\r\n            'key': 'id',\r\n            'title': 'Name',\r\n            'type': 'hidden',\r\n            'placeholder': 'Reward ID',\r\n            'control_id': 'formActionId',\r\n            'hidden': true\r\n        },\r\n        {\r\n            'key': 'type',\r\n            'title': 'Type',\r\n            'type': 'select',\r\n            'placeholder': 'Enter action type',\r\n            'errorMsg': ['Please select type.'],\r\n            'options': [\r\n                {\r\n                    'label': 'Item',\r\n                    'key': 'item'\r\n                }, \r\n                {\r\n                    'label': 'Discount',\r\n                    'key': 'discount'\r\n                },\r\n                {\r\n                    'label': 'Points',\r\n                    'key': 'points'\r\n                }\r\n            ],\r\n            'control_id': 'formActionType'\r\n        },\r\n        {\r\n            'key': 'value',\r\n            'title': 'Value',\r\n            'type': 'number',\r\n            'min': 0,\r\n            'placeholder': 'Enter reward value',\r\n            'errorMsg': ['Please provide reward value.'],\r\n            'control_id': 'formValue'\r\n        },\r\n        {\r\n            'key': 'cost',\r\n            'title': 'Cost',\r\n            'type': 'number',\r\n            'min': 0,\r\n            'placeholder': 'Enter reward cost',\r\n            'errorMsg': ['Please provide reward cost.'],\r\n            'control_id': 'formCost'\r\n        },\r\n        {\r\n            'key': 'name',\r\n            'title': 'Name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter reward name',\r\n            'errorMsg': ['Please provide reward name.'],\r\n            'control_id': 'formActionName'\r\n        },\r\n        {\r\n            'key': 'description',\r\n            'title': 'Description',\r\n            'type': 'text',\r\n            'placeholder': 'Enter reward description',\r\n            'errorMsg': ['Please provide reward description.'],\r\n            'control_id': 'formActionDescription'\r\n        }\r\n    ])\r\n\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {\r\n\r\n        clearFieldErrors()\r\n        setData({\r\n            'type': 'item'\r\n        })\r\n        setShow(true);\r\n\r\n    }\r\n    const handleEditShow = (val) => {\r\n\r\n        clearFieldErrors()\r\n        setData(val)\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = (url = '/rewards') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    const clearFieldErrors = () => {\r\n        let tmpFields = fields;\r\n\r\n        setValidated(false)\r\n\r\n        tmpFields = tmpFields.map((item, i) => {\r\n            return ({...item, isInvalid: false})\r\n        })\r\n\r\n        setFields(tmpFields)\r\n\r\n        return tmpFields\r\n    }\r\n\r\n    const fieldErrors = (tmpFields, errorData) => {\r\n        for (const key in errorData) {\r\n\r\n            if (Object.hasOwnProperty.call(errorData, key)) {\r\n\r\n                const fieldError = errorData[key];\r\n                var index = fields.findIndex((item) => item.key === key)\r\n\r\n                tmpFields[index]['errorMsg'] = fieldError\r\n                tmpFields[index]['isInvalid'] = true\r\n                \r\n            }\r\n            \r\n        }\r\n\r\n        setFields(tmpFields)\r\n\r\n        console.log(tmpFields);\r\n\r\n        setValidated(true)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n        const tmpFields = clearFieldErrors()\r\n\r\n        setSaving(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n\r\n            if(data.id) {\r\n                dispatch(EditData(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n                    setSaving(false)\r\n\r\n                    toast.success(\"Reward edited successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    setSaving(false)\r\n\r\n                    if(typeof error.response.data.data != undefined) {\r\n                        var errorData = error.response.data.data\r\n\r\n                        fieldErrors(tmpFields, errorData)\r\n                    }\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            }\r\n            else {\r\n                dispatch(AddData(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n                    setSaving(false)\r\n\r\n                    toast.success(\"Reward has been added successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n\r\n                    if(typeof error.response.data.data != undefined) {\r\n                        var errorData = error.response.data.data\r\n\r\n                        fieldErrors(tmpFields, errorData)\r\n                    }\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleDelete = id => {\r\n    \r\n        // setDeleting(true)\r\n\r\n        dispatch(DeleteData(props, id))\r\n        .then(() => {\r\n            setDeleting(false)\r\n\r\n            toast.success(\"Reward has been deleted successfully\", {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            setDeleting(false)\r\n\r\n            toast.error(error.response.data.message, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n\r\n        })\r\n\r\n    }\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(dataList.data.links))\r\n        return dataList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const timezoneConvert = (time) => {\r\n        var userTz = moment.tz.guess(true);\r\n        var time = moment.tz(time, config.url.TIMEZONE);\r\n\r\n        return time.tz(userTz).format('YYYY-MM-DD hh:mm:ss A');\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.name}</td>\r\n                    <td>{el.description}</td>\r\n                    <td>{el.type}</td>\r\n                    <td>{parseFloat(el.value)}</td>\r\n                    <td>{parseFloat(el.cost)}</td>\r\n                    <td>{timezoneConvert(el.created_at)}</td>\r\n                    <td>{timezoneConvert(el.updated_at)}</td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id)}}>{deleting ? 'Deleting...' : 'Delete'}</Button>\r\n                            <Button onClick={e => handleEditShow(el)}>Edit</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Button variant=\"primary\" onClick={handleShow}>\r\n                        Add Reward\r\n                    </Button>\r\n                </Col>\r\n        \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{data.id ? 'Update Reward' : 'Add Reward'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            {fields.map((field, i) => {\r\n                                if(field.type === 'text') {\r\n                                    return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                        <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                        <Col sm={9}>\r\n                                            <Form.Control \r\n                                                required={field.required}\r\n                                                isInvalid={field.isInvalid}\r\n                                                type={field.type} \r\n                                                placeholder={field.placeholder}\r\n                                                value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                                onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                              {field.errorMsg}\r\n                                            </Form.Control.Feedback>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                } else if(field.type === 'number' && field.key != 'cost') {\r\n                                    return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                        <Form.Label column sm={3}>{data.type === 'discount' ? 'Percentage' : (data.type === 'item' ? 'Quantity' : 'Points')}</Form.Label>\r\n                                        <Col sm={9}>\r\n                                            <Form.Control \r\n                                                required={field.required}\r\n                                                isInvalid={field.isInvalid}\r\n                                                type={field.type} \r\n                                                placeholder={field.placeholder}\r\n                                                value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                                min={field.min}\r\n                                                onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                              {field.errorMsg}\r\n                                            </Form.Control.Feedback>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                } else if(field.type === 'number' && field.key === 'cost' && (data.type == 'item' || data.type == 'discount')) {\r\n                                    return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                        <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                        <Col sm={9}>\r\n                                            <Form.Control \r\n                                                required={field.required}\r\n                                                isInvalid={field.isInvalid}\r\n                                                type={field.type} \r\n                                                placeholder={field.placeholder}\r\n                                                value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                                min={field.min}\r\n                                                onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                              {field.errorMsg}\r\n                                            </Form.Control.Feedback>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                } else if(field.type === 'select') {\r\n                                    return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                        <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                        <Col sm={9}>\r\n                                            <Form.Control \r\n                                                size=\"sm\"\r\n                                                required={field.required}\r\n                                                isInvalid={field.isInvalid}\r\n                                                as={field.type} \r\n                                                placeholder={field.placeholder}\r\n                                                value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                                onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }>\r\n\r\n                                                {field.options.map((option, i) => {\r\n                                                    return <option key={i} value={option.key}>{option.label}</option>\r\n                                                })}\r\n\r\n                                            </Form.Control>\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                            {field.errorMsg}\r\n                                            </Form.Control.Feedback>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                }\r\n                            })}\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                {saving && <Spinner \r\n                                as=\"span\"\r\n                                animation=\"border\" \r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\" />} Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table responsive hover size=\"sm\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n                                <th>Type</th>\r\n                                <th>Value/Qty.</th>\r\n                                <th>Cost</th>\r\n                                <th>Created</th>\r\n                                <th>Updated</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {showData()}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Pagination size=\"sm\" className=\"float-right\">                    \r\n                        {showPagination()}\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst UserReward = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const dataList = useSelector(state => state.Reward);\r\n\r\n    const handleRedeem = async (reward_id) => {\r\n        \r\n        try {\r\n        \r\n            const res = await axios.post('redeem', {'reward_id' : reward_id})\r\n    \r\n            var result = res.data.data\r\n\r\n            toast.success(\"Redemption successful\", {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n            \r\n        } catch (error) {\r\n        \r\n            toast.error(error.response.data.message, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n\r\n                return <Col md={4} key={key} className=\"mb-3 reward-content\">\r\n                    <Card style={{ height: '100%' }}>\r\n                        <Card.Body>\r\n                            <Card.Title>{el.name}</Card.Title>\r\n                            <Card.Text>{el.description}</Card.Text>\r\n                        </Card.Body>\r\n                        {el.type != 'points' ? <Button variant=\"dark\" onClick={() => handleRedeem(el.id)}>Redeem ({el.cost} PTS)</Button> : ''}\r\n                    </Card>\r\n                </Col>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(dataList.data.links))\r\n        return dataList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const fetchData = (url = '/rewards', params = {}) => {\r\n\r\n        dispatch(GetData(params, url));\r\n\r\n    }\r\n\r\n    const [radioValue, setRadioValue] = useState('all');\r\n    const radios = [\r\n      { name: 'All', value: 'all' },\r\n      { name: 'Eligible', value: 'eligible' }\r\n    ];\r\n\r\n    const onFilterChange = (params) => {\r\n        fetchData('/rewards', params)\r\n\r\n        setRadioValue(params.show)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchData()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"pt-3\">\r\n                <Col md=\"12\">\r\n                    <Card className=\"reward-container ml-5 mr-5\">\r\n                        <Card.Body className=\"row\">\r\n                            <Col md=\"12\">\r\n                                <ButtonGroup toggle>\r\n                                    {radios.map((radio, idx) => (\r\n                                    <ToggleButton\r\n                                        key={idx}\r\n                                        id={`radio-${idx}`}\r\n                                        type=\"radio\"\r\n                                        variant=\"outline-warning\"\r\n                                        name=\"radio\"\r\n                                        value={radio.value}\r\n                                        checked={radioValue === radio.value}\r\n                                        onChange={(e) => onFilterChange({show: e.currentTarget.value})}\r\n                                    >\r\n                                        {radio.name}\r\n                                    </ToggleButton>\r\n                                    ))}\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                        </Card.Body>\r\n                        <Card.Body className=\"row\">\r\n                            {showData()}\r\n                        </Card.Body>\r\n                        <Card.Body className=\"row\">\r\n                            <Col md={12}>\r\n                                <Pagination size=\"sm\" className=\"float-right\">                    \r\n                                    {showPagination()}\r\n                                </Pagination>\r\n                            </Col>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminReward(props)\r\n\r\n    } else {\r\n\r\n        return UserReward(props)\r\n\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nconst apiRoute = '/transactions'\r\n\r\nexport const GetData = (props, url = apiRoute, params = {}) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(url, {params: params})\r\n\r\n        dispatch({\r\n            type: \"FETCH_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"FAIL\",\r\n            payload: error.response.data.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const AddData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post(apiRoute, data)\r\n\r\n        dispatch({\r\n            type: \"ADD_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"REQUEST\"\r\n    })\r\n\r\n    await axios.put(apiRoute + '/' + data.id, data)\r\n    .then((res) => {\r\n\r\n        dispatch({\r\n            type: \"UPDATE_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n\r\n    })\r\n    .catch((error) => {\r\n        if(error.response) {\r\n            dispatch({\r\n                type: \"FAIL\",\r\n                payload: error.response.data.message\r\n            })\r\n        }\r\n    })\r\n    \r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REQUEST\"\r\n        })\r\n\r\n        const res = await axios.delete(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"DELETE_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}","import React, {useState, useRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Accordion, Badge, Button, ButtonGroup, Col, Form, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport {AddData, DeleteData, EditData, GetData} from \"../actions/transactionAction\";\r\nimport AsyncSelect from 'react-select/async';\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport 'bootstrap-daterangepicker/daterangepicker.css';\r\nimport moment from \"moment\";\r\n\r\nconst AdminTransaction = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const transactionList = useSelector(state => state.Transaction);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [reward, setReward] = useState({});\r\n    const [filters, setFilters] = useState({\r\n        type: 'all'\r\n    });\r\n    const fields = [];\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [dialogShow, setDialogShow] = useState(false);\r\n    const [statusUpdateData, setStatusUpdateData] = useState({});\r\n  \r\n    const handleDialogClose = () => {\r\n        setDialogShow(false);\r\n        setStatusUpdateData({});\r\n    }\r\n    \r\n    const handleDialogConfirm = async () => {\r\n        await axios.put('transactions/' + statusUpdateData.id, statusUpdateData)\r\n        .then((res) => {\r\n    \r\n            dispatch({\r\n                type: \"UPDATE_SUCCESS\",\r\n                payload: res.data.data\r\n            })\r\n\r\n            handleDialogClose()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response) {\r\n                dispatch({\r\n                    type: \"FAIL\",\r\n                    payload: error.response.data.message\r\n                })\r\n            }\r\n        })\r\n    }\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (packageData) => {\r\n\r\n        setData({})\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = (url = '/transactions', params = filters) => {\r\n\r\n        dispatch(GetData(props, url, params));\r\n\r\n    }\r\n\r\n    const addPackage = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n\r\n            if(data.id) dispatch(EditData(props, data))\r\n            else dispatch(AddData(props, data))\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const fetchRewards = async () => {\r\n\r\n        const res = await axios.get('/rewards')\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n        \r\n        return options\r\n    }\r\n\r\n    const promiseRewardOptions = inputValue => new Promise(resolve => {\r\n\r\n        setTimeout(() => {\r\n            resolve(fetchRewards(inputValue));\r\n        }, 1000);\r\n\r\n    });\r\n\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(transactionList.data.links))\r\n        return transactionList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url, {})} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const handleTransactionStatusChange = (id, status) => {\r\n        setDialogShow(true);\r\n        setStatusUpdateData({\r\n            'id' : id,\r\n            'status' : status\r\n        })\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(transactionList.data.data)) {\r\n\r\n            return transactionList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.transaction_id}</td>\r\n                    <td>{el.type}</td>\r\n                    <td>{el.reference_no}</td>\r\n                    <td>{el.balance}</td>\r\n                    <td>{el.cost}</td>\r\n                    <td>{el.customer.name}</td>\r\n                    <td>{el.salesperson ? el.salesperson.name : ''}</td>\r\n                    <td>{el.created_at}</td>\r\n                    <td>{el.updated_at}</td>\r\n                    <td>\r\n                        <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                            <Form.Row>\r\n                                <Form.Control as=\"select\" size=\"sm\" custom value={el.status} onChange={(e) => handleTransactionStatusChange(el.id, e.target.value, el.status)}>\r\n                                    <option value=\"pending\">Pending</option>\r\n                                    <option value=\"cancelled\">Cancelled</option>\r\n                                    <option value=\"confirmed\">Confirmed</option>\r\n                                    <option value=\"completed\">Completed</option>\r\n                                </Form.Control>\r\n                            </Form.Row>\r\n                        </Form.Group>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(transactionList.loading) {\r\n\r\n            return <tr><td colSpan=\"10\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(transactionList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"10\" className=\"text-center\">{transactionList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"10\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const handleTypeChange = (val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, type : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    const handleFilterInputChange = (key, val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, [key] : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    const handleDateRangeChange = (start, end, label) => {\r\n        let tmpFilter = filters\r\n\r\n        start = start.format('YYYY-MM-DD');\r\n        end = end.format('YYYY-MM-DD');\r\n        tmpFilter = {...tmpFilter, 'start_date' : start, 'end_date' : end};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>Type</Form.Label>\r\n                            <Col lg={3}>\r\n                                <Form.Control as=\"select\" size=\"sm\" custom defaultValue={!_.isEmpty(filters) && !_.isEmpty(filters.type) ? filters.type : 'all'} onChange={(e) => handleTypeChange(e.target.value)}>\r\n                                <option value=\"all\">All</option>\r\n                                <option value=\"rewards\">Rewards</option>\r\n                                <option value=\"redeems\">Redeems</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Transaction ID\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. abcd1234\" onChange={(e) => handleFilterInputChange('transaction_id', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Reference No.\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. abcd1234\" onChange={(e) => handleFilterInputChange('reference_no', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Customer\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. John Doe\" onChange={(e) => handleFilterInputChange('customer', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Salesperson\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. Jane Doe\" onChange={(e) => handleFilterInputChange('salesperson', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Date\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                                <DateRangePicker\r\n                                initialSettings={{ startDate: moment(), endDate: moment() }}\r\n                                onCallback={handleDateRangeChange}\r\n                                >\r\n                                <input type=\"text\" className=\"form-control\" />\r\n                                </DateRangePicker>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Modal show={dialogShow} onHide={handleDialogClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Are you sure?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>You want to mark this as <b>{!_.isEmpty(statusUpdateData) ? statusUpdateData.status : '' }</b>?</p>\r\n                        {!_.isEmpty(statusUpdateData) && statusUpdateData.status == 'confirmed' ? <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Reference No.</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter reference no.\" onChange={ (e) => setStatusUpdateData(prev => ({...prev, 'reference_no' : e.target.value})) } />\r\n                        </Form.Group> : '' }\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleDialogClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={(e) => handleDialogConfirm()}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Col md={12}>\r\n                    <Table responsive hover size=\"sm\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>Transaction ID</th>\r\n                                <th>Type</th>\r\n                                <th>Reference No.</th>\r\n                                <th>Running Balance</th>\r\n                                <th>Total</th>\r\n                                <th>Customer</th>\r\n                                <th>Salesperson</th>\r\n                                <th>Created</th>\r\n                                <th>Updated</th>\r\n                                <th style={{width: \"10%\"}}>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {showData()}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Pagination size=\"sm\" className=\"float-right\">                    \r\n                        {showPagination()}\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst CustomerTransaction = (props) => {\r\n    const dispatch = useDispatch();\r\n    const transactionList = useSelector(state => state.Transaction);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [reward, setReward] = useState({});\r\n    const [filters, setFilters] = useState({\r\n        type: 'all'\r\n    });\r\n    const [dialogShow, setDialogShow] = useState(false);\r\n    const [statusUpdateData, setStatusUpdateData] = useState({});\r\n  \r\n    const handleDialogClose = () => {\r\n        setDialogShow(false);\r\n        setStatusUpdateData({});\r\n    }\r\n    \r\n    const handleDialogConfirm = async () => {\r\n        await axios.put('transactions/' + statusUpdateData.id, statusUpdateData)\r\n        .then((res) => {\r\n    \r\n            dispatch({\r\n                type: \"UPDATE_SUCCESS\",\r\n                payload: res.data.data\r\n            })\r\n\r\n            handleDialogClose()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response) {\r\n                dispatch({\r\n                    type: \"FAIL\",\r\n                    payload: error.response.data.message\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = (url = '/transactions', params = filters) => {\r\n\r\n        dispatch(GetData(props, url, params));\r\n\r\n    }\r\n\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(transactionList.data.links))\r\n        return transactionList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url, {})} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(transactionList.data.data)) {\r\n\r\n            return transactionList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.transaction_id}</td>\r\n                    <td>{el.type}</td>\r\n                    <td>{el.reference_no}</td>\r\n                    <td>{el.balance}</td>\r\n                    <td>{el.cost}</td>\r\n                    <td>{el.customer.name}</td>\r\n                    <td>{el.salesperson ? el.salesperson.name : ''}</td>\r\n                    <td>{el.created_at}</td>\r\n                    <td>{el.updated_at}</td>\r\n                    <td><Badge variant=\"info\">{el.status}</Badge></td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(transactionList.loading) {\r\n\r\n            return <tr><td colSpan=\"10\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(transactionList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"10\" className=\"text-center\">{transactionList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"10\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const handleTypeChange = (val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, type : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    const handleFilterInputChange = (key, val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, [key] : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    const handleDateRangeChange = (start, end, label) => {\r\n        let tmpFilter = filters\r\n\r\n        start = start.format('YYYY-MM-DD');\r\n        end = end.format('YYYY-MM-DD');\r\n        tmpFilter = {...tmpFilter, 'start_date' : start, 'end_date' : end};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>Type</Form.Label>\r\n                            <Col lg={3}>\r\n                                <Form.Control as=\"select\" size=\"sm\" custom defaultValue={!_.isEmpty(filters) && !_.isEmpty(filters.type) ? filters.type : 'all'} onChange={(e) => handleTypeChange(e.target.value)}>\r\n                                <option value=\"all\">All</option>\r\n                                <option value=\"rewards\">Rewards</option>\r\n                                <option value=\"redeems\">Redeems</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Transaction ID\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. abcd1234\" onChange={(e) => handleFilterInputChange('transaction_id', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Reference No.\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. abcd1234\" onChange={(e) => handleFilterInputChange('reference_no', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Salesperson\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. Jane Doe\" onChange={(e) => handleFilterInputChange('salesperson', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Date\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                                <DateRangePicker\r\n                                initialSettings={{ startDate: moment(), endDate: moment() }}\r\n                                onCallback={handleDateRangeChange}\r\n                                >\r\n                                <input type=\"text\" className=\"form-control\" />\r\n                                </DateRangePicker>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Modal show={dialogShow} onHide={handleDialogClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Are you sure?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>You want to mark this as <b>{!_.isEmpty(statusUpdateData) ? statusUpdateData.status : '' }</b>?</p>\r\n                        {!_.isEmpty(statusUpdateData) && statusUpdateData.status == 'confirmed' ? <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Reference No.</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter reference no.\" onChange={ (e) => setStatusUpdateData(prev => ({...prev, 'reference_no' : e.target.value})) } />\r\n                        </Form.Group> : '' }\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleDialogClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={(e) => handleDialogConfirm()}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Table responsive striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Transaction ID</th>\r\n                            <th>Type</th>\r\n                            <th>Reference No.</th>\r\n                            <th>Running Balance</th>\r\n                            <th>Total</th>\r\n                            <th>Customer</th>\r\n                            <th>Salesperson</th>\r\n                            <th>Created</th>\r\n                            <th>Updated</th>\r\n                            <th style={{width: \"10%\"}}>Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {showData()}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Pagination size=\"sm\" className=\"float-right\">                    \r\n                    {showPagination()}\r\n                </Pagination>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminTransaction(props)\r\n\r\n    } else {\r\n\r\n        return CustomerTransaction(props)\r\n\r\n    }\r\n}","import React, {useEffect, useState, useRef} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { Button, Container, Nav, Navbar, NavDropdown, Overlay, Popover } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport '../css/notifications.css'\r\nimport NotifyMe from 'react-notification-timeline';\r\nimport moment from 'moment-timezone';\r\nimport { config } from '../utils/Constants';\r\nimport { Bell, BellOff, BookOpen, AlertTriangle } from 'react-feather';\r\nimport {AddData, DeleteData, EditData, GetData, MarkAsRead} from \"../actions/notificationAction\";\r\n\r\nconst NotificationMenu = (props) => {\r\n\r\n    // State variabls\r\n    const dispatch = useDispatch();\r\n    const [showCount, setShowCount] = useState(false);\r\n    const [messageCount, setMessageCount] = useState(0);\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n    const [listen, setListen] = useState(false)\r\n\r\n    // Useref for the overlay\r\n    const ref = useRef(null);\r\n\r\n    // const [notifications, setNotifications] = useState({\r\n    //     loading: false,\r\n    //     data: []\r\n    // })\r\n    const auth = useSelector(state => state.Auth);\r\n    const notifications = useSelector(state => state.Notification);\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        processNotification()\r\n        \r\n    }, [notifications])\r\n\r\n    const fetchData = (url = '/notifications') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    console.log('notification', notifications);\r\n\r\n    const processNotification = async () => {\r\n        if(notifications.data && notifications.data.data) {\r\n            let data = notifications.data.data;\r\n    \r\n            setMessageCount(notifications.count);\r\n            setShowCount(notifications.count);\r\n            \r\n            if(!listen) initEcho()\r\n        }\r\n    }\r\n\r\n    // Start Laravel Echo\r\n\r\n    const initEcho = () => {\r\n        window.Echo.private('App.Models.User.' + auth.user.id)\r\n        .notification((notification) => {\r\n            let newNotification = {\r\n                'data' : {\r\n                    'data': notification.data,\r\n                    'title': notification.title\r\n                },\r\n                'created_at': moment().format()\r\n            }\r\n\r\n            dispatch({\r\n                type: \"NOTIFICATION_ADD\",\r\n                payload: newNotification\r\n            })\r\n            // console.log('notifications', {...notifications.data, data: [newNotification, ...notifications.data.data]});\r\n            // setNotification(notification)\r\n            // console.log('notif', notification);\r\n    \r\n            // let data = [...notification.data, newNotification];\r\n    \r\n            // setNotifications(prev => ({...prev, data: data}))\r\n        });\r\n\r\n        setListen(true);\r\n    }\r\n\r\n    // End Laravel Echo\r\n\r\n    // const seeMoreNotification = async (link) => {\r\n    //     setNotifications(prev => ({...prev, loading: true}))\r\n\r\n    //     const res = await axios.get(link);\r\n\r\n    //     let data = res.data.data;\r\n\r\n    //     data.data = [...notifications.data.data, ...data.data];\r\n\r\n    //     setNotifications(prev => ({...prev, data: data, loading: false}));\r\n    // }\r\n\r\n    const hide = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    // Handle the click on the notification bell\r\n    const handleClick = (event) => {\r\n        setShow(!show);\r\n        setTarget(event.target);\r\n    }\r\n\r\n    // Calculate the day diff\r\n    const getDayDiff = timestamp => {\r\n        let a = moment();\r\n        let b = moment(timestamp);\r\n        let diff = a.diff(b, 'year');\r\n        if (diff === 0) {\r\n            diff = a.diff(b, 'month');\r\n            if (diff === 0) {\r\n                diff = a.diff(b, 'days');\r\n                if (diff === 0) {\r\n                    diff = a.diff(b, 'hour');\r\n                    if (diff === 0) {\r\n                        diff = a.diff(b, 'minute');\r\n                        if (diff === 0) {\r\n                            diff = a.diff(b, 'second');\r\n                            return `${diff} second(s) ago`;\r\n                        } else {\r\n                            return `${diff} minute(s) ago`;\r\n                        }\r\n                    } else {\r\n                        return `${diff} hour(s) ago`;\r\n                    }\r\n                } else {\r\n                    return `${diff} days(s) ago`;\r\n                }\r\n            } else {\r\n                return `${diff} month(s) ago`;\r\n            }\r\n        } else {\r\n            return `${diff} year(s) ago`;\r\n        }\r\n    };\r\n\r\n    const getWhen = timestamp => {\r\n        let when = `${moment(timestamp).format('L')} ${moment(timestamp).format('LTS')}`;\r\n        return when;\r\n    }\r\n    \r\n    // Get the notification message\r\n    const getContent = message => {\r\n        if (message.indexOf('\\n') >= 0) {\r\n            let splitted = message.split('\\n');\r\n            let ret = '<ul>';\r\n\r\n            for (let i = 0; i <= splitted.length - 1; i++) {\r\n                if (splitted[i] !== '') {\r\n                    ret = ret + '<li>' + splitted[i] + '</li>';\r\n                }\r\n            }\r\n\r\n            ret = ret + '</ul>';\r\n            return {\r\n                __html: ret\r\n            };\r\n        }\r\n        return {\r\n            __html: `<ul><li>${message}</li></ul>`\r\n        };\r\n    };\r\n\r\n    const markAsRead = async (event) => {\r\n        dispatch(MarkAsRead())\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"notification-container\">\r\n            <div className={showCount ? 'notification notify show-count' : 'notification notify'}\r\n                data-count={messageCount}\r\n                onClick={event => handleClick(event)}>\r\n                <Bell color=\"yellow\" size=\"25\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div ref={ref}>\r\n            <Overlay\r\n                show={show}\r\n                target={target}\r\n                placement=\"bottom\"\r\n                container={ref.current}\r\n                containerPadding={20}\r\n                rootClose={true}\r\n                onHide={hide}\r\n            >\r\n                <Popover id=\"popover-contained\">\r\n                    <Popover.Title as=\"h3\">Notifications</Popover.Title>\r\n                    <Popover.Content style={{ padding: '3px 3px' }}>\r\n                        {Boolean(showCount) && <div>\r\n                            <Button variant=\"link\" onClick={event => markAsRead(event)}>\r\n                                <BookOpen size={24} />\r\n                                Mark all as read\r\n                            </Button>\r\n                        </div>\r\n                        }\r\n                        <ul className=\"notification-info-panel\">\r\n                            {\r\n                                notifications.data && notifications.data.data && notifications.data.data.length > 0 ?\r\n                                \r\n                                notifications.data.data.map((message, index) =>\r\n                                    <li\r\n                                        className={!message['read_at'] ? 'notification-message unread' : 'notification-message'}\r\n                                        key={index}>\r\n                                        <div className=\"timestamp\">\r\n                                            <span>{getDayDiff(parseInt(moment.parseZone(message['created_at']).format('x')))}</span>\r\n                                            {/* <span>{' ('}{getWhen(parseInt(moment.parseZone(message['created_at']).format('x')))}{')'}</span> */}\r\n                                        </div>\r\n                                        <div className=\"content\" dangerouslySetInnerHTML={getContent(message['data']['title'])}></div>\r\n                                    </li>\r\n                                ) :\r\n                                <>\r\n                                    <AlertTriangle color='#000000' size={32} />\r\n                                    <h5 className=\"nodata\">No Notifications found!</h5>\r\n                                </>\r\n                            }\r\n                        </ul>\r\n                    </Popover.Content>\r\n                    <Popover.Title className=\"text-center\">\r\n                        <Link to=\"/notifications\">View All Notifications</Link>\r\n                    </Popover.Title>\r\n                </Popover>\r\n            </Overlay>\r\n        </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default NotificationMenu;","import React from 'react';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport _ from 'lodash';\r\nimport { config } from '../utils/Constants';\r\nimport NotificationMenu from './NotificationMenu';\r\n\r\nexport const SuperAdminHeader = (props) => {\r\n\r\n    return (\r\n        <Navbar collapseOnSelect className=\"sticky-top shadow-sm\" expand=\"*\" bg=\"light\" variant=\"light\">\r\n            <Navbar.Brand className=\"col-sm-3 col-md-2 mr-0 px-3\" href=\"#home\">\r\n            <img\r\n                alt=\"\"\r\n                src={config.url.BASE_URL+'/icons/logo.png'}\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n            />\r\n            </Navbar.Brand>\r\n\r\n            <button className=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <ul className=\"navbar-nav px-3\">\r\n                <li className=\"nav-item text-nowrap notification-section\">\r\n                    <NotificationMenu/>\r\n                </li>\r\n                <li className=\"nav-item text-nowrap\">\r\n                    <Link className=\"nav-link logout-btn\" onClick={ e => props.onLogout() }>LOG OUT</Link>\r\n                </li>\r\n            </ul>\r\n        </Navbar>\r\n    );\r\n\r\n}\r\n\r\nexport const SuperAdminSidebar = (props) => {\r\n\r\n    return (\r\n        \r\n        <Navbar.Collapse id=\"sidebarMenu\" className=\"col-md-4 col-lg-3 d-md-block bg-light sidebar collapse shadow\">\r\n            <div className=\"sidebar-sticky pt-3\">\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink exact={true} className=\"nav-link\" to=\"/\">\r\n                            <img\r\n                                alt=\"Dashboard\"\r\n                                src={config.url.BASE_URL+'/icons/dashboard-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Dashboard\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/actions\">\r\n                            <img\r\n                                alt=\"Actions\"\r\n                                src={config.url.BASE_URL+'/icons/actions-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Actions\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/packages\">\r\n                            <img\r\n                                alt=\"Packages\"\r\n                                src={config.url.BASE_URL+'/icons/package-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Packages\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/rewards\">\r\n                            <img\r\n                                alt=\"Rewards\"\r\n                                src={config.url.BASE_URL+'/icons/reward-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Rewards\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/campaigns\">\r\n                            <img\r\n                                alt=\"Campaigns\"\r\n                                src={config.url.BASE_URL+'/icons/campaign-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Campaigns\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/users\">\r\n                            <img\r\n                                alt=\"Profile\"\r\n                                src={config.url.BASE_URL+'/icons/profile-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Users\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/transactions\">\r\n                            <img\r\n                                alt=\"Transactions\"\r\n                                src={config.url.BASE_URL+'/icons/transaction-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Transactions\r\n                        </NavLink>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/transactions\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-bar-chart-2\"><line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line><line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line></svg>\r\n                        Settings\r\n                        </Link>\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n        </Navbar.Collapse>\r\n\r\n    );\r\n\r\n}\r\n","import React from 'react';\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport _ from 'lodash';\r\nimport { config } from '../utils/Constants';\r\nimport NotificationMenu from './NotificationMenu';\r\n\r\nexport const AdminHeader = (props) => {\r\n\r\n    return (\r\n        <Navbar collapseOnSelect className=\"sticky-top shadow-sm\" expand=\"*\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand className=\"col-sm-3 col-md-2 mr-0 px-3\" href=\"#home\">\r\n            <img\r\n                alt=\"\"\r\n                src={config.url.BASE_URL+'/icons/logo.png'}\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n            />\r\n            </Navbar.Brand>\r\n\r\n            <button className=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <ul className=\"navbar-nav px-3\">\r\n                <li className=\"nav-item text-nowrap notification-section\">\r\n                    <NotificationMenu/>\r\n                </li>\r\n                <li className=\"nav-item text-nowrap\">\r\n                    <Link className=\"nav-link logout-btn\" onClick={ e => props.onLogout() }>Logout</Link>\r\n                </li>\r\n            </ul>\r\n        </Navbar>\r\n    );\r\n\r\n}\r\n\r\nexport const AdminSidebar = (props) => {\r\n\r\n    return (\r\n        \r\n        <Navbar.Collapse id=\"sidebarMenu\" className=\"col-md-4 col-lg-3 d-md-block bg-light sidebar collapse shadow\">\r\n            <div className=\"sidebar-sticky pt-3\">\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/\">\r\n                            <img\r\n                                alt=\"Dashboard\"\r\n                                src={config.url.BASE_URL+'/icons/dashboard-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Dashboard\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/actions\">\r\n                            <img\r\n                                alt=\"Dashboard\"\r\n                                src={config.url.BASE_URL+'/icons/actions-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Actions\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/packages\">\r\n                            <img\r\n                                alt=\"Dashboard\"\r\n                                src={config.url.BASE_URL+'/icons/package-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Packages\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/rewards\">\r\n                            <img\r\n                                alt=\"Rewards\"\r\n                                src={config.url.BASE_URL+'/icons/reward-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Rewards\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/campaigns\">\r\n                            <img\r\n                                alt=\"Campaigns\"\r\n                                src={config.url.BASE_URL+'/icons/campaign-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Campaigns\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/users\">\r\n                            <img\r\n                                alt=\"Profile\"\r\n                                src={config.url.BASE_URL+'/icons/profile-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Users\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/transactions\">\r\n                            <img\r\n                                alt=\"Transactions\"\r\n                                src={config.url.BASE_URL+'/icons/transaction-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Transactions\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/profile\">\r\n                            <img\r\n                                alt=\"Profile\"\r\n                                src={config.url.BASE_URL+'/icons/profile-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Profile\r\n                        </NavLink>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/transactions\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-bar-chart-2\"><line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line><line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line></svg>\r\n                        Settings\r\n                        </Link>\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n        </Navbar.Collapse>\r\n\r\n    );\r\n\r\n}\r\n","import React from 'react';\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport _ from 'lodash';\r\nimport '../css/notifications.css'\r\nimport { config } from '../utils/Constants';\r\nimport NotificationMenu from './NotificationMenu';\r\n\r\nexport const CustomerHeader = (props) => {\r\n\r\n    return (\r\n        <Navbar collapseOnSelect className=\"sticky-top shadow-sm\" expand=\"*\" bg=\"light\" variant=\"light\">\r\n            <Navbar.Brand className=\"col-sm-3 col-md-2 mr-0 px-3\" href=\"#home\">\r\n            <img\r\n                alt=\"\"\r\n                src={config.url.BASE_URL+'/icons/logo.png'}\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n            />\r\n            </Navbar.Brand>\r\n\r\n            <button className=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <ul className=\"navbar-nav px-3\">\r\n                <li className=\"nav-item text-nowrap notification-section\">\r\n                    <NotificationMenu/>\r\n                </li>\r\n                <li className=\"nav-item text-nowrap ml-3\">\r\n                    <Link className=\"nav-link logout-btn\" onClick={ e => props.onLogout() }>Logout</Link>\r\n                </li>\r\n            </ul>\r\n        </Navbar>\r\n    );\r\n\r\n}\r\n\r\nexport const CustomerSidebar = (props) => {\r\n\r\n    return (\r\n        \r\n        <Navbar.Collapse id=\"sidebarMenu\" className=\"col-md-4 col-lg-3 d-md-block bg-light sidebar collapse shadow\">\r\n            <div className=\"sidebar-sticky pt-3\">\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/\">\r\n                            <img\r\n                                alt=\"Dashboard\"\r\n                                src={config.url.BASE_URL+'/icons/dashboard-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Dashboard\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/rewards\">\r\n                            <img\r\n                                alt=\"Rewards\"\r\n                                src={config.url.BASE_URL+'/icons/reward-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Rewards\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/campaigns\">\r\n                            <img\r\n                                alt=\"Campaigns\"\r\n                                src={config.url.BASE_URL+'/icons/campaign-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Campaigns\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/transactions\">\r\n                            <img\r\n                                alt=\"Transactions\"\r\n                                src={config.url.BASE_URL+'/icons/transaction-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Transactions\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/profile\">\r\n                            <img\r\n                                alt=\"Profile\"\r\n                                src={config.url.BASE_URL+'/icons/profile-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Profile\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/settings\">\r\n                            <img\r\n                                alt=\"Dashboard\"\r\n                                src={config.url.BASE_URL+'/icons/settings-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Settings\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </Navbar.Collapse>\r\n\r\n    );\r\n\r\n}\r\n","import React from \"react\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport { Logout } from \"../actions/userAction\";\r\nimport { config } from '../utils/Constants';\r\nimport Pusher from \"pusher-js\"\r\nimport Echo from 'laravel-echo';\r\nimport {SuperAdminHeader, SuperAdminSidebar} from \"../components/SuperAdminLayout\"\r\nimport {AdminHeader, AdminSidebar} from \"../components/AdminLayout\"\r\nimport {CustomerHeader, CustomerSidebar} from \"../components/CustomerLayout\"\r\nimport '../css/style.css'\r\nimport moment from 'moment-timezone';\r\nmoment.tz.setDefault(moment.tz.guess(true));\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(!_.isEmpty(auth.user)){\r\n        axios.defaults.headers['Authorization'] = \"Bearer \" + auth.user.token;\r\n        \r\n        // Add a response interceptor\r\n        axios.interceptors.response.use(function (response) {\r\n            // Any status code that lie within the range of 2xx cause this function to trigger\r\n            // Do something with response data\r\n            return response;\r\n          }, function (error) { \r\n                if(typeof error.response.data !== 'undefined' && error.response.data.error === 'Unauthenticated.') {\r\n                    dispatch({\r\n                        type: \"LOGOUT_SUCCESS\"\r\n                    })\r\n                }\r\n            // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n            // Do something with response error\r\n            return Promise.reject(error);\r\n          });\r\n\r\n        const initEchoB = () => { // local websockets\r\n\r\n            window.Echo = new Echo({\r\n                broadcaster: 'pusher',\r\n                key: 'FRPUSHERKEY',\r\n                wsHost: config.url.BROADCAST_URL,\r\n                wsPort: 6001,\r\n                disableStats: true,\r\n                forceTLS: false,\r\n                authorizer: (channel, options) => {\r\n                    return {\r\n                        authorize: (socketId, callback) => {\r\n    \r\n                            axios.post('/broadcasting/auth', {\r\n                                socket_id: socketId,\r\n                                channel_name: channel.name\r\n                            })\r\n                            .then(response => {\r\n                                axios.defaults.headers['X-Socket-ID'] = socketId\r\n                                callback(false, response.data);\r\n                            })\r\n                            .catch(error => {\r\n                                callback(true, error);\r\n                            });\r\n                        }\r\n                    };\r\n                },\r\n            });\r\n            \r\n            // window.Echo.private(`notification`)\r\n            // .listen('UserRegistered', (e) => {\r\n            //     console.log('channel', e);\r\n            // });\r\n        }\r\n\r\n        const initEcho = () => {\r\n\r\n            window.Echo = new Echo({\r\n                broadcaster: 'pusher',\r\n                key: config.url.BROADCAST_KEY,\r\n                cluster: 'ap1',\r\n                wsHost: config.url.BROADCAST_URL,\r\n                wsPort: 6001,\r\n                forceTLS: true,\r\n                authorizer: (channel, options) => {\r\n                    return {\r\n                        authorize: (socketId, callback) => {\r\n    \r\n                            axios.post('/broadcasting/auth', {\r\n                                socket_id: socketId,\r\n                                channel_name: channel.name\r\n                            })\r\n                            .then(response => {\r\n                                axios.defaults.headers['X-Socket-ID'] = socketId\r\n                                callback(false, response.data);\r\n                            })\r\n                            .catch(error => {\r\n                                callback(true, error);\r\n                            });\r\n                        }\r\n                    };\r\n                },\r\n                // wsHost: config.url.BROADCAST_URL,\r\n                // wsPort: 6001,\r\n                //authEndpoint is your apiUrl + /broadcasting/auth\r\n                // authEndpoint: config.url.API_URL + '/broadcasting/auth', \r\n                // As I'm using JWT tokens, I need to manually set up the headers.\r\n                auth: {\r\n                  headers: {\r\n                    Authorization: `Bearer ${auth.user.token}`,\r\n                    Accept: 'application/json',\r\n                  },\r\n                },\r\n            });\r\n            \r\n            // window.Echo.private(`notification`)\r\n            // .listen('UserRegistered', (e) => {\r\n            //     console.log('channel', e);\r\n            // });\r\n        }\r\n\r\n        initEcho();\r\n    }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render = { props => {\r\n\r\n                if(!_.isEmpty(auth.user)) {\r\n\r\n                    const onLogout = (e) => {\r\n                        \r\n                        dispatch(Logout(props));\r\n                \r\n                        props.history.push(\"/login\");\r\n                    }\r\n\r\n                    if(_.indexOf(rest.allowed, auth.user.type) == -1) {\r\n    \r\n                        return (\r\n    \r\n                            <>Not Allowed</>\r\n                            \r\n                        )\r\n    \r\n                    }\r\n\r\n                    if(auth.user.type == 1) {\r\n\r\n                        return (\r\n    \r\n                            <div className=\"superadmin-page\">\r\n                                <SuperAdminHeader onLogout={onLogout}/>\r\n                                <Container fluid>\r\n                                    <div className=\"row\">\r\n                                        <SuperAdminSidebar/>\r\n                                        <main role=\"main\" className=\"col-md-8 col-lg-9 ml-sm-auto px-md-4\">\r\n                                            <Component { ...props }/>\r\n                                        </main>\r\n                                    </div>\r\n                                </Container>\r\n                            </div>\r\n                            \r\n                        )\r\n\r\n                    } else if(auth.user.type == 2) {\r\n\r\n                        return (\r\n    \r\n                            <div className=\"admin-page\">\r\n                                <AdminHeader onLogout={onLogout}/>\r\n                                <Container fluid>\r\n                                    <div className=\"row\">\r\n                                        <AdminSidebar/>\r\n                                        <main role=\"main\" className=\"col-md-8 col-lg-9 ml-sm-auto px-md-4\">\r\n                                            <Component { ...props }/>\r\n                                        </main>\r\n                                    </div>\r\n                                </Container>\r\n                            </div>\r\n                            \r\n                        )\r\n\r\n                    } else {\r\n\r\n                        return (\r\n                            <div className=\"customer-page\">\r\n                                <CustomerHeader onLogout={onLogout}/>\r\n                                <Container fluid>\r\n                                    <div className=\"row\">\r\n                                        <CustomerSidebar userid={auth.user.id}/>\r\n                                        <main role=\"main\" className=\"col-md-8 col-lg-9 ml-sm-auto px-md-4\">\r\n                                            <Component { ...props }/>\r\n                                        </main>\r\n                                    </div>\r\n                                </Container>\r\n                            </div>\r\n                        )\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: \"/login\",\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }\r\n                    } />\r\n\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nexport const ProtectedLogin = ({ component: Component, ...rest }) => {\r\n    \r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render = { props => {\r\n                if(_.isEmpty(auth.user)) {\r\n\r\n                    return <div className=\"login-page\">\r\n                        <span className=\"top-shape\"></span>\r\n                        <span className=\"bottom-shape\"></span>\r\n                        <Component { ...props }/>\r\n                    </div>\r\n\r\n                } else {\r\n\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: \"/\",\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }\r\n                    } />\r\n\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};","import {NavLink, Redirect, Route, Switch} from \"react-router-dom\";\nimport Dashboard from './containers/Dashboard';\nimport Login from './containers/Login';\nimport ProductList from './containers/ProductList';\nimport Product from './containers/Product';\nimport User from './containers/User';\nimport UserProfile from './containers/UserProfile';\nimport MyProfile from './containers/MyProfile';\nimport Notification from './containers/Notification';\nimport Setting from './containers/Setting';\nimport Package from './containers/Package';\nimport Action from './containers/Action';\nimport Campaign from './containers/Campaign';\nimport CampaignDetail from './containers/CampaignDetail';\nimport Reward from './containers/Reward';\nimport Transaction from './containers/Transaction';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \nimport $ from 'jquery';\nimport { ProtectedRoute } from \"./router/ProtectedRoute\";\nimport { ProtectedLogin } from \"./router/ProtectedLogin\";\n// import 'bootstrap/dist/js/bootstrap.bundle';\n \nfunction App() {\n    return (\n        <Switch>\n            <ProtectedLogin path={\"/login\"} exact component={Login}/>\n            {/* <ProtectedRoute path={\"/products\"} exact component={ProductList}/> */}\n            {/* <ProtectedRoute path={\"/product/:product\"} exact component={Product}/> */}\n            <ProtectedRoute path={\"/users\"} exact component={User} allowed={[1,2]}/>\n            <ProtectedRoute path={\"/user/:user\"} exact component={UserProfile} allowed={[1,2]}/>\n            <ProtectedRoute path={\"/profile\"} exact component={MyProfile} allowed={[2,3]}/>\n            <ProtectedRoute path={\"/settings\"} exact component={Setting} allowed={[1,2,3]}/>\n            <ProtectedRoute path={\"/notifications\"} exact component={Notification} allowed={[1,2,3]}/>\n            <ProtectedRoute path={\"/packages\"} exact component={Package} allowed={[1,2]}/>\n            <ProtectedRoute path={\"/actions\"} exact component={Action} allowed={[1,2]}/>\n            <ProtectedRoute path={\"/rewards\"} exact component={Reward} allowed={[1,2,3]}/>\n            <ProtectedRoute path={\"/transactions\"} exact component={Transaction} allowed={[1,2,3]}/>\n            <ProtectedRoute path={\"/campaigns\"} exact component={Campaign} allowed={[1,2,3]}/>\n            <ProtectedRoute path={\"/campaign/:campaign\"} exact component={CampaignDetail}/>\n            <ProtectedRoute path={\"/\"} exact component={Dashboard} allowed={[1,2,3]}/>\n\n            {/* <Redirect to={\"/\"}/> */}\n            <Route path=\"*\" component={ () => \"404 NOT FOUND\" }/>\n        </Switch>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const DefaultState = {\r\n    loading: false,\r\n    data: [],\r\n    count: 0,\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst ProductListReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case \"PRODUCT_LIST_LOADING\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"PRODUCT_LIST_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                // count: action.payload.count,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"PRODUCT_LIST_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: \"Unable to get products\"\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ProductListReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst ActionReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ACTION_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"ACTION_FETCH\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"ACTION_ADD\":\r\n\r\n            var stateData = state.data\r\n            var newData = [...state.data.data, action.payload]\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"ACTION_UPDATE\":\r\n\r\n            var stateData = state.data\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            var newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"ACTION_DELETE\":\r\n\r\n            var newData = state.data;\r\n            var newPackages = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            newData.data = newPackages;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: newData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"ACTION_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default ActionReducer;","const DefaultState = {\r\n    loading: false,\r\n    user: localStorage.getItem('user') != 'undefined' ? JSON.parse(localStorage.getItem('user')) : {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst LoginReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"LOGIN_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"LOGIN_SUCCESS\":\r\n\r\n            localStorage.setItem('user', JSON.stringify(action.payload));\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"LOGIN_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n            \r\n        case \"LOGOUT_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"LOGOUT_SUCCESS\":\r\n\r\n            localStorage.removeItem('user');\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: {},\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"LOGOUT_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default LoginReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst CampaignReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"CAMPAIGN_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"CAMPAIGN_FETCH\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"CAMPAIGN_ADD\":\r\n\r\n            var newData = [...state.data.data, action.payload]\r\n\r\n            var stateData = state.data\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"CAMPAIGN_UPDATE\":\r\n\r\n            var stateData = state.data\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            var newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"CAMPAIGN_DELETE\":\r\n\r\n            var stateData = state.data\r\n            var newData = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"CAMPAIGN_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default CampaignReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst PackageReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"PACKAGE_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"PACKAGE_SUCCESS\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"PACKAGE_ADDED\":\r\n\r\n            var newData = state.data;\r\n            var newPackages = [...state.data.data, action.payload]\r\n\r\n            newData.data = newPackages;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: newData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"PACKAGE_UPDATED\":\r\n\r\n            var newData = state.data;\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            var newPackages = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            newData.data[index] = newPackages;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: newData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"PACKAGE_DELETED\":\r\n\r\n            var newData = state.data;\r\n            var newPackages = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            newData.data = newPackages;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: newData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"PACKAGE_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default PackageReducer;","import moment from 'moment-timezone';\r\n\r\nconst DefaultState = {\r\n    loading: false,\r\n    count: 0,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst NotificationReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"NOTIFICATION_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"NOTIFICATION_FETCH\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload.data,\r\n                count: action.payload.count,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"NOTIFICATION_ADD\":\r\n\r\n            var stateData = state.data\r\n            var newData = [action.payload, ...state.data.data]\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                count: state.count + 1,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"NOTIFICATION_UPDATE\":\r\n\r\n            var stateData = state.data\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            var newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"NOTIFICATION_DELETE\":\r\n\r\n            var newData = state.data;\r\n            var newPackages = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            newData.data = newPackages;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: newData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"NOTIFICATION_READ\":\r\n\r\n            var newData = state.data;\r\n            var newNotifications = state.data.data.map((el, key) => {\r\n                return {...el, read_at: moment().format()}\r\n            })\r\n\r\n            newData.data = newNotifications;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                count: 0,\r\n                data: newData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"NOTIFICATION_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default NotificationReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst RewardReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"REWARD_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"REWARD_FETCH\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"REWARD_ADD\":\r\n\r\n            var stateData = state.data\r\n            var newData = [action.payload, ...state.data.data]\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"REWARD_UPDATE\":\r\n\r\n            var stateData = state.data\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            var newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"REWARD_DELETE\":\r\n\r\n            var stateData = state.data\r\n            var newData = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"REWARD_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default RewardReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst TransactionReducer = (state = DefaultState, action) => {\r\n\r\n    var stateData = state.data, newData\r\n\r\n    switch (action.type) {\r\n        case \"REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"FETCH_SUCCESS\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"ADD_SUCCESS\":\r\n\r\n            newData = [...state.data.data]\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"UPDATE_SUCCESS\":\r\n\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            console.log('update success 2');\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"DELETE_SUCCESS\":\r\n\r\n            newData = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default TransactionReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst UserReducer = (state = DefaultState, action) => {\r\n\r\n    var stateData = state.data, newData\r\n\r\n    switch (action.type) {\r\n        case \"USER_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"USER_FETCH\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"USER_ADD\":\r\n\r\n            newData = [action.payload, ...state.data.data]\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"USER_UPDATE\":\r\n\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"USER_DELETE\":\r\n\r\n            newData = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"USER_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default UserReducer;","import {combineReducers} from \"redux\";\r\nimport ProductListReducer from \"./ProductListReducer\";\r\nimport ActionReducer from \"./ActionReducer\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport CampaignReducer from \"./CampaignReducer\";\r\nimport PackageReducer from \"./PackageReducer\";\r\nimport NotificationReducer from \"./NotificationReducer\";\r\nimport RewardReducer from \"./RewardReducer\";\r\nimport TransactionReducer from \"./TransactionReducer\";\r\nimport UserReducer from \"./UserReducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n    Action: ActionReducer,\r\n    Auth: AuthReducer,\r\n    Campaign: CampaignReducer,\r\n    Package: PackageReducer,\r\n    Notification: NotificationReducer,\r\n    ProductList: ProductListReducer,\r\n    Reward: RewardReducer,\r\n    Transaction: TransactionReducer,\r\n    User: UserReducer\r\n});\r\n\r\nexport default RootReducer;","import {createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport RootReducer from \"./reducers/RootReducer\";\r\n\r\nconst myLogger = (store) => next => action => {\r\n\r\n    let result = next(action)\r\n\r\n    // console.log(\"middleware run\", store.getState());\r\n\r\n    return result;\r\n\r\n}\r\n\r\nconst Store = createStore(RootReducer, {}, composeWithDevTools(applyMiddleware(myLogger, thunk)));\r\n\r\nexport default Store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './App.css';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport Store from \"./Store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport { config } from '../src/utils/Constants';\nimport axios from \"axios\";\n\naxios.defaults.baseURL = config.url.API_URL\naxios.defaults.headers = {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={Store}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}