{"version":3,"sources":["containers/Dashboard.js","actions/userAction.js","containers/Login.js","containers/User.js","containers/UserProfile.js","containers/MyProfile.js","actions/packageAction.js","containers/Package.js","actions/actionAction.js","containers/Action.js","actions/campaignAction.js","containers/Campaign.js","containers/CampaignDetail.js","actions/rewardAction.js","containers/Reward.js","actions/transactionAction.js","containers/Transaction.js","utils/Constants.js","components/SuperAdminLayout.js","components/AdminLayout.js","components/CustomerLayout.js","router/ProtectedRoute.js","router/ProtectedLogin.js","App.js","reportWebVitals.js","reducers/ProductListReducer.js","reducers/ActionReducer.js","reducers/AuthReducer.js","reducers/CampaignReducer.js","reducers/PackageReducer.js","reducers/RewardReducer.js","reducers/TransactionReducer.js","reducers/UserReducer.js","reducers/RootReducer.js","Store.js","index.js"],"names":["Dashboard","props","useSelector","state","Auth","useState","options","title","text","noData","labels","colors","series","transactions","setTransactions","React","useEffect","fetchTransactions","event","a","axios","get","res","data","cancelled","pending","confirmed","completed","prev","Row","Col","md","Card","Body","Text","type","dispatch","post","payload","history","push","response","apiRoute","GetData","url","params","Login","useDispatch","auth","username","setUsername","password","setPassword","validated","setValidated","onLogin","preventDefault","stopPropagation","form","currentTarget","checkValidity","email","className","Form","noValidate","onSubmit","Control","placeholder","onChange","e","target","value","isInvalid","errorMsg","required","Feedback","Button","variant","User","userList","setData","filters","setFilters","show","setShow","fields","create","baseURL","headers","customerFields","handleClose","fetchUsers","$params","handleEditShow","val","customer_id","info","package_id","package","id","name","handleDelete","delete","DeleteData","fetchPackages","search","results","length","result","label","promisePackagesOptions","inputValue","Promise","resolve","setTimeout","handleFilterInputChange","key","tmpFilter","onClick","user_type_id","Modal","onHide","put","reject","EditData","then","catch","alert","error","Register","Header","closeButton","Title","_","isUndefined","map","field","i","Group","as","controlId","control_id","Label","column","sm","defaultValue","hidden","size","option","defaultOptions","loadOptions","userForm","Footer","lg","custom","isEmpty","handleTypeChange","Table","responsive","striped","bordered","hover","loading","colSpan","el","to","type_name","phone_number","created_at","updated_at","ButtonGroup","Pagination","links","page","Item","active","disabled","dangerouslySetInnerHTML","__html","showPagination","user","userid","match","setUser","rewards","setRewards","fetchData","fetchUserRewards","$url","fetchActions","campaign_id","action","fetchRewards","action_id","reward","fetchCampaigns","handleRewardSubmit","balance","Figure","Caption","qrCode","Subtitle","address","Badge","points","firstname","middlename","lastname","isNull","vehicle_year","vehicle_make","vehicle_model","vehicle_trim","vehicle_color","vehicle_vin_no","cacheOptions","isMulti","ListGroup","dataList","reward_name","showRewards","showRewardsPagination","AdminProfile","handleClaim","reward_id","status","stateData","newData","filter","item","CustomerProfile","GetPackages","Package","packageList","product","console","log","process","DeletePackage","packageData","EditPackage","AddPackage","description","multiplier","message","AdminAction","actionList","Action","AddData","AdminCampaign","Campaign","campaignList","setCampaignList","setReward","showAddCampaign","setShowAddCampaign","showAddReward","setShowAddReward","handleCloseAddCampaign","handleRewardsShow","addReward","newCampaign","tmp","campaigns","fetchCampaignData","Date","format","start_date","end_date","minDate","dateFormat","selected","date","UserCampaign","CampaignDetail","campaignid","campaign","setCampaign","AdminReward","Reward","min","UserReward","handleRedeem","style","height","AdminTransaction","transactionList","Transaction","dialogShow","setDialogShow","statusUpdateData","setStatusUpdateData","handleDialogClose","handleDialogConfirm","initialSettings","startDate","moment","endDate","onCallback","start","end","width","transaction_id","reference_no","cost","customer","salesperson","CustomerTransaction","config","API_URL","API_URL_USERS","BROADCAST_URL","BROADCAST_KEY","SuperAdminHeader","notifications","setNotifications","fetchNotification","initEcho","window","Echo","private","notification","newNotification","Navbar","collapseOnSelect","expand","bg","Brand","href","alt","src","data-toggle","data-target","aria-controls","aria-expanded","aria-label","timestamp","parseInt","parseZone","storageKey","notific_key","notific_value","heading","sortedByKey","showDate","color","onLogout","SuperAdminSidebar","Collapse","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","x1","y1","x2","y2","AdminHeader","getDayDiff","AdminSidebar","CustomerHeader","CustomerSidebar","ProtectedRoute","Component","component","rest","defaults","token","broadcaster","cluster","wsHost","wsPort","forceTLS","authorizer","channel","authorize","socketId","callback","socket_id","channel_name","Authorization","Accept","listen","render","pathname","from","location","disconnect","indexOf","allowed","Container","fluid","role","ProtectedLogin","App","path","exact","UserProfile","MyProfile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","DefaultState","count","ProductListReducer","ActionReducer","index","findIndex","newPackages","localStorage","getItem","JSON","parse","LoginReducer","setItem","stringify","removeItem","CampaignReducer","PackageReducer","RewardReducer","TransactionReducer","UserReducer","RootReducer","combineReducers","AuthReducer","ProductList","Store","createStore","composeWithDevTools","applyMiddleware","store","next","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c55a309.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Card, Col, Row } from 'react-bootstrap';\r\nimport Chart from \"react-apexcharts\";\r\nimport axios from 'axios';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n    const [transactions, setTransactions] = useState({\r\n        options: {\r\n            title: {\r\n                text: 'Transactions'\r\n            },\r\n            noData: {\r\n                text: 'No data'\r\n            },\r\n            labels: ['Cancelled', 'Pending', 'Confirmed', 'Completed'],\r\n            colors: ['#ff4560', '#008ffb', '#feb019', '#00e396']\r\n        },\r\n        series: []\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetchTransactions()\r\n    }, [])\r\n\r\n    const fetchTransactions = async event => {\r\n\r\n        const res = await axios.get('/summary/transactions')\r\n        let data = res.data.data\r\n\r\n        if(data.cancelled != 0 || data.pending != 0 || data.confirmed != 0 || data.completed)\r\n        setTransactions(prev => ({...prev, 'series' : [data.cancelled, data.pending, data.confirmed, data.completed]}))\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <Chart options={transactions.options} series={transactions.series} type=\"pie\"/>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Dashboard;","import axios from \"axios\";\r\n\r\nexport const Auth = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"LOGIN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post('/login', data)\r\n\r\n        dispatch({\r\n            type: \"LOGIN_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        props.history.push(\"/\");\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"LOGIN_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const Register = (props, data) => async dispatch => {\r\n    dispatch({\r\n        type: \"USER_REQUEST\"\r\n    })\r\n\r\n    await axios.post('/register', data)\r\n    .then((res) => {\r\n\r\n        dispatch({\r\n            type: \"USER_ADD\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n\r\n    })\r\n    .catch((error) => {\r\n        if(error.response) {\r\n            dispatch({\r\n                type: \"USER_FAIL\",\r\n                payload: error.response.data\r\n            })\r\n        }\r\n\r\n        return Promise.reject();\r\n    })\r\n}\r\n\r\nexport const Logout = (props) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"USER_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post('/logout')\r\n\r\n        window.Echo.disconnect();\r\n\r\n        dispatch({\r\n            type: \"LOGOUT_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"USER_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nconst apiRoute = '/users'\r\n\r\nexport const GetData = (props, url = apiRoute, params = {}) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"USER_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(url, {params: params})\r\n\r\n        dispatch({\r\n            type: \"USER_FETCH\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"USER_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"USER_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.put(apiRoute + '/' + data.id, data)\r\n\r\n        dispatch({\r\n            type: \"USER_UPDATE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve()\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"USER_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n\r\n        return Promise.reject()\r\n        \r\n    }\r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"USER_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.delete(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"USER_DELETE\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"USER_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport { Auth } from \"../actions/userAction\";\r\nimport '../css/signin.css'\r\n\r\nconst Login = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const onLogin = async (event) => {\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const form = event.currentTarget;\r\n    \r\n        setValidated(true);\r\n\r\n        if (form.checkValidity() === false) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        const data = {\r\n            email: username,\r\n            password: password\r\n        }\r\n\r\n        dispatch(Auth(props, data));\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container text-center\">\r\n            <Form className=\"form-signin\" noValidate validated={validated} onSubmit={onLogin}>\r\n\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Login</h1>\r\n\r\n                <Form.Control \r\n                    type=\"email\" \r\n                    placeholder=\"Email address\" \r\n                    onChange={ e => setUsername(e.target.value) }\r\n                    isInvalid={auth.errorMsg}\r\n                    required\r\n                />\r\n        \r\n                <Form.Control \r\n                    type=\"password\" \r\n                    placeholder=\"Password\" \r\n                    onChange={ e => setPassword(e.target.value) }\r\n                    isInvalid={auth.errorMsg}\r\n                    required\r\n                />\r\n\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    {auth.errorMsg && (\r\n                        <div>{auth.errorMsg}</div>\r\n                    )}\r\n                </Form.Control.Feedback>\r\n\r\n                <Button \r\n                    className=\"btn-block\"\r\n                    variant=\"primary\" \r\n                    type=\"submit\"\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, ButtonGroup, Col, Form, Row, Modal, Pagination, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport AsyncSelect from 'react-select/async';\r\nimport { Register, GetData, EditData, DeleteData } from \"../actions/userAction\";\r\n\r\nconst User = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userList = useSelector(state => state.User);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [filters, setFilters] = useState({});\r\n    const [show, setShow] = useState(false);  \r\n    const dmsAxios = axios.create({\r\n        baseURL: 'https://stage.apigw.cdkapps.eu',\r\n        headers: {\"Access-Control-Allow-Origin\": \"http://localhost:3000\"}\r\n    });\r\n    const fields = [\r\n        {\r\n            'key': 'user_type_id',\r\n            'title': 'Type',\r\n            'type': 'select',\r\n            'placeholder': 'Enter action type',\r\n            'options': [\r\n                {\r\n                    'label': 'Customer',\r\n                    'key': '3'\r\n                }, \r\n                {\r\n                    'label': 'Admin',\r\n                    'key': '2'\r\n                }\r\n            ],\r\n            'default': 2,\r\n            'control_id': 'formActionType',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'firstname',\r\n            'title': 'First name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter first name',\r\n            'control_id': 'formFirstName',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'middlename',\r\n            'title': 'Middle name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter middle name',\r\n            'control_id': 'formMiddleName'\r\n        },\r\n        {\r\n            'key': 'lastname',\r\n            'title': 'Last name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter last name',\r\n            'control_id': 'formLastName',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'email',\r\n            'title': 'Email',\r\n            'type': 'email',\r\n            'placeholder': 'Enter email',\r\n            'control_id': 'formEmail',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'phone_number',\r\n            'title': 'Phone number',\r\n            'type': 'text',\r\n            'placeholder': 'Enter phone number',\r\n            'control_id': 'formPhone',\r\n            'required': true\r\n        }\r\n    ];\r\n    const customerFields = [\r\n        {\r\n            'key': 'user_type_id',\r\n            'title': 'Type',\r\n            'type': 'select',\r\n            'placeholder': 'Enter action type',\r\n            'options': [\r\n                {\r\n                    'label': 'Customer',\r\n                    'key': '3'\r\n                }, \r\n                {\r\n                    'label': 'Admin',\r\n                    'key': '2'\r\n                }\r\n            ],\r\n            'default': 2,\r\n            'control_id': 'formActionType',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'customer_id',\r\n            'title': 'Customer ID',\r\n            'type': 'text',\r\n            'placeholder': 'Enter customer ID',\r\n            'control_id': 'formCustomerId',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'firstname',\r\n            'title': 'First name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter first name',\r\n            'control_id': 'formFirstName',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'middlename',\r\n            'title': 'Middle name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter middle name',\r\n            'control_id': 'formMiddleName'\r\n        },\r\n        {\r\n            'key': 'lastname',\r\n            'title': 'Last name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter last name',\r\n            'control_id': 'formLastName',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'email',\r\n            'title': 'Email',\r\n            'type': 'email',\r\n            'placeholder': 'Enter email',\r\n            'control_id': 'formEmail',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'phone_number',\r\n            'title': 'Phone number',\r\n            'type': 'text',\r\n            'placeholder': 'Enter phone number',\r\n            'control_id': 'formPhone',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'package_id',\r\n            'title': 'Search name',\r\n            'type': 'asyncselect',\r\n            'placeholder': 'Enter name',\r\n            'control_id': 'formName',\r\n            'required': true\r\n        }\r\n    ];\r\n    \r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {\r\n\r\n        setData({user_type_id: 3})\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    const addUser = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n    \r\n            if(data.id) {\r\n                dispatch(EditData(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n                })\r\n                .catch(() => {\r\n                    alert('error')\r\n                })\r\n            } else {\r\n                dispatch(Register(props, data))\r\n                .then(() => {\r\n                    setShow(false);\r\n                })\r\n                .catch(() => {\r\n                    alert('error');\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const fetchUsers = (url = '/users', $params = {}) => {\r\n\r\n        dispatch(GetData(props, url, $params));\r\n\r\n    }\r\n\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(userList.data.links))\r\n        return userList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchUsers(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(userList.data.data)) {\r\n\r\n            return userList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td><Link to={'user/' + el.id}>{el.info ? el.info.customer_id : '-'}</Link></td>\r\n                    <td><Link to={'user/' + el.id}>{el.name}</Link></td>\r\n                    <td>{el.type_name}</td>\r\n                    <td>{el.email}</td>\r\n                    <td>{el.phone_number}</td>\r\n                    <td>{el.info && el.info.package ? el.info.package.name : 'None'}</td>\r\n                    <td>{el.created_at}</td>\r\n                    <td>{el.updated_at}</td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id)}}>Delete</Button>\r\n                            <Button onClick={e => handleEditShow(el)}>Edit</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(userList.loading) {\r\n\r\n            return <tr><td colSpan=\"9\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(userList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"9\" className=\"text-center\">{userList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"9\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const handleEditShow = (val) => {\r\n\r\n        val.customer_id = val.info ? val.info.customer_id : ''\r\n        val.package_id = val.info ? {'value' : val.info.package.id, 'label' : val.info.package.name} : ''\r\n\r\n        setData(val)\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    const handleDelete = id => {\r\n    \r\n        dispatch(DeleteData(props, id))\r\n\r\n    }\r\n\r\n    const fetchPackages = async (search) => {\r\n\r\n        const res = await axios.get('/packages?search=' + search)\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n\r\n        return options\r\n        \r\n    }\r\n\r\n    const promisePackagesOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(fetchPackages(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    const searchCustomer = async (email) => {\r\n\r\n        const res = await dmsAxios.get('/sample/sample/v3/customers?email='+email+'&page=1&pageSize=50')\r\n\r\n        console.log(res);\r\n    }\r\n\r\n    const promiseCustomersOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(searchCustomer(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    const userForm = () => {\r\n        let form = fields\r\n\r\n        if(data.user_type_id == 3) form = customerFields\r\n\r\n        return form.map((field, i) => {\r\n            if(field.type === 'text' || field.type === 'email') {\r\n                return <Form.Group as={Row} key={i} controlId={field.control_id}>\r\n                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                    <Col sm={9}>\r\n                        <Form.Control \r\n                            required={field.required}\r\n                            type={field.type} \r\n                            placeholder={field.placeholder}\r\n                            value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                            defaultValue={data[field.key]}\r\n                            onChange={ e => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n            } else if(field.type === 'select') {\r\n                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                    <Col sm={9}>\r\n                        <Form.Control \r\n                            size=\"sm\"\r\n                            required={field.required}\r\n                            as={field.type} \r\n                            placeholder={field.placeholder}\r\n                            value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                            onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }>\r\n\r\n                            {field.options.map((option, i) => {\r\n                                return <option key={i} value={option.key}>{option.label}</option>\r\n                            })}\r\n\r\n                        </Form.Control>\r\n                    </Col>\r\n                </Form.Group>\r\n            } else if(field.type === 'asyncselect') {\r\n                if(field.key == 'package_id') {\r\n                    return <AsyncSelect defaultOptions defaultValue={!_.isUndefined(data[field.key]) ? data[field.key] : ''} loadOptions={promisePackagesOptions} onChange={value => setData(prev => ({...prev, [field.key] : value}))} /> \r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleTypeChange = (val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, type : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchUsers('/users', tmpFilter)\r\n    }\r\n\r\n    const handleFilterInputChange = (key, val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, [key] : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchUsers('/users', tmpFilter)\r\n    }\r\n\r\n    // Start Laravel Echo\r\n\r\n    const initEcho = () => {\r\n        window.Echo.private(`reward`)\r\n        .listen('RewardCreated', (e) => {\r\n            console.log('channel', e);\r\n        });\r\n    }\r\n\r\n    // End Laravel Echo\r\n\r\n    React.useEffect(() => {\r\n\r\n        // initEcho()\r\n\r\n        fetchUsers()\r\n\r\n        // fetchRewards()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Button variant=\"primary\" onClick={handleShow}>\r\n                    Add User\r\n                </Button>\r\n        \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Form noValidate validated={validated} onSubmit={addUser}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{!_.isUndefined(data.id) ? 'Edit User' : 'Add User'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>                            \r\n                            {userForm()}\r\n                            {/* <AsyncSelect cacheOptions defaultOptions loadOptions={promisePackagesOptions} onChange={value => setData(prev => ({...prev, 'test' : value.value}))} /> */}\r\n\r\n                            {/* <AsyncSelect loadOptions={promiseCustomersOptions} onChange={value => searchCustomer(value.value)} />     */}\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                            Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>Type</Form.Label>\r\n                            <Col lg={3}>\r\n                                <Form.Control as=\"select\" size=\"sm\" custom defaultValue={!_.isEmpty(filters) && !_.isEmpty(filters.type) ? filters.type : 'all'} onChange={(e) => handleTypeChange(e.target.value)}>\r\n                                <option value=\"all\">All</option>\r\n                                <option value=\"3\">Customers</option>\r\n                                <option value=\"2\">Admins</option>\r\n                                <option value=\"1\">Super Admins</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Customer ID\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g ABC123\" onChange={(e) => handleFilterInputChange('customer_id', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Name\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g John Doe\" onChange={(e) => handleFilterInputChange('search', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Email\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g example@example.com\" onChange={(e) => handleFilterInputChange('email', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>                \r\n                <Table responsive striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Type</th>\r\n                            <th>Email</th>\r\n                            <th>Phone</th>\r\n                            <th>Package</th>\r\n                            <th>Created</th>\r\n                            <th>Updated</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {showData()}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Pagination>                    \r\n                    {showPagination()}\r\n                </Pagination>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default User;","import React, {useState, useRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Figure, Form, ListGroup, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport QRCode from \"qrcode.react\";\r\nimport AsyncSelect from 'react-select/async';\r\n\r\nconst AdminProfile = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const userid = props.match.params.user;\r\n    const [data, setData] = useState({});\r\n\r\n    const [user, setUser] = useState({})\r\n    const [rewards, setRewards] = useState({\r\n        loading: false,\r\n        data: [],\r\n        errorMsg: ''\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n        fetchUserRewards()\r\n        \r\n        setData(prev => ({...prev, 'type' : 'earn'}))\r\n        setData(prev => ({...prev, 'user_id' : userid}))\r\n    }, [])\r\n\r\n    const fetchUserRewards = async ($url = null) => {\r\n\r\n        setRewards(prev => ({...prev, 'loading' : true}));\r\n\r\n        const res = await axios.get($url ? $url : '/users/' + userid + '/rewards')\r\n\r\n        let result = res.data.data\r\n        \r\n        setRewards(prev => ({...prev, 'loading' : false}));\r\n\r\n        setRewards(prev => ({...prev, 'data' : result.rewards}));\r\n\r\n    }\r\n\r\n    const showRewardsPagination = () => {\r\n        if(!_.isEmpty(rewards.data.links))\r\n        return rewards.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchUserRewards(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const showRewards = () => {\r\n\r\n        let dataList = rewards\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n                return <ListGroup.Item key={key}>{el.reward_name}</ListGroup.Item>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const fetchData = async event => {\r\n\r\n        const res = await axios.get('/users/' + userid)\r\n\r\n        setUser(res.data.data)\r\n\r\n    }\r\n\r\n    const qrCode = () => {\r\n        if(!_.isEmpty(user.info) && !_.isEmpty(user.info.customer_id)) {\r\n\r\n            return <Figure>\r\n                        <QRCode value={user.info.customer_id} />\r\n                        <Figure.Caption>{user.info.customer_id}</Figure.Caption>\r\n                    </Figure>\r\n\r\n        }\r\n    }\r\n\r\n    const fetchActions = async (search) => {\r\n\r\n        const res = await axios.get('/campaigns/'+data.campaign_id+'/actions?search=' + search)\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a].action\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n\r\n        return options\r\n        \r\n    }\r\n\r\n    const promiseActionOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(fetchActions(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    const fetchRewards = async (search) => {\r\n\r\n        const res = await axios.get('/campaigns/' + data.campaign_id + '/actions/' + data.action_id)\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a].reward\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n\r\n        return options\r\n        \r\n    }\r\n\r\n    const promiseRewardOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(fetchRewards(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    const fetchCampaigns = async (search) => {\r\n\r\n        const res = await axios.get('/campaigns?search=' + search)\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n\r\n        return options\r\n        \r\n    }\r\n\r\n    const promiseCampaignOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(fetchCampaigns(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    const handleRewardSubmit = async () => {\r\n        const res = await axios.post('transactions', data)\r\n\r\n        var result = res.data.data\r\n\r\n        setUser(prev => ({...prev, 'points' : result.balance}))\r\n\r\n        fetchUserRewards()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            {qrCode()}\r\n                            <Card.Title>{user.name}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{!_.isEmpty(user.info) && !_.isEmpty(user.info.address) ? user.info.address : '' }</Card.Subtitle>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Points</Col>\r\n                                    <Col md=\"9\"><Badge variant=\"info\">{user.points}</Badge></Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Personal Information</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Firstname</Col>\r\n                                    <Col md=\"8\">{user.firstname}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Middlename</Col>\r\n                                    <Col md=\"8\">{user.middlename}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Lastname</Col>\r\n                                    <Col md=\"8\">{user.lastname}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Email</Col>\r\n                                    <Col md=\"8\">{user.email}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Phone</Col>\r\n                                    <Col md=\"8\">{user.phone_number}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Package</Col>\r\n                                    <Col md=\"8\">{!_.isEmpty(user.info) && !_.isNull(user.info.package) ? user.info.package.name : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Vehicle Info</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Year</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_year) ? user.info.vehicle_year : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Make</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_make) ? user.info.vehicle_make : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Model</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_model) ? user.info.vehicle_model : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Trim</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_trim) ? user.info.vehicle_trim : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Color</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_color) ? user.info.vehicle_color : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Vin No.</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_vin_no) ? user.info.vehicle_vin_no : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Add User Action</Card.Title>\r\n                            <Card.Text>\r\n                                <AsyncSelect cacheOptions defaultOptions loadOptions={promiseCampaignOptions} onChange={value => setData(prev => ({'type' : 'earn', 'user_id' : userid, 'campaign_id' : value.value, 'campaign_name' : value.label}))} />\r\n                                {data.campaign_id ? <AsyncSelect key={'campaign-' + data.campaign_id} defaultOptions loadOptions={promiseActionOptions} onChange={value => setData(prev => ({...prev, 'action_id' : value.value, 'action_name' : value.label}))} /> : ''}\r\n                                {data.action_id ? <AsyncSelect key={'action-' + data.action_id} isMulti defaultOptions loadOptions={promiseRewardOptions} onChange={value => setData(prev => ({...prev, 'rewards' : value}))} /> : ''}\r\n\r\n                                {data.campaign_id && data.action_id  && !_.isEmpty(data.rewards) ? <Button onClick={handleRewardSubmit}>Submit</Button> : ''}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Rewards</Card.Title>\r\n                            <Card.Text>\r\n                                <ListGroup variant=\"flush\">\r\n                                {showRewards()}\r\n                                </ListGroup>\r\n                                \r\n                                <Pagination>                    \r\n                                    {showRewardsPagination()}\r\n                                </Pagination>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst CustomerProfile = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const userid = props.match.params.user;\r\n    const [data, setData] = useState({});\r\n\r\n    const [user, setUser] = useState({})\r\n    const [rewards, setRewards] = useState({\r\n        loading: false,\r\n        data: [],\r\n        errorMsg: ''\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n        fetchUserRewards()\r\n        \r\n        setData(prev => ({...prev, 'type' : 'earn'}))\r\n        setData(prev => ({...prev, 'user_id' : userid}))\r\n    }, [])\r\n\r\n    const fetchUserRewards = async ($url = null) => {\r\n\r\n        setRewards(prev => ({...prev, 'loading' : true}));\r\n\r\n        const res = await axios.get($url ? $url : '/users/' + userid + '/rewards')\r\n\r\n        let result = res.data.data\r\n        \r\n        setRewards(prev => ({...prev, 'loading' : false}));\r\n\r\n        setRewards(prev => ({...prev, 'data' : result.rewards}));\r\n\r\n    }\r\n\r\n    const handleClaim = async (reward_id) => {\r\n\r\n        const res = await axios.post('claim', {'reward_id' : reward_id, 'qty' : 1})\r\n\r\n        let result = res.data.data\r\n        let reward = result.reward\r\n\r\n        if(reward.status == 'completed') {\r\n            let stateData = rewards.data\r\n            let newData = stateData.data.filter((item) => item.id !== reward.id)\r\n            \r\n            stateData.data = newData;\r\n\r\n            setRewards(prev => ({...prev, 'data' : stateData}));\r\n        }\r\n\r\n    }    \r\n\r\n    const showRewardsPagination = () => {\r\n        if(!_.isEmpty(rewards.data.links))\r\n        return rewards.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchUserRewards(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const showRewards = () => {\r\n\r\n        let dataList = rewards\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n                return <ListGroup.Item key={key}>{el.reward_name} <Button size=\"sm\" onClick={() => handleClaim(el.id)}>Claim</Button></ListGroup.Item>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const fetchData = async event => {\r\n\r\n        const res = await axios.get('/users/' + userid)\r\n\r\n        setUser(res.data.data)\r\n\r\n    }\r\n\r\n    const qrCode = () => {\r\n        if(!_.isEmpty(user.info) && !_.isEmpty(user.info.customer_id)) {\r\n\r\n            return <Figure>\r\n                        <QRCode value={user.info.customer_id} />\r\n                        <Figure.Caption>{user.info.customer_id}</Figure.Caption>\r\n                    </Figure>\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            {qrCode()}\r\n                            <Card.Title>{user.name}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{!_.isEmpty(user.info) && !_.isEmpty(user.info.address) ? user.info.address : '' }</Card.Subtitle>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Points</Col>\r\n                                    <Col md=\"9\"><Badge variant=\"info\">{user.points}</Badge></Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Personal Information</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Firstname</Col>\r\n                                    <Col md=\"8\">{user.firstname}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Middlename</Col>\r\n                                    <Col md=\"8\">{user.middlename}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Lastname</Col>\r\n                                    <Col md=\"8\">{user.lastname}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Email</Col>\r\n                                    <Col md=\"8\">{user.email}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Phone</Col>\r\n                                    <Col md=\"8\">{user.phone_number}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Package</Col>\r\n                                    <Col md=\"8\">{!_.isEmpty(user.info) && !_.isNull(user.info.package) ? user.info.package.name : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Vehicle Info</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Year</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_year) ? user.info.vehicle_year : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Make</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_make) ? user.info.vehicle_make : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Model</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_model) ? user.info.vehicle_model : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Trim</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_trim) ? user.info.vehicle_trim : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Color</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_color) ? user.info.vehicle_color : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Vin No.</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_vin_no) ? user.info.vehicle_vin_no : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Rewards</Card.Title>\r\n                            <Card.Text>\r\n                                <ListGroup variant=\"flush\">\r\n                                {showRewards()}\r\n                                </ListGroup>\r\n                                \r\n                                <Pagination>                    \r\n                                    {showRewardsPagination()}\r\n                                </Pagination>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminProfile(props)\r\n\r\n    } else {\r\n\r\n        return CustomerProfile(props)\r\n\r\n    }\r\n}","import React, {useState, useRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Figure, Form, ListGroup, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport QRCode from \"qrcode.react\";\r\n\r\nconst AdminProfile = (props) => {\r\n    \r\n    const [user, setUser] = useState({})\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = async event => {\r\n\r\n        const res = await axios.get('/profile')\r\n\r\n        setUser(res.data.data)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>{user.name}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{user.type_name}</Card.Subtitle>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Points</Col>\r\n                                    <Col md=\"9\"><Badge variant=\"info\">{user.points}</Badge></Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Personal Information</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Firstname</Col>\r\n                                    <Col md=\"8\">{user.firstname || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Middlename</Col>\r\n                                    <Col md=\"8\">{user.middlename || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Lastname</Col>\r\n                                    <Col md=\"8\">{user.lastname || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Email</Col>\r\n                                    <Col md=\"8\">{user.email}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Phone</Col>\r\n                                    <Col md=\"8\">{user.phone_number || '-'}</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst CustomerProfile = (props) => {\r\n    \r\n    const auth = useSelector(state => state.Auth);\r\n    const [user, setUser] = useState({})\r\n    const [rewards, setRewards] = useState({\r\n        loading: false,\r\n        data: [],\r\n        errorMsg: ''\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n        fetchUserRewards()\r\n    }, [])\r\n\r\n    const fetchUserRewards = async ($url = null) => {\r\n\r\n        setRewards(prev => ({...prev, 'loading' : true}));\r\n\r\n        const res = await axios.get($url ? $url : '/users/' + auth.user.id + '/rewards')\r\n\r\n        let result = res.data.data\r\n        \r\n        setRewards(prev => ({...prev, 'loading' : false}));\r\n\r\n        setRewards(prev => ({...prev, 'data' : result.rewards}));\r\n\r\n    }\r\n\r\n    const fetchData = async event => {\r\n\r\n        const res = await axios.get('/profile')\r\n\r\n        setUser(res.data.data)\r\n\r\n    }\r\n\r\n    const handleClaim = async (reward_id) => {\r\n\r\n        const res = await axios.post('claim', {'reward_id' : reward_id, 'qty' : 1})\r\n\r\n        let result = res.data.data\r\n        let reward = result.reward\r\n\r\n        if(reward.status == 'completed') {\r\n            let stateData = rewards.data\r\n            let newData = stateData.data.filter((item) => item.id !== reward.id)\r\n            \r\n            stateData.data = newData;\r\n\r\n            setRewards(prev => ({...prev, 'data' : stateData}));\r\n        }\r\n\r\n    }    \r\n\r\n    const showRewardsPagination = () => {\r\n        if(!_.isEmpty(rewards.data.links))\r\n        return rewards.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchUserRewards(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const showRewards = () => {\r\n\r\n        let dataList = rewards\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n                return <ListGroup.Item key={key}>{el.reward_name} <Button size=\"sm\" onClick={() => handleClaim(el.id)}>Claim</Button></ListGroup.Item>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">Unable to get data</td></tr>\r\n\r\n    }\r\n\r\n    const qrCode = () => {\r\n        if(!_.isEmpty(user.info) && !_.isEmpty(user.info.customer_id)) {\r\n\r\n            return <Figure>\r\n                        <QRCode value={user.info.customer_id} />\r\n                        <Figure.Caption>{user.info.customer_id}</Figure.Caption>\r\n                    </Figure>\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            {qrCode()}\r\n                            <Card.Title>{user.name}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{user.type_name}</Card.Subtitle>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Points</Col>\r\n                                    <Col md=\"9\"><Badge variant=\"info\">{user.points}</Badge></Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Personal Information</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Firstname</Col>\r\n                                    <Col md=\"8\">{user.firstname || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Middlename</Col>\r\n                                    <Col md=\"8\">{user.middlename || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Lastname</Col>\r\n                                    <Col md=\"8\">{user.lastname || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Email</Col>\r\n                                    <Col md=\"8\">{user.email}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Phone</Col>\r\n                                    <Col md=\"8\">{user.phone_number || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Package</Col>\r\n                                    <Col md=\"8\">{!_.isEmpty(user.info) && !_.isNull(user.info.package) ? user.info.package.name : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Vehicle Info</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Year</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_year) ? user.info.vehicle_year : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Make</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_make) ? user.info.vehicle_make : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Model</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_model) ? user.info.vehicle_model : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Trim</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_trim) ? user.info.vehicle_trim : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Color</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_color) ? user.info.vehicle_color : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Vin No.</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_vin_no) ? user.info.vehicle_vin_no : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Rewards</Card.Title>\r\n                            <Card.Text>\r\n                                <ListGroup variant=\"flush\">\r\n                                {showRewards()}\r\n                                </ListGroup>\r\n                                \r\n                                <Pagination>                    \r\n                                    {showRewardsPagination()}\r\n                                </Pagination>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminProfile(props)\r\n\r\n    } else {\r\n\r\n        return CustomerProfile(props)\r\n\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nexport const GetPackages = (props, url = '/packages') => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(url)\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const AddPackage = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post('/packages', data)\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_ADDED\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n\r\n        return Promise.reject();\r\n        \r\n    }\r\n}\r\n\r\nexport const EditPackage = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.put('/packages/' + data.id, data)\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_UPDATED\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n\r\n        return Promise.reject();\r\n        \r\n    }\r\n}\r\n\r\nexport const DeletePackage = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.delete('/packages/' + id)\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_DELETED\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, ButtonGroup, Col, Form, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport {AddPackage, DeletePackage, EditPackage, GetPackages} from \"../actions/packageAction\";\r\nimport AsyncSelect from 'react-select/async';\r\n\r\nconst Package = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const packageList = useSelector(state => state.Package);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [reward, setReward] = useState({});\r\n    const fields = [\r\n        {\r\n            'key': 'id',\r\n            'title': 'Name',\r\n            'type': 'hidden',\r\n            'placeholder': 'Package ID',\r\n            'control_id': 'formPackageId',\r\n            'hidden': true\r\n        },\r\n        {\r\n            'key': 'name',\r\n            'title': 'Name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter package name',\r\n            'control_id': 'formPackageName',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'description',\r\n            'title': 'Description',\r\n            'type': 'text',\r\n            'placeholder': 'Enter package description',\r\n            'control_id': 'formPackageDescription',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'multiplier',\r\n            'title': 'Multiplier',\r\n            'type': 'text',\r\n            'placeholder': 'Enter package multiplier',\r\n            'control_id': 'formPackageMultiplier',\r\n            'required': true\r\n        }\r\n    ];\r\n\r\n    const productName = props.match.params.product;\r\n\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (packageData) => {\r\n\r\n        setData({})\r\n\r\n        setShow(true);\r\n\r\n    }\r\n    const handleEditShow = (packageData) => {\r\n\r\n        packageData.rewards.map((reward, i) => {\r\n            reward['value'] = reward.reward_id\r\n            reward['label'] = reward.reward.name\r\n            return reward\r\n        })\r\n\r\n        setData(packageData)\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = (url = '/packages') => {\r\n\r\n        console.log(process.env.NODE_ENV);\r\n\r\n        dispatch(GetPackages(props, url));\r\n\r\n    }\r\n\r\n    const addPackage = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n\r\n            if(data.id) {\r\n                dispatch(EditPackage(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n                }).catch(() => {\r\n                    alert('error')\r\n                })\r\n            }\r\n            else {\r\n                dispatch(AddPackage(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n                }).catch(() => {\r\n                    alert('error')\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const fetchRewards = async () => {\r\n\r\n        const res = await axios.get('/rewards')\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n        \r\n        return options\r\n    }\r\n\r\n    const promiseRewardOptions = inputValue => new Promise(resolve => {\r\n\r\n        setTimeout(() => {\r\n            resolve(fetchRewards(inputValue));\r\n        }, 1000);\r\n\r\n    });\r\n\r\n    const handleDelete = id => {\r\n    \r\n        dispatch(DeletePackage(props, id))\r\n\r\n    }\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(packageList.data.links))\r\n        return packageList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(packageList.data.data)) {\r\n\r\n            return packageList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.name}</td>\r\n                    <td>{el.description}</td>\r\n                    <td>{el.multiplier}</td>\r\n                    <td>{el.created_at}</td>\r\n                    <td>{el.updated_at}</td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id)}}>Delete</Button>\r\n                            <Button onClick={e => handleEditShow(el)}>Edit</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(packageList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(packageList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{packageList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const showTmp = () => {\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {showTmp()}\r\n            <Row>\r\n                <Button variant=\"primary\" onClick={handleShow}>\r\n                    Add Package\r\n                </Button>\r\n        \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Form noValidate validated={validated} onSubmit={addPackage}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Add Package</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            {fields.map((field, i) => {\r\n                                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        <Form.Control \r\n                                            required={field.required}\r\n                                            type={field.type} \r\n                                            placeholder={field.placeholder}\r\n                                            value={data[field.key]}\r\n                                            onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                        />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            })}\r\n                            <AsyncSelect key={0} isMulti cacheOptions defaultOptions defaultValue={data.rewards} loadOptions={promiseRewardOptions} onChange={value => setData(prev => ({...prev, 'rewards' : value}))} placeholder=\"None\" />\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                            Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Table responsive striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Multiplier</th>\r\n                            <th>Created</th>\r\n                            <th>Updated</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {showData()}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Pagination>                    \r\n                    {showPagination()}\r\n                </Pagination>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Package;","import axios from \"axios\";\r\n\r\nconst apiRoute = '/actions/'\r\n\r\nexport const GetData = (props, url = apiRoute) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"ACTION_REQUEST\"\r\n    })\r\n\r\n    await axios.get(url)\r\n    .then((res) => {\r\n\r\n        dispatch({\r\n            type: \"ACTION_FETCH\",\r\n            payload: res.data.data\r\n        })\r\n\r\n    })\r\n    .catch((error) => {\r\n        if(error.response) {\r\n            dispatch({\r\n                type: \"ACTION_FAIL\",\r\n                payload: error.response.data.message\r\n            })\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const AddData = (props, data) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"ACTION_REQUEST\"\r\n    })\r\n\r\n    await axios.post(apiRoute, data)\r\n    .then((res) => {\r\n\r\n        dispatch({\r\n            type: \"ACTION_ADD\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n\r\n    })\r\n    .catch((error) => {\r\n        if(error.response) {\r\n            dispatch({\r\n                type: \"ACTION_FAIL\",\r\n                payload: error.response.data.message\r\n            })\r\n        }\r\n\r\n        return Promise.reject();\r\n    })\r\n\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"ACTION_REQUEST\"\r\n    })\r\n\r\n    await axios.put(apiRoute + data.id, data)\r\n    .then((res) => {\r\n\r\n        dispatch({\r\n            type: \"ACTION_UPDATE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n\r\n    })\r\n    .catch((error) => {\r\n        if(error.response) {\r\n            dispatch({\r\n                type: \"ACTION_FAIL\",\r\n                payload: error.response.data.message\r\n            })\r\n        }\r\n\r\n        return Promise.reject();\r\n    })\r\n\r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"ACTION_REQUEST\"\r\n    })\r\n\r\n    await axios.delete(apiRoute + id)\r\n    .then((res) => {\r\n\r\n        dispatch({\r\n            type: \"ACTION_DELETE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n    })\r\n    .catch((error) => {\r\n        if(error.response) {\r\n            dispatch({\r\n                type: \"ACTION_FAIL\",\r\n                payload: error.response.data.message\r\n            })\r\n        }\r\n    })\r\n        \r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, ButtonGroup, Card, Col, Form, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport {AddData, DeleteData, EditData, GetData} from \"../actions/actionAction\";\r\n\r\nconst AdminAction = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const actionList = useSelector(state => state.Action);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const fields = [\r\n        {\r\n            'key': 'id',\r\n            'title': 'Name',\r\n            'type': 'hidden',\r\n            'placeholder': 'Action ID',\r\n            'control_id': 'formActionId',\r\n            'hidden': true\r\n        },\r\n        {\r\n            'key': 'name',\r\n            'title': 'Name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter action name',\r\n            'control_id': 'formActionName',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'description',\r\n            'title': 'Description',\r\n            'type': 'text',\r\n            'placeholder': 'Enter action description',\r\n            'control_id': 'formActionDescription',\r\n            'required': true\r\n        }\r\n    ];\r\n\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {\r\n\r\n        setData({})\r\n\r\n        setShow(true);\r\n\r\n    }\r\n    const handleEditShow = (val) => {\r\n\r\n        setData(val)\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    const fetchData = (url = '/actions') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n\r\n            if(data.id) {\r\n                dispatch(EditData(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n                }).catch(() => {\r\n                    alert('error')\r\n                })\r\n            } else {\r\n                dispatch(AddData(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n                }).catch(() => {\r\n                    alert('error')\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleDelete = id => {\r\n    \r\n        dispatch(DeleteData(props, id))\r\n\r\n    }\r\n\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(actionList.data.links))\r\n        return actionList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(actionList.data.data)) {\r\n\r\n            return actionList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.name}</td>\r\n                    <td>{el.description}</td>\r\n                    <td>{el.created_at}</td>\r\n                    <td>{el.updated_at}</td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id)}}>Delete</Button>\r\n                            <Button onClick={e => handleEditShow(el)}>Edit</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(actionList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(actionList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{actionList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Button variant=\"primary\" onClick={handleShow}>\r\n                    Add Action\r\n                </Button>\r\n        \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Add Action</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            {fields.map((field, i) => {\r\n                                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        <Form.Control \r\n                                            required={field.required}\r\n                                            type={field.type} \r\n                                            placeholder={field.placeholder}\r\n                                            value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                            onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                        />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            })}\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                            Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Table responsive striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Created</th>\r\n                            <th>Updated</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {showData()}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Pagination>                    \r\n                    {showPagination()}\r\n                </Pagination>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst UserAction = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const actionList = useSelector(state => state.Action);\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(actionList.data.data)) {\r\n\r\n            return actionList.data.data.map((el, key) => {\r\n\r\n                return <Col md={4} className=\"mb-3\">\r\n                    <Card key={key}>\r\n                        <Card.Body>\r\n                            <Card.Title>{el.name}</Card.Title>\r\n                            <Card.Text>{el.description}</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            })\r\n\r\n        }\r\n\r\n        if(actionList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(actionList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{actionList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchData()\r\n\r\n    }, [])\r\n\r\n    const fetchData = (url = '/actions') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"pt-3\">\r\n                {showData()}\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst Init  = (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminAction(props)\r\n\r\n    } else {\r\n\r\n        return UserAction(props)\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default AdminAction","import axios from \"axios\";\r\n\r\nconst apiRoute = '/campaigns'\r\n\r\nexport const GetData = (props, url = apiRoute) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(url)\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FETCH\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const GetDataById = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FETCH\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const AddData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post(apiRoute, data)\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_ADD\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n\r\n        return Promise.reject();\r\n        \r\n    }\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.put(apiRoute + '/' + data.id, data)\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_UPDATE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n\r\n        return Promise.reject();\r\n        \r\n    }\r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.delete(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_DELETE\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        console.log(error.response.data);\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, ButtonGroup, Card, Col, Form, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport {AddData, DeleteData, EditData, GetData} from \"../actions/campaignAction\";\r\nimport Moment from 'react-moment';\r\nimport AsyncSelect from 'react-select/async';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst AdminCampaign = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const dataList = useSelector(state => state.Campaign);\r\n    const [campaignList, setCampaignList] = useState({\r\n        loading: false,\r\n        data: [],\r\n        errorMsg: ''\r\n    });\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [reward, setReward] = useState({});\r\n    const [showAddCampaign, setShowAddCampaign] = useState(false);\r\n    const [showAddReward, setShowAddReward] = useState(false);\r\n    const fields = [\r\n        {\r\n            'key': 'id',\r\n            'title': 'ID',\r\n            'type': 'hidden',\r\n            'placeholder': 'Campaign ID',\r\n            'control_id': 'formCampaignId',\r\n            'hidden': true\r\n        },\r\n        {\r\n            'key': 'name',\r\n            'title': 'Name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter campaign name',\r\n            'control_id': 'formCampaignName',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'description',\r\n            'title': 'Description',\r\n            'type': 'text',\r\n            'placeholder': 'Enter campaign description',\r\n            'control_id': 'formCampaignDescription',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'start_date',\r\n            'title': 'Start Date',\r\n            'type': 'datepicker',\r\n            'placeholder': 'Enter campaign start date',\r\n            'control_id': 'formStartDescription',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'end_date',\r\n            'title': 'End Date',\r\n            'type': 'datepicker',\r\n            'placeholder': 'Enter campaign end date',\r\n            'control_id': 'formEndDescription',\r\n            'required': true\r\n        }\r\n    ];\r\n    \r\n    const handleCloseAddCampaign = () => setShowAddCampaign(false);\r\n\r\n    const handleShow = () => {\r\n\r\n        setData({\r\n            'start_date': new Date(),\r\n            'end_date': new Date()\r\n        })\r\n\r\n        setShowAddCampaign(true);\r\n\r\n    }\r\n\r\n    const handleEditShow = (val) => {\r\n\r\n        setData({\r\n            'id': val.id,\r\n            'name': val.name,\r\n            'description': val.description,\r\n            'start_date': new Date(val.start_date),\r\n            'end_date': new Date(val.end_date)\r\n        })\r\n\r\n        setShowAddCampaign(true);\r\n\r\n    }\r\n\r\n    const handleCloseAddReward = () => setShowAddReward(false);\r\n\r\n    const handleRewardsShow = async (campaign_id) => {\r\n\r\n        setShowAddReward(true);\r\n\r\n        setCampaignList({...campaignList, loading: true});\r\n        \r\n        const res = await axios.get('/campaigns/' + campaign_id)\r\n        var data = res.data.data;\r\n\r\n        setCampaignList({...campaignList, data: data, loading: false});\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchData()\r\n\r\n        // fetchActions()\r\n\r\n        // fetchRewards()\r\n\r\n    }, [])\r\n\r\n    const fetchData = (url = '/campaigns') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    const fetchActions = async (search) => {\r\n\r\n        const res = await axios.get('/actions?search=' + search)\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n\r\n        return options\r\n        \r\n    }\r\n\r\n    const promiseActionOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(fetchActions(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    const fetchRewards = async () => {\r\n\r\n        const res = await axios.get('/rewards')\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n        \r\n        return options\r\n    }\r\n\r\n    const promiseRewardOptions = inputValue => new Promise(resolve => {\r\n\r\n        setTimeout(() => {\r\n            resolve(fetchRewards(inputValue));\r\n        }, 1000);\r\n\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n\r\n            if(data.id) {\r\n                dispatch(EditData(props, data))\r\n                .then(() => {\r\n                    setShowAddCampaign(false)\r\n                })\r\n                .catch(() => {\r\n                    alert('error')\r\n                })\r\n            }\r\n            else {\r\n                dispatch(AddData(props, data))\r\n                .then(() => {\r\n                    setShowAddCampaign(false)\r\n                })\r\n                .catch(() => {\r\n                    alert('error')\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const addReward = async () => {\r\n        const data = {...reward, campaign_id: campaignList.data.id}\r\n\r\n        const res = await axios.post('/campaign_rewards', data)\r\n\r\n        const newCampaign = res.data.data;\r\n\r\n        const tmp = campaignList\r\n\r\n        tmp.data.campaigns.data = [newCampaign, ...tmp.data.campaigns.data];\r\n\r\n        setCampaignList({...campaignList, ...tmp});\r\n\r\n    }\r\n\r\n    const handleDelete = async (id, key) => {\r\n\r\n        switch (key) {\r\n            case 'campaign':\r\n\r\n                const res = await axios.delete('campaign_rewards/' + id)\r\n\r\n                const data = res.data.data;\r\n\r\n                var tmp = campaignList.data\r\n                tmp.campaigns.data = tmp.campaigns.data.filter((item) => item.id !== data.id)\r\n                \r\n                setCampaignList({...campaignList, data: tmp});\r\n\r\n                break;\r\n        \r\n            default:\r\n    \r\n                dispatch(DeleteData(props, id))\r\n\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    const fetchCampaignData = async (url) => {\r\n\r\n        const res = await axios.get(url)\r\n        const data = res.data.data\r\n\r\n        setCampaignList({...campaignList, data: data});\r\n\r\n    }\r\n\r\n    const showPagination = (key) => {\r\n        switch (key) {\r\n            case 'campaigns':\r\n\r\n                if(!_.isEmpty(campaignList.data.campaigns) && !_.isEmpty(campaignList.data.campaigns.links))\r\n                return campaignList.data.campaigns.links.map((page, i) => {\r\n                    return <Pagination.Item key={i} active={page.active} onClick={() => fetchCampaignData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                        __html: page.label\r\n                    }}></span></Pagination.Item>\r\n                })\r\n                \r\n                break;\r\n        \r\n            default:\r\n\r\n                if(!_.isEmpty(dataList.data.links))\r\n                return dataList.data.links.map((page, i) => {\r\n                    return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                        __html: page.label\r\n                    }}></span></Pagination.Item>\r\n                })\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.name}</td>\r\n                    <td>{el.description}</td>\r\n                    <td><Moment format=\"YYYY/MM/DD\">{el.start_date}</Moment></td>\r\n                    <td><Moment format=\"YYYY/MM/DD\">{el.end_date}</Moment></td>\r\n                    <td><Moment format=\"YYYY/MM/DD hh:mm:ss\">{el.created_at}</Moment></td>\r\n                    <td><Moment format=\"YYYY/MM/DD hh:mm:ss\">{el.updated_at}</Moment></td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"success\" onClick={() => {handleRewardsShow(el.id)}}>Rewards</Button>\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id)}}>Delete</Button>\r\n                            <Button onClick={e => handleEditShow(el)}>Edit</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const showCampaigns = () => {\r\n\r\n        if(!_.isEmpty(campaignList.data.campaigns) && !_.isEmpty(campaignList.data.campaigns.data)) {\r\n\r\n            return campaignList.data.campaigns.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.reward.name}</td>\r\n                    <td>{el.action.name}</td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id, 'campaign')}}>Delete</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(campaignList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(campaignList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Button variant=\"primary\" onClick={handleShow}>\r\n                    Add Campaign\r\n                </Button>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Table responsive striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Start</th>\r\n                            <th>End</th>\r\n                            <th>Created</th>\r\n                            <th>Updated</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {showData()}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Pagination>                    \r\n                    {showPagination()}\r\n                </Pagination>\r\n            </Row>\r\n\r\n            {/* Start Modals */}\r\n        \r\n            <Modal show={showAddCampaign} onHide={handleCloseAddCampaign}>\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{!_.isUndefined(data.id) ? 'Edit Campaign' : 'Add Campaign'}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {fields.map((field, i) => {\r\n                            if(field.type === 'text') {\r\n                                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        <Form.Control \r\n                                            required={field.required}\r\n                                            type={field.type} \r\n                                            placeholder={field.placeholder}\r\n                                            value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                            onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                        />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            } else if(field.type === 'select') {\r\n                                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        <Form.Control \r\n                                            size=\"sm\"\r\n                                            required={field.required}\r\n                                            as={field.type} \r\n                                            placeholder={field.placeholder}\r\n                                            value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                            onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }>\r\n\r\n                                            {field.options.map((option, i) => {\r\n                                                return <option key={i} value={option.key}>{option.label}</option>\r\n                                            })}\r\n\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            } else if(field.type === 'datepicker') {\r\n                                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                <Col sm={9}>\r\n                                    <DatePicker className=\"form-control\" minDate={new Date()} dateFormat=\"MM/dd/yyyy\" selected={data[field.key]} onChange={date => setData(prev => ({...prev, [field.key] : date}))} />\r\n                                </Col>\r\n                            </Form.Group>\r\n                            }\r\n                        })}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleCloseAddCampaign}>\r\n                        Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                        Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        \r\n            <Modal show={showAddReward} onHide={handleCloseAddReward}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Rewards</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row>\r\n                        <Col md=\"12\">\r\n                            Action:\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <AsyncSelect cacheOptions defaultOptions loadOptions={promiseActionOptions} onChange={value => setReward(prev => ({...prev, 'action_id' : value.value}))} />\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            Reward:\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <AsyncSelect cacheOptions defaultOptions loadOptions={promiseRewardOptions} onChange={value => setReward(prev => ({...prev, 'reward_id' : value.value}))} />\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <Button onClick={addReward}>Add</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>     \r\n                        <Col md=\"12\">\r\n                            <Table responsive striped bordered hover size=\"sm\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Reward</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {showCampaigns()}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                            <Pagination>                    \r\n                                {showPagination('campaigns')}\r\n                            </Pagination>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* End Modals */}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst UserCampaign = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const dataList = useSelector(state => state.Campaign);\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n\r\n                return <Col md={4}>\r\n                    <Card key={key}>\r\n                        <Card.Body>\r\n                            <Card.Title>{el.name}</Card.Title>\r\n                            <Card.Text>\r\n                                <Row><Col>{el.description}</Col></Row>\r\n                                <Row><Col>Expiration: {el.end_date}</Col></Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchData()\r\n\r\n    }, [])\r\n\r\n    const fetchData = (url = '/campaigns') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"pt-3\">\r\n                {showData()}\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminCampaign(props)\r\n\r\n    } else {\r\n\r\n        return UserCampaign(props)\r\n\r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, ButtonGroup, Col, Form, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nconst CampaignDetail = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const campaignid = props.match.params.campaign;\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const [campaign, setCampaign] = useState({})\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = async event => {\r\n\r\n        const res = await axios.get('/campaigns/' + campaignid)\r\n\r\n        console.log(res.data.data);\r\n\r\n        setCampaign(res.data.data)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md=\"12\">{campaign.name}</Col>\r\n                <Col md=\"12\">{campaign.description}</Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default CampaignDetail;","import axios from \"axios\";\r\n\r\nconst apiRoute = '/rewards'\r\n\r\nexport const GetData = (props, url = apiRoute) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REWARD_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(url)\r\n\r\n        dispatch({\r\n            type: \"REWARD_FETCH\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"REWARD_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const AddData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REWARD_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post(apiRoute, data)\r\n\r\n        dispatch({\r\n            type: \"REWARD_ADD\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"REWARD_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n\r\n        return Promise.reject();\r\n        \r\n    }\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REWARD_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.put(apiRoute + '/' + data.id, data)\r\n\r\n        dispatch({\r\n            type: \"REWARD_UPDATE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"REWARD_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n\r\n        return Promise.reject();\r\n        \r\n    }\r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REWARD_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.delete(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"REWARD_DELETE\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"REWARD_FAIL\",\r\n            payload: error.response.data.message\r\n        })\r\n        \r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Form, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport {AddData, DeleteData, EditData, GetData} from \"../actions/rewardAction\";\r\nimport axios from \"axios\";\r\n\r\nconst AdminReward = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const dataList = useSelector(state => state.Reward);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const fields = [\r\n        {\r\n            'key': 'id',\r\n            'title': 'Name',\r\n            'type': 'hidden',\r\n            'placeholder': 'Action ID',\r\n            'control_id': 'formActionId',\r\n            'hidden': true\r\n        },\r\n        {\r\n            'key': 'type',\r\n            'title': 'Type',\r\n            'type': 'select',\r\n            'placeholder': 'Enter action type',\r\n            'options': [\r\n                {\r\n                    'label': 'Item',\r\n                    'key': 'item'\r\n                }, \r\n                {\r\n                    'label': 'Discount',\r\n                    'key': 'discount'\r\n                },\r\n                {\r\n                    'label': 'Points',\r\n                    'key': 'points'\r\n                }\r\n            ],\r\n            'control_id': 'formActionType',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'value',\r\n            'title': 'Value',\r\n            'type': 'number',\r\n            'min': 0,\r\n            'placeholder': 'Enter action name',\r\n            'control_id': 'formValue',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'name',\r\n            'title': 'Name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter action name',\r\n            'control_id': 'formActionName',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'description',\r\n            'title': 'Description',\r\n            'type': 'text',\r\n            'placeholder': 'Enter action description',\r\n            'control_id': 'formActionDescription',\r\n            'required': true\r\n        }\r\n    ];\r\n\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {\r\n\r\n        setData({\r\n            'type': 'item'\r\n        })\r\n\r\n        setShow(true);\r\n\r\n    }\r\n    const handleEditShow = (val) => {\r\n\r\n        setData(val)\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = (url = '/rewards') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n\r\n            if(data.id) {\r\n                dispatch(EditData(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n                })\r\n                .catch(() => {\r\n                    alert('error')\r\n                })\r\n            }\r\n            else {\r\n                dispatch(AddData(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n                })\r\n                .catch(() => {\r\n                    alert('error')\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleDelete = id => {\r\n    \r\n        dispatch(DeleteData(props, id))\r\n\r\n    }\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(dataList.data.links))\r\n        return dataList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.name}</td>\r\n                    <td>{el.description}</td>\r\n                    <td>{el.type}</td>\r\n                    <td>{el.created_at}</td>\r\n                    <td>{el.updated_at}</td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id)}}>Delete</Button>\r\n                            <Button onClick={e => handleEditShow(el)}>Edit</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Button variant=\"primary\" onClick={handleShow}>\r\n                    Add Reward\r\n                </Button>\r\n        \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Add Reward</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            {fields.map((field, i) => {\r\n                                if(field.type === 'text') {\r\n                                    return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                        <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                        <Col sm={9}>\r\n                                            <Form.Control \r\n                                                required={field.required}\r\n                                                type={field.type} \r\n                                                placeholder={field.placeholder}\r\n                                                value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                                onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                } else if(field.type === 'number' && data.type != 'item') {\r\n                                    return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                        <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                        <Col sm={9}>\r\n                                            <Form.Control \r\n                                                required={field.required}\r\n                                                type={field.type} \r\n                                                placeholder={field.placeholder}\r\n                                                value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                                min={field.min}\r\n                                                onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                } else if(field.type === 'select') {\r\n                                    return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                        <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                        <Col sm={9}>\r\n                                            <Form.Control \r\n                                                size=\"sm\"\r\n                                                required={field.required}\r\n                                                as={field.type} \r\n                                                placeholder={field.placeholder}\r\n                                                value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                                onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }>\r\n\r\n                                                {field.options.map((option, i) => {\r\n                                                    return <option key={i} value={option.key}>{option.label}</option>\r\n                                                })}\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                }\r\n                            })}\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                            Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Table responsive striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Type</th>\r\n                            <th>Created</th>\r\n                            <th>Updated</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {showData()}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Pagination>                    \r\n                    {showPagination()}\r\n                </Pagination>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst UserReward = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const dataList = useSelector(state => state.Reward);\r\n\r\n    const handleRedeem = async (reward_id) => {\r\n        \r\n        const res = await axios.post('redeem', {'reward_id' : reward_id})\r\n\r\n        var result = res.data.data\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n\r\n                return <Col md={4} className=\"mb-3\">\r\n                    <Card key={key} style={{ height: '100%' }}>\r\n                        <Card.Body>\r\n                            <Card.Title>{el.name}</Card.Title>\r\n                            <Card.Text>{el.description}</Card.Text>\r\n                        </Card.Body>\r\n                        {el.type != 'points' ? <Button variant=\"success\" onClick={() => handleRedeem(el.id)}>Redeem</Button> : ''}\r\n                    </Card>\r\n                </Col>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const fetchData = (url = '/rewards') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchData()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"pt-3\">\r\n                {showData()}\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminReward(props)\r\n\r\n    } else {\r\n\r\n        return UserReward(props)\r\n\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nconst apiRoute = '/transactions'\r\n\r\nexport const GetData = (props, url = apiRoute, params = {}) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(url, {params: params})\r\n\r\n        dispatch({\r\n            type: \"FETCH_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"FAIL\",\r\n            payload: error.response.data.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const AddData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post(apiRoute, data)\r\n\r\n        dispatch({\r\n            type: \"ADD_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"REQUEST\"\r\n    })\r\n\r\n    await axios.put(apiRoute + '/' + data.id, data)\r\n    .then((res) => {\r\n\r\n        dispatch({\r\n            type: \"UPDATE_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n\r\n    })\r\n    .catch((error) => {\r\n        if(error.response) {\r\n            dispatch({\r\n                type: \"FAIL\",\r\n                payload: error.response.data.message\r\n            })\r\n        }\r\n    })\r\n    \r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REQUEST\"\r\n        })\r\n\r\n        const res = await axios.delete(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"DELETE_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}","import React, {useState, useRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, ButtonGroup, Col, Form, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport {AddData, DeleteData, EditData, GetData} from \"../actions/transactionAction\";\r\nimport AsyncSelect from 'react-select/async';\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport 'bootstrap-daterangepicker/daterangepicker.css';\r\nimport moment from \"moment\";\r\n\r\nconst AdminTransaction = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const transactionList = useSelector(state => state.Transaction);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [reward, setReward] = useState({});\r\n    const [filters, setFilters] = useState({\r\n        type: 'all'\r\n    });\r\n    const fields = [];\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [dialogShow, setDialogShow] = useState(false);\r\n    const [statusUpdateData, setStatusUpdateData] = useState({});\r\n  \r\n    const handleDialogClose = () => {\r\n        setDialogShow(false);\r\n        setStatusUpdateData({});\r\n    }\r\n    \r\n    const handleDialogConfirm = async () => {\r\n        await axios.put('transactions/' + statusUpdateData.id, statusUpdateData)\r\n        .then((res) => {\r\n    \r\n            dispatch({\r\n                type: \"UPDATE_SUCCESS\",\r\n                payload: res.data.data\r\n            })\r\n\r\n            handleDialogClose()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response) {\r\n                dispatch({\r\n                    type: \"FAIL\",\r\n                    payload: error.response.data.message\r\n                })\r\n            }\r\n        })\r\n    }\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (packageData) => {\r\n\r\n        setData({})\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = (url = '/transactions', params = filters) => {\r\n\r\n        dispatch(GetData(props, url, params));\r\n\r\n    }\r\n\r\n    const addPackage = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n\r\n            if(data.id) dispatch(EditData(props, data))\r\n            else dispatch(AddData(props, data))\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const fetchRewards = async () => {\r\n\r\n        const res = await axios.get('/rewards')\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n        \r\n        return options\r\n    }\r\n\r\n    const promiseRewardOptions = inputValue => new Promise(resolve => {\r\n\r\n        setTimeout(() => {\r\n            resolve(fetchRewards(inputValue));\r\n        }, 1000);\r\n\r\n    });\r\n\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(transactionList.data.links))\r\n        return transactionList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url, {})} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const handleTransactionStatusChange = (id, status) => {\r\n        setDialogShow(true);\r\n        setStatusUpdateData({\r\n            'id' : id,\r\n            'status' : status\r\n        })\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(transactionList.data.data)) {\r\n\r\n            return transactionList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.transaction_id}</td>\r\n                    <td>{el.type}</td>\r\n                    <td>{el.reference_no}</td>\r\n                    <td>{el.balance}</td>\r\n                    <td>{el.cost}</td>\r\n                    <td>{el.customer.name}</td>\r\n                    <td>{el.salesperson ? el.salesperson.name : ''}</td>\r\n                    <td>{el.created_at}</td>\r\n                    <td>{el.updated_at}</td>\r\n                    <td>\r\n                        <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                            <Form.Row>\r\n                                <Form.Control as=\"select\" size=\"sm\" custom value={el.status} onChange={(e) => handleTransactionStatusChange(el.id, e.target.value, el.status)}>\r\n                                    <option value=\"pending\">Pending</option>\r\n                                    <option value=\"cancelled\">Cancelled</option>\r\n                                    <option value=\"confirmed\">Confirmed</option>\r\n                                    <option value=\"completed\">Completed</option>\r\n                                </Form.Control>\r\n                            </Form.Row>\r\n                        </Form.Group>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(transactionList.loading) {\r\n\r\n            return <tr><td colSpan=\"10\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(transactionList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"10\" className=\"text-center\">{transactionList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"10\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const handleTypeChange = (val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, type : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    const handleFilterInputChange = (key, val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, [key] : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    const handleDateRangeChange = (start, end, label) => {\r\n        let tmpFilter = filters\r\n\r\n        start = start.format('YYYY-MM-DD');\r\n        end = end.format('YYYY-MM-DD');\r\n        tmpFilter = {...tmpFilter, 'start_date' : start, 'end_date' : end};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>Type</Form.Label>\r\n                            <Col lg={3}>\r\n                                <Form.Control as=\"select\" size=\"sm\" custom defaultValue={!_.isEmpty(filters) && !_.isEmpty(filters.type) ? filters.type : 'all'} onChange={(e) => handleTypeChange(e.target.value)}>\r\n                                <option value=\"all\">All</option>\r\n                                <option value=\"rewards\">Rewards</option>\r\n                                <option value=\"redeems\">Redeems</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Transaction ID\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. abcd1234\" onChange={(e) => handleFilterInputChange('transaction_id', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Reference No.\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. abcd1234\" onChange={(e) => handleFilterInputChange('reference_no', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Customer\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. John Doe\" onChange={(e) => handleFilterInputChange('customer', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Salesperson\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. Jane Doe\" onChange={(e) => handleFilterInputChange('salesperson', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Date\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                                <DateRangePicker\r\n                                initialSettings={{ startDate: moment(), endDate: moment() }}\r\n                                onCallback={handleDateRangeChange}\r\n                                >\r\n                                <input type=\"text\" className=\"form-control\" />\r\n                                </DateRangePicker>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Modal show={dialogShow} onHide={handleDialogClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Are you sure?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>You want to mark this as <b>{!_.isEmpty(statusUpdateData) ? statusUpdateData.status : '' }</b>?</p>\r\n                        {!_.isEmpty(statusUpdateData) && statusUpdateData.status == 'confirmed' ? <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Reference No.</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter reference no.\" onChange={ (e) => setStatusUpdateData(prev => ({...prev, 'reference_no' : e.target.value})) } />\r\n                        </Form.Group> : '' }\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleDialogClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={(e) => handleDialogConfirm()}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Table responsive striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Transaction ID</th>\r\n                            <th>Type</th>\r\n                            <th>Reference No.</th>\r\n                            <th>Running Balance</th>\r\n                            <th>Cost</th>\r\n                            <th>Customer</th>\r\n                            <th>Salesperson</th>\r\n                            <th>Created</th>\r\n                            <th>Updated</th>\r\n                            <th style={{width: \"10%\"}}>Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {showData()}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Pagination>                    \r\n                    {showPagination()}\r\n                </Pagination>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst CustomerTransaction = (props) => {\r\n    const dispatch = useDispatch();\r\n    const transactionList = useSelector(state => state.Transaction);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [reward, setReward] = useState({});\r\n    const [filters, setFilters] = useState({\r\n        type: 'all'\r\n    });\r\n    const [dialogShow, setDialogShow] = useState(false);\r\n    const [statusUpdateData, setStatusUpdateData] = useState({});\r\n  \r\n    const handleDialogClose = () => {\r\n        setDialogShow(false);\r\n        setStatusUpdateData({});\r\n    }\r\n    \r\n    const handleDialogConfirm = async () => {\r\n        await axios.put('transactions/' + statusUpdateData.id, statusUpdateData)\r\n        .then((res) => {\r\n    \r\n            dispatch({\r\n                type: \"UPDATE_SUCCESS\",\r\n                payload: res.data.data\r\n            })\r\n\r\n            handleDialogClose()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response) {\r\n                dispatch({\r\n                    type: \"FAIL\",\r\n                    payload: error.response.data.message\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = (url = '/transactions', params = filters) => {\r\n\r\n        dispatch(GetData(props, url, params));\r\n\r\n    }\r\n\r\n    const fetchRewards = async () => {\r\n\r\n        const res = await axios.get('/rewards')\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n        \r\n        return options\r\n    }\r\n\r\n    const promiseRewardOptions = inputValue => new Promise(resolve => {\r\n\r\n        setTimeout(() => {\r\n            resolve(fetchRewards(inputValue));\r\n        }, 1000);\r\n\r\n    });\r\n\r\n    const handleDelete = id => {\r\n    \r\n        dispatch(DeleteData(props, id))\r\n\r\n    }\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(transactionList.data.links))\r\n        return transactionList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url, {})} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const handleTransactionStatusChange = (id, status) => {\r\n        setDialogShow(true);\r\n        setStatusUpdateData({\r\n            'id' : id,\r\n            'status' : status\r\n        })\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(transactionList.data.data)) {\r\n\r\n            return transactionList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.transaction_id}</td>\r\n                    <td>{el.type}</td>\r\n                    <td>{el.reference_no}</td>\r\n                    <td>{el.balance}</td>\r\n                    <td>{el.cost}</td>\r\n                    <td>{el.customer.name}</td>\r\n                    <td>{el.salesperson ? el.salesperson.name : ''}</td>\r\n                    <td>{el.created_at}</td>\r\n                    <td>{el.updated_at}</td>\r\n                    <td>\r\n                        <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                            <Form.Row>\r\n                                <Form.Control as=\"select\" size=\"sm\" custom value={el.status} onChange={(e) => handleTransactionStatusChange(el.id, e.target.value, el.status)}>\r\n                                    <option value=\"pending\">Pending</option>\r\n                                    <option value=\"cancelled\">Cancelled</option>\r\n                                    <option value=\"confirmed\">Confirmed</option>\r\n                                    <option value=\"completed\">Completed</option>\r\n                                </Form.Control>\r\n                            </Form.Row>\r\n                        </Form.Group>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(transactionList.loading) {\r\n\r\n            return <tr><td colSpan=\"10\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(transactionList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"10\" className=\"text-center\">{transactionList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"10\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const handleTypeChange = (val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, type : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    const handleFilterInputChange = (key, val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, [key] : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    const handleDateRangeChange = (start, end, label) => {\r\n        let tmpFilter = filters\r\n\r\n        start = start.format('YYYY-MM-DD');\r\n        end = end.format('YYYY-MM-DD');\r\n        tmpFilter = {...tmpFilter, 'start_date' : start, 'end_date' : end};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>Type</Form.Label>\r\n                            <Col lg={3}>\r\n                                <Form.Control as=\"select\" size=\"sm\" custom defaultValue={!_.isEmpty(filters) && !_.isEmpty(filters.type) ? filters.type : 'all'} onChange={(e) => handleTypeChange(e.target.value)}>\r\n                                <option value=\"all\">All</option>\r\n                                <option value=\"rewards\">Rewards</option>\r\n                                <option value=\"redeems\">Redeems</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Transaction ID\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. abcd1234\" onChange={(e) => handleFilterInputChange('transaction_id', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Reference No.\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. abcd1234\" onChange={(e) => handleFilterInputChange('reference_no', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Salesperson\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. Jane Doe\" onChange={(e) => handleFilterInputChange('salesperson', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Date\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                                <DateRangePicker\r\n                                initialSettings={{ startDate: moment(), endDate: moment() }}\r\n                                onCallback={handleDateRangeChange}\r\n                                >\r\n                                <input type=\"text\" className=\"form-control\" />\r\n                                </DateRangePicker>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Modal show={dialogShow} onHide={handleDialogClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Are you sure?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>You want to mark this as <b>{!_.isEmpty(statusUpdateData) ? statusUpdateData.status : '' }</b>?</p>\r\n                        {!_.isEmpty(statusUpdateData) && statusUpdateData.status == 'confirmed' ? <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Reference No.</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter reference no.\" onChange={ (e) => setStatusUpdateData(prev => ({...prev, 'reference_no' : e.target.value})) } />\r\n                        </Form.Group> : '' }\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleDialogClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={(e) => handleDialogConfirm()}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Table responsive striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Transaction ID</th>\r\n                            <th>Type</th>\r\n                            <th>Reference No.</th>\r\n                            <th>Running Balance</th>\r\n                            <th>Cost</th>\r\n                            <th>Customer</th>\r\n                            <th>Salesperson</th>\r\n                            <th>Created</th>\r\n                            <th>Updated</th>\r\n                            <th style={{width: \"10%\"}}>Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {showData()}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Pagination>                    \r\n                    {showPagination()}\r\n                </Pagination>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminTransaction(props)\r\n\r\n    } else {\r\n\r\n        return CustomerTransaction(props)\r\n\r\n    }\r\n}","const prod = {\r\n    url: {\r\n        API_URL: 'https://fr-api.thedreamteamdigitalmarketing.com/v1',\r\n        API_URL_USERS: 'https://fr-api.thedreamteamdigitalmarketing.com',\r\n        BROADCAST_URL: 'localhost',\r\n        BROADCAST_KEY: 'FRPUSHERKEY'\r\n    }\r\n};\r\n\r\nconst dev = {\r\n    url: {\r\n        API_URL: 'http://localhost:8000/v1',\r\n        BASE_URL: 'http://localhost:8000',\r\n        BROADCAST_URL: 'localhost',\r\n        // BROADCAST_KEY: 'FRPUSHERKEY'\r\n        BROADCAST_KEY: 'ca3b395b209c42fd56c7'\r\n    }\r\n};\r\n\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;","import React, {useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport NotifyMe from 'react-notification-timeline';\r\nimport moment from 'moment';\r\n\r\nexport const SuperAdminHeader = (props) => {\r\n\r\n    const [notifications, setNotifications] = useState({\r\n        loading: false,\r\n        data: []\r\n    })\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    React.useEffect(() => {\r\n        fetchNotification()\r\n        initEcho()\r\n    }, [])\r\n\r\n    // Start Laravel Echo\r\n\r\n    const initEcho = () => {\r\n        window.Echo.private('App.Models.User.' + auth.user.id)\r\n        .notification((notification) => {\r\n            let newNotification = {\r\n                'data' : {\r\n                    'data': notification.data,\r\n                    'title': notification.title\r\n                },\r\n                'created_at': moment()\r\n            }\r\n\r\n            setNotifications(prev => ({...prev, data: [...prev.data, newNotification]}))\r\n        });\r\n    }\r\n\r\n    // End Laravel Echo\r\n\r\n    const fetchNotification = async () => {\r\n        const res = await axios.get('notifications');\r\n\r\n        let data = res.data.data;\r\n\r\n        setNotifications(prev => ({...prev, data: data, loading: false}));\r\n    }\r\n\r\n    const showNotifications = () => {\r\n\r\n        return notifications.data.map((el, key) => {\r\n            return {\r\n                message: el.data.title,\r\n                timestamp: parseInt(moment.parseZone(el.created_at).format('x'))\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <Navbar collapseOnSelect className=\"sticky-top\" expand=\"*\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand className=\"col-sm-3 col-md-2 mr-0 px-3\" href=\"#home\">\r\n            <img\r\n                alt=\"\"\r\n                src=\"/logo.svg\"\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n            />\r\n            Frontier Rewards\r\n            </Navbar.Brand>\r\n\r\n            <button className=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>            \r\n\r\n            <NotifyMe\r\n                data={showNotifications()}\r\n                storageKey='notific_key'\r\n                notific_key='timestamp'\r\n                notific_value='update'\r\n                heading='Notification Alerts'\r\n                sortedByKey={false}\r\n                showDate={true}\r\n                size={30}\r\n                color=\"yellow\"\r\n            />\r\n\r\n            <ul className=\"navbar-nav px-3\">\r\n                <li className=\"nav-item text-nowrap\">\r\n                    <Link className=\"nav-link\" onClick={ e => props.onLogout() }>Logout</Link>\r\n                </li>\r\n            </ul>\r\n        </Navbar>\r\n    );\r\n\r\n}\r\n\r\nexport const SuperAdminSidebar = (props) => {\r\n\r\n    return (\r\n        \r\n        <Navbar.Collapse id=\"sidebarMenu\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\r\n            <div className=\"sidebar-sticky pt-3\">\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-home\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>\r\n                            Dashboard <span className=\"sr-only\">(current)</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/actions\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-file\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\r\n                            Actions\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/packages\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-file\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\r\n                            Packages\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/rewards\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-file\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\r\n                            Rewards\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/campaigns\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-file\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\r\n                            Campaigns\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/users\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-users\"><path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"9\" cy=\"7\" r=\"4\"></circle><path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path><path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path></svg>\r\n                        Users\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/transactions\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-bar-chart-2\"><line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line><line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line></svg>\r\n                        Transactions\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/transactions\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-bar-chart-2\"><line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line><line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line></svg>\r\n                        Settings\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </Navbar.Collapse>\r\n\r\n    );\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport '../css/notifications.css'\r\nimport NotifyMe from 'react-notification-timeline';\r\nimport moment from 'moment';\r\n\r\nexport const AdminHeader = (props) => {\r\n\r\n    const [notifications, setNotifications] = useState({\r\n        loading: false,\r\n        data: []\r\n    })\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    React.useEffect(() => {\r\n        fetchNotification()\r\n        initEcho()\r\n    }, [])\r\n\r\n    // Start Laravel Echo\r\n\r\n    const initEcho = () => {\r\n        window.Echo.private('App.Models.User.' + auth.user.id)\r\n        .notification((notification) => {\r\n            let newNotification = {\r\n                'data' : {\r\n                    'data': notification.data,\r\n                    'title': notification.title\r\n                },\r\n                'created_at': moment()\r\n            }\r\n\r\n            setNotifications(prev => ({...prev, data: [...prev.data, newNotification]}))\r\n        });\r\n    }\r\n\r\n    // End Laravel Echo\r\n\r\n    const fetchNotification = async () => {\r\n        const res = await axios.get('notifications');\r\n\r\n        let data = res.data.data;\r\n\r\n        setNotifications(prev => ({...prev, data: data, loading: false}));\r\n    }\r\n\r\n    const showNotifications = () => {\r\n\r\n        return notifications.data.map((el, key) => {\r\n            return {\r\n                message: el.data.title,\r\n                timestamp: parseInt(moment.parseZone(el.created_at).format('x'))\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <Navbar collapseOnSelect className=\"sticky-top\" expand=\"*\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand className=\"col-sm-3 col-md-2 mr-0 px-3\" href=\"#home\">\r\n            <img\r\n                alt=\"\"\r\n                src=\"/logo.svg\"\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n            />\r\n            Frontier Rewards\r\n            </Navbar.Brand>\r\n\r\n            <button className=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <NotifyMe\r\n                data={showNotifications()}\r\n                storageKey='notific_key'\r\n                notific_key='timestamp'\r\n                notific_value='message'\r\n                heading='Notification Alerts'\r\n                sortedByKey={false}\r\n                showDate={false}\r\n                size={30}\r\n                color=\"yellow\"\r\n                getDayDiff={(e) => {\r\n                    return ''\r\n                }}\r\n            />\r\n\r\n            <ul className=\"navbar-nav px-3\">\r\n                <li className=\"nav-item text-nowrap\">\r\n                    <Link className=\"nav-link\" onClick={ e => props.onLogout() }>Logout</Link>\r\n                </li>\r\n            </ul>\r\n        </Navbar>\r\n    );\r\n\r\n}\r\n\r\nexport const AdminSidebar = (props) => {\r\n\r\n    return (\r\n        \r\n        <Navbar.Collapse id=\"sidebarMenu\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\r\n            <div className=\"sidebar-sticky pt-3\">\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-home\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>\r\n                            Dashboard <span className=\"sr-only\">(current)</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/actions\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-file\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\r\n                            Actions\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/packages\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-file\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\r\n                            Packages\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/rewards\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-file\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\r\n                            Rewards\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/campaigns\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-file\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\r\n                            Campaigns\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/users\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-users\"><path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"9\" cy=\"7\" r=\"4\"></circle><path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path><path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path></svg>\r\n                        Users\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/transactions\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-bar-chart-2\"><line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line><line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line></svg>\r\n                        Transactions\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/profile\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-bar-chart-2\"><line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line><line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line></svg>\r\n                        Profile\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/transactions\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-bar-chart-2\"><line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line><line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line></svg>\r\n                        Settings\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </Navbar.Collapse>\r\n\r\n    );\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport '../css/notifications.css'\r\nimport NotifyMe from 'react-notification-timeline';\r\nimport moment from 'moment';\r\n\r\nexport const CustomerHeader = (props) => {\r\n\r\n    const [notifications, setNotifications] = useState({\r\n        loading: false,\r\n        data: []\r\n    })\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    React.useEffect(() => {\r\n        fetchNotification()\r\n        initEcho()\r\n    }, [])\r\n\r\n    // Start Laravel Echo\r\n\r\n    const initEcho = () => {\r\n        window.Echo.private('App.Models.User.' + auth.user.id)\r\n        .notification((notification) => {\r\n            let newNotification = {\r\n                'data' : {\r\n                    'data': notification.data,\r\n                    'title': notification.title\r\n                },\r\n                'created_at': moment()\r\n            }\r\n\r\n            setNotifications(prev => ({...prev, data: [...prev.data, newNotification]}))\r\n        });\r\n    }\r\n\r\n    // End Laravel Echo\r\n\r\n    const fetchNotification = async () => {\r\n        const res = await axios.get('notifications');\r\n\r\n        let data = res.data.data;\r\n\r\n        setNotifications(prev => ({...prev, data: data, loading: false}));\r\n    }\r\n\r\n    const showNotifications = () => {\r\n\r\n        return notifications.data.map((el, key) => {\r\n            return {\r\n                message: el.data.title,\r\n                timestamp: parseInt(moment.parseZone(el.created_at).format('x'))\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <Navbar collapseOnSelect className=\"sticky-top\" expand=\"*\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand className=\"col-sm-3 col-md-2 mr-0 px-3\" href=\"#home\">\r\n            <img\r\n                alt=\"\"\r\n                src=\"/logo.svg\"\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n            />\r\n            Frontier Rewards\r\n            </Navbar.Brand>\r\n\r\n            <button className=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <NotifyMe\r\n                data={showNotifications()}\r\n                storageKey='notific_key'\r\n                notific_key='timestamp'\r\n                notific_value='message'\r\n                heading='Notification Alerts'\r\n                sortedByKey={false}\r\n                showDate={false}\r\n                size={30}\r\n                color=\"yellow\"\r\n                getDayDiff={(e) => {\r\n                    return ''\r\n                }}\r\n            />\r\n\r\n            <ul className=\"navbar-nav px-3\">\r\n                <li className=\"nav-item text-nowrap\">\r\n                    <Link className=\"nav-link\" onClick={ e => props.onLogout() }>Logout</Link>\r\n                </li>\r\n            </ul>\r\n        </Navbar>\r\n    );\r\n\r\n}\r\n\r\nexport const CustomerSidebar = (props) => {\r\n\r\n    return (\r\n        \r\n        <Navbar.Collapse id=\"sidebarMenu\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\r\n            <div className=\"sidebar-sticky pt-3\">\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-home\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>\r\n                            Dashboard <span className=\"sr-only\">(current)</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/rewards\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-file\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\r\n                            Rewards\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/campaigns\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-file\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\r\n                            Campaigns\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/transactions\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-bar-chart-2\"><line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line><line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line></svg>\r\n                        Transactions\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/profile\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-file\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\r\n                            Profile\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </Navbar.Collapse>\r\n\r\n    );\r\n\r\n}\r\n","import React from \"react\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport { Logout } from \"../actions/userAction\";\r\nimport { config } from '../utils/Constants';\r\nimport Pusher from \"pusher-js\"\r\nimport Echo from 'laravel-echo';\r\nimport {SuperAdminHeader, SuperAdminSidebar} from \"../components/SuperAdminLayout\"\r\nimport {AdminHeader, AdminSidebar} from \"../components/AdminLayout\"\r\nimport {CustomerHeader, CustomerSidebar} from \"../components/CustomerLayout\"\r\nimport '../css/style.css'\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(!_.isEmpty(auth.user)){\r\n        axios.defaults.headers['Authorization'] = \"Bearer \" + auth.user.token;\r\n\r\n        // axios.defaults.headers['X-Socket-Id'] = \"Bearer \" + auth.user.token;\r\n\r\n        const initEchoB = () => { // own websockets\r\n\r\n            window.Echo = new Echo({\r\n                broadcaster: 'pusher',\r\n                key: 'FRPUSHERKEY',\r\n                wsHost: config.url.BROADCAST_URL,\r\n                wsPort: 6001,\r\n                disableStats: true,\r\n                forceTLS: false,\r\n                authorizer: (channel, options) => {\r\n                    return {\r\n                        authorize: (socketId, callback) => {\r\n    \r\n                            axios.post('/broadcasting/auth', {\r\n                                socket_id: socketId,\r\n                                channel_name: channel.name\r\n                            })\r\n                            .then(response => {\r\n                                axios.defaults.headers['X-Socket-ID'] = socketId\r\n                                callback(false, response.data);\r\n                            })\r\n                            .catch(error => {\r\n                                callback(true, error);\r\n                            });\r\n                        }\r\n                    };\r\n                },\r\n            });\r\n            \r\n            window.Echo.private(`notification`)\r\n            .listen('UserRegistered', (e) => {\r\n                console.log('channel', e);\r\n            });\r\n        }\r\n\r\n        const initEcho = () => {\r\n\r\n            window.Echo = new Echo({\r\n                broadcaster: 'pusher',\r\n                key: '658ad8bb2f982c7fa645',\r\n                cluster: 'ap1',\r\n                wsHost: config.url.BROADCAST_URL,\r\n                wsPort: 6001,\r\n                forceTLS: true,\r\n                authorizer: (channel, options) => {\r\n                    return {\r\n                        authorize: (socketId, callback) => {\r\n    \r\n                            axios.post('/broadcasting/auth', {\r\n                                socket_id: socketId,\r\n                                channel_name: channel.name\r\n                            })\r\n                            .then(response => {\r\n                                axios.defaults.headers['X-Socket-ID'] = socketId\r\n                                callback(false, response.data);\r\n                            })\r\n                            .catch(error => {\r\n                                callback(true, error);\r\n                            });\r\n                        }\r\n                    };\r\n                },\r\n                // wsHost: config.url.BROADCAST_URL,\r\n                // wsPort: 6001,\r\n                //authEndpoint is your apiUrl + /broadcasting/auth\r\n                // authEndpoint: config.url.API_URL + '/broadcasting/auth', \r\n                // As I'm using JWT tokens, I need to manually set up the headers.\r\n                auth: {\r\n                  headers: {\r\n                    Authorization: `Bearer ${auth.user.token}`,\r\n                    Accept: 'application/json',\r\n                  },\r\n                },\r\n            });\r\n            \r\n            window.Echo.private(`notification`)\r\n            .listen('UserRegistered', (e) => {\r\n                console.log('channel', e);\r\n            });\r\n        }\r\n\r\n        initEcho();\r\n    }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render = { props => {\r\n\r\n                if(!_.isEmpty(auth.user)) {\r\n\r\n                    const onLogout = (e) => {\r\n                        \r\n                        dispatch(Logout(props));\r\n                \r\n                        props.history.push(\"/login\");\r\n                    }\r\n\r\n                    if(_.indexOf(rest.allowed, auth.user.type) == -1) {\r\n    \r\n                        return (\r\n    \r\n                            <>Not Allowed</>\r\n                            \r\n                        )\r\n    \r\n                    }\r\n\r\n                    if(auth.user.type == 1) {\r\n\r\n                        return (\r\n    \r\n                            <>\r\n                                <SuperAdminHeader onLogout={onLogout}/>\r\n                                <Container fluid>\r\n                                    <div className=\"row\">\r\n                                        <SuperAdminSidebar/>\r\n                                        <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\r\n                                            <Component { ...props }/>\r\n                                        </main>\r\n                                    </div>\r\n                                </Container>\r\n                            </>\r\n                            \r\n                        )\r\n\r\n                    } else if(auth.user.type == 2) {\r\n\r\n                        return (\r\n    \r\n                            <>\r\n                                <AdminHeader onLogout={onLogout}/>\r\n                                <Container fluid>\r\n                                    <div className=\"row\">\r\n                                        <AdminSidebar/>\r\n                                        <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\r\n                                            <Component { ...props }/>\r\n                                        </main>\r\n                                    </div>\r\n                                </Container>\r\n                            </>\r\n                            \r\n                        )\r\n\r\n                    } else {\r\n\r\n                        return (\r\n                            <>\r\n                                <CustomerHeader onLogout={onLogout}/>\r\n                                <Container fluid>\r\n                                    <div className=\"row\">\r\n                                        <CustomerSidebar userid={auth.user.id}/>\r\n                                        <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\r\n                                            <Component { ...props }/>\r\n                                        </main>\r\n                                    </div>\r\n                                </Container>\r\n                            </>\r\n                        )\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: \"/login\",\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }\r\n                    } />\r\n\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nexport const ProtectedLogin = ({ component: Component, ...rest }) => {\r\n    \r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render = { props => {\r\n                if(_.isEmpty(auth.user)) {\r\n\r\n                    return <Component { ...props }/>\r\n\r\n                } else {\r\n\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: \"/\",\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }\r\n                    } />\r\n\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};","import {NavLink, Redirect, Route, Switch} from \"react-router-dom\";\nimport Dashboard from './containers/Dashboard';\nimport Login from './containers/Login';\nimport ProductList from './containers/ProductList';\nimport Product from './containers/Product';\nimport User from './containers/User';\nimport UserProfile from './containers/UserProfile';\nimport MyProfile from './containers/MyProfile';\nimport Package from './containers/Package';\nimport Action from './containers/Action';\nimport Campaign from './containers/Campaign';\nimport CampaignDetail from './containers/CampaignDetail';\nimport Reward from './containers/Reward';\nimport Transaction from './containers/Transaction';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \nimport $ from 'jquery';\nimport { ProtectedRoute } from \"./router/ProtectedRoute\";\nimport { ProtectedLogin } from \"./router/ProtectedLogin\";\n// import 'bootstrap/dist/js/bootstrap.bundle';\n \nfunction App() {\n    return (\n        <Switch>\n            <ProtectedLogin path={\"/login\"} exact component={Login}/>\n            {/* <ProtectedRoute path={\"/products\"} exact component={ProductList}/> */}\n            {/* <ProtectedRoute path={\"/product/:product\"} exact component={Product}/> */}\n            <ProtectedRoute path={\"/users\"} exact component={User} allowed={[1,2]}/>\n            <ProtectedRoute path={\"/user/:user\"} exact component={UserProfile} allowed={[1,2]}/>\n            <ProtectedRoute path={\"/profile\"} exact component={MyProfile} allowed={[2,3]}/>\n            <ProtectedRoute path={\"/packages\"} exact component={Package} allowed={[1,2]}/>\n            <ProtectedRoute path={\"/actions\"} exact component={Action} allowed={[1,2]}/>\n            <ProtectedRoute path={\"/rewards\"} exact component={Reward} allowed={[1,2,3]}/>\n            <ProtectedRoute path={\"/transactions\"} exact component={Transaction} allowed={[1,2,3]}/>\n            <ProtectedRoute path={\"/campaigns\"} exact component={Campaign} allowed={[1,2,3]}/>\n            <ProtectedRoute path={\"/campaign/:campaign\"} exact component={CampaignDetail}/>\n            <ProtectedRoute path={\"/\"} exact component={Dashboard} allowed={[1,2,3]}/>\n\n            {/* <Redirect to={\"/\"}/> */}\n            <Route path=\"*\" component={ () => \"404 NOT FOUND\" }/>\n        </Switch>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const DefaultState = {\r\n    loading: false,\r\n    data: [],\r\n    count: 0,\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst ProductListReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case \"PRODUCT_LIST_LOADING\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"PRODUCT_LIST_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                // count: action.payload.count,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"PRODUCT_LIST_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: \"Unable to get products\"\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ProductListReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst ActionReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ACTION_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"ACTION_FETCH\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"ACTION_ADD\":\r\n\r\n            var stateData = state.data\r\n            var newData = [...state.data.data, action.payload]\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"ACTION_UPDATE\":\r\n\r\n            var stateData = state.data\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            var newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"ACTION_DELETE\":\r\n\r\n            var newData = state.data;\r\n            var newPackages = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            newData.data = newPackages;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: newData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"ACTION_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default ActionReducer;","const DefaultState = {\r\n    loading: false,\r\n    user: localStorage.getItem('user') != 'undefined' ? JSON.parse(localStorage.getItem('user')) : {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst LoginReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"LOGIN_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"LOGIN_SUCCESS\":\r\n\r\n            localStorage.setItem('user', JSON.stringify(action.payload));\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"LOGIN_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n            \r\n        case \"LOGOUT_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"LOGOUT_SUCCESS\":\r\n\r\n            localStorage.removeItem('user');\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: {},\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"LOGOUT_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default LoginReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst CampaignReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"CAMPAIGN_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"CAMPAIGN_FETCH\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"CAMPAIGN_ADD\":\r\n\r\n            var newData = [...state.data.data, action.payload]\r\n\r\n            var stateData = state.data\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"CAMPAIGN_UPDATE\":\r\n\r\n            var stateData = state.data\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            var newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"CAMPAIGN_DELETE\":\r\n\r\n            var stateData = state.data\r\n            var newData = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"CAMPAIGN_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default CampaignReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst PackageReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"PACKAGE_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"PACKAGE_SUCCESS\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"PACKAGE_ADDED\":\r\n\r\n            var newData = state.data;\r\n            var newPackages = [...state.data.data, action.payload]\r\n\r\n            newData.data = newPackages;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: newData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"PACKAGE_UPDATED\":\r\n\r\n            var newData = state.data;\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            var newPackages = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            newData.data[index] = newPackages;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: newData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"PACKAGE_DELETED\":\r\n\r\n            var newData = state.data;\r\n            var newPackages = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            newData.data = newPackages;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: newData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"PACKAGE_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default PackageReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst RewardReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"REWARD_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"REWARD_FETCH\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"REWARD_ADD\":\r\n\r\n            var stateData = state.data\r\n            var newData = [...state.data.data, action.payload]\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"REWARD_UPDATE\":\r\n\r\n            var stateData = state.data\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            var newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"REWARD_DELETE\":\r\n\r\n            var stateData = state.data\r\n            var newData = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"REWARD_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default RewardReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst TransactionReducer = (state = DefaultState, action) => {\r\n\r\n    var stateData = state.data, newData\r\n\r\n    switch (action.type) {\r\n        case \"REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"FETCH_SUCCESS\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"ADD_SUCCESS\":\r\n\r\n            newData = [...state.data.data]\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"UPDATE_SUCCESS\":\r\n\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            console.log('update success 2');\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"DELETE_SUCCESS\":\r\n\r\n            newData = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default TransactionReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst UserReducer = (state = DefaultState, action) => {\r\n\r\n    var stateData = state.data, newData\r\n\r\n    switch (action.type) {\r\n        case \"USER_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"USER_FETCH\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"USER_ADD\":\r\n\r\n            newData = [action.payload, ...state.data.data]\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"USER_UPDATE\":\r\n\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"USER_DELETE\":\r\n\r\n            newData = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"USER_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default UserReducer;","import {combineReducers} from \"redux\";\r\nimport ProductListReducer from \"./ProductListReducer\";\r\nimport ActionReducer from \"./ActionReducer\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport CampaignReducer from \"./CampaignReducer\";\r\nimport PackageReducer from \"./PackageReducer\";\r\nimport RewardReducer from \"./RewardReducer\";\r\nimport TransactionReducer from \"./TransactionReducer\";\r\nimport UserReducer from \"./UserReducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n    Action: ActionReducer,\r\n    Auth: AuthReducer,\r\n    Campaign: CampaignReducer,\r\n    Package: PackageReducer,\r\n    ProductList: ProductListReducer,\r\n    Reward: RewardReducer,\r\n    Transaction: TransactionReducer,\r\n    User: UserReducer\r\n});\r\n\r\nexport default RootReducer;","import {createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport RootReducer from \"./reducers/RootReducer\";\r\n\r\nconst myLogger = (store) => next => action => {\r\n\r\n    // console.log(\"middleware run\", store.getState());\r\n    return next(action);\r\n\r\n}\r\n\r\nconst Store = createStore(RootReducer, composeWithDevTools(applyMiddleware(myLogger, thunk)));\r\n\r\nexport default Store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './App.css';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport Store from \"./Store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport { config } from '../src/utils/Constants';\nimport axios from \"axios\";\n\naxios.defaults.baseURL = config.url.API_URL\naxios.defaults.headers = {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={Store}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}