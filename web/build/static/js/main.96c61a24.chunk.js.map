{"version":3,"sources":["utils/Constants.js","containers/Dashboard.js","actions/userAction.js","images/logo.png","containers/Login.js","containers/User.js","containers/UserProfile.js","containers/MyProfile.js","containers/Setting.js","actions/packageAction.js","containers/Package.js","actions/actionAction.js","containers/Action.js","actions/campaignAction.js","containers/Campaign.js","containers/CampaignDetail.js","actions/rewardAction.js","containers/Reward.js","actions/transactionAction.js","containers/Transaction.js","components/NotificationMenu.js","components/SuperAdminLayout.js","components/AdminLayout.js","components/CustomerLayout.js","router/ProtectedRoute.js","router/ProtectedLogin.js","App.js","reportWebVitals.js","reducers/ProductListReducer.js","reducers/ActionReducer.js","reducers/AuthReducer.js","reducers/CampaignReducer.js","reducers/PackageReducer.js","reducers/RewardReducer.js","reducers/TransactionReducer.js","reducers/UserReducer.js","reducers/RootReducer.js","Store.js","index.js"],"names":["config","url","API_URL","API_URL_USERS","BASE_URL","BROADCAST_URL","BROADCAST_KEY","TIMEZONE","Dashboard","props","useSelector","state","Auth","useState","campaigns","setCampaigns","actions","setActions","customers","setCustomers","packages","setPackages","options","title","text","noData","labels","colors","series","transactions","setTransactions","React","useEffect","fetchTransactions","fetchActiveCampaigns","fetchActiveActions","fetchCustomers","fetchPackages","event","a","axios","get","res","data","cancelled","pending","confirmed","completed","prev","total","Row","className","Col","md","Carousel","indicators","Item","src","alt","Card","Body","Text","type","dispatch","post","payload","history","push","response","apiRoute","GetData","params","Login","useDispatch","auth","username","setUsername","password","setPassword","validated","setValidated","onLogin","preventDefault","stopPropagation","form","currentTarget","checkValidity","email","Form","noValidate","onSubmit","Image","logo","height","Control","placeholder","onChange","e","target","value","isInvalid","errorMsg","required","Feedback","Button","variant","User","userList","setData","filters","setFilters","show","setShow","fields","create","baseURL","headers","customerFields","handleClose","fetchUsers","$params","timezoneConvert","time","userTz","moment","tz","guess","handleEditShow","val","customer_id","info","package_id","package","id","name","handleDelete","delete","DeleteData","search","results","length","result","label","promisePackagesOptions","inputValue","Promise","resolve","setTimeout","handleFilterInputChange","key","tmpFilter","onClick","user_type_id","Modal","onHide","put","reject","EditData","then","toast","success","position","POSITION","BOTTOM_RIGHT","catch","error","message","Register","Header","closeButton","Title","_","isUndefined","map","field","i","Group","as","controlId","control_id","Label","column","sm","defaultValue","hidden","size","option","defaultOptions","loadOptions","userForm","Footer","lg","custom","isEmpty","handleTypeChange","Table","responsive","hover","loading","colSpan","el","to","type_name","phone_number","created_at","format","updated_at","ButtonGroup","Pagination","links","page","active","disabled","dangerouslySetInnerHTML","__html","showPagination","user","asyncSel","useRef","userid","match","setUser","rewards","setRewards","fetchData","fetchUserRewards","$url","fetchActions","campaign_id","action","fetchRewards","action_id","reward","fetchCampaigns","handleRewardSubmit","balance","current","select","clearValue","Figure","Caption","qrCode","Subtitle","address","points","firstname","middlename","lastname","isNull","vehicle_year","vehicle_make","vehicle_model","vehicle_trim","vehicle_color","vehicle_vin_no","ref","isMulti","ListGroup","dataList","reward_name","showRewards","showRewardsPagination","AdminProfile","handleClaim","reward_id","status","stateData","newData","filter","item","Badge","CustomerProfile","Setting","fetchProfile","console","log","handleSettingSubmit","new_password","new_password_confirmation","GetPackages","Package","packageList","product","process","DeletePackage","packageData","EditPackage","AddPackage","min","cacheOptions","description","multiplier","AdminAction","actionList","Action","AddData","AdminCampaign","Campaign","campaignList","setCampaignList","setReward","showAddCampaign","setShowAddCampaign","showAddReward","setShowAddReward","handleCloseAddCampaign","handleRewardsShow","addReward","newCampaign","tmp","fetchCampaignData","Date","striped","bordered","is_expired","start_date","end_date","minDate","dateFormat","selected","date","UserCampaign","CampaignDetail","campaignid","campaign","setCampaign","AdminReward","Reward","handleRedeem","style","cost","UserReward","AdminTransaction","transactionList","Transaction","dialogShow","setDialogShow","statusUpdateData","setStatusUpdateData","handleDialogClose","handleDialogConfirm","initialSettings","startDate","endDate","onCallback","start","end","width","transaction_id","reference_no","customer","salesperson","CustomerTransaction","NotificationMenu","showCount","setShowCount","messageCount","setMessageCount","setTarget","notifications","setNotifications","fetchNotification","initEcho","window","Echo","private","notification","newNotification","read_at","getDayDiff","timestamp","b","diff","getContent","indexOf","splitted","split","ret","markAsRead","data-count","handleClick","color","Overlay","placement","container","containerPadding","rootClose","Popover","Content","padding","Boolean","index","parseInt","parseZone","SuperAdminHeader","Navbar","collapseOnSelect","expand","bg","Brand","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onLogout","SuperAdminSidebar","Collapse","AdminHeader","AdminSidebar","CustomerHeader","CustomerSidebar","setDefault","ProtectedRoute","Component","component","rest","defaults","token","broadcaster","cluster","wsHost","wsPort","forceTLS","authorizer","channel","authorize","socketId","callback","socket_id","channel_name","Authorization","Accept","listen","render","pathname","from","location","disconnect","allowed","Container","fluid","role","ProtectedLogin","App","path","exact","UserProfile","MyProfile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","DefaultState","count","ProductListReducer","ActionReducer","findIndex","newPackages","localStorage","getItem","JSON","parse","LoginReducer","setItem","stringify","removeItem","CampaignReducer","PackageReducer","RewardReducer","TransactionReducer","UserReducer","RootReducer","combineReducers","AuthReducer","ProductList","Store","createStore","composeWithDevTools","applyMiddleware","store","next","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96c61a24.chunk.js","sourcesContent":["const prod = {\r\n    url: {\r\n        API_URL: 'https://fr-api.thedreamteamdigitalmarketing.com/v1',\r\n        API_URL_USERS: 'https://fr-api.thedreamteamdigitalmarketing.com',\r\n        BASE_URL: 'https://fr-api.thedreamteamdigitalmarketing.com',\r\n        BROADCAST_URL: 'localhost',\r\n        BROADCAST_KEY: 'FRPUSHERKEY',\r\n        TIMEZONE: \"Asia/Manila\"\r\n    }\r\n};\r\n\r\nconst dev = {\r\n    url: {\r\n        API_URL: 'http://localhost:8000/v1',\r\n        BASE_URL: 'http://localhost:8000',\r\n        BROADCAST_URL: 'localhost',\r\n        // BROADCAST_KEY: 'FRPUSHERKEY'\r\n        BROADCAST_KEY: 'ca3b395b209c42fd56c7',\r\n        TIMEZONE: \"Asia/Manila\"\r\n    }\r\n};\r\n\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;","import React, {useState} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Card, Carousel, Col, Row } from 'react-bootstrap';\r\nimport Chart from \"react-apexcharts\";\r\nimport axios from 'axios';\r\nimport { config } from '../utils/Constants';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n    const [campaigns, setCampaigns] = useState(0);\r\n    const [actions, setActions] = useState(0);\r\n    const [customers, setCustomers] = useState(0);\r\n    const [packages, setPackages] = useState(0);\r\n    const [transactions, setTransactions] = useState({\r\n        options: {\r\n            title: {\r\n                text: 'Transactions'\r\n            },\r\n            noData: {\r\n                text: 'No data'\r\n            },\r\n            labels: ['Cancelled', 'Pending', 'Confirmed', 'Completed'],\r\n            colors: ['#d8334a', '#ffd11f', '#f9a72b', '#ffeea3']\r\n        },\r\n        series: []\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetchTransactions()\r\n        fetchActiveCampaigns()\r\n        fetchActiveActions()\r\n        fetchCustomers()\r\n        fetchPackages()\r\n    }, [])\r\n\r\n    const fetchTransactions = async event => {\r\n\r\n        const res = await axios.get('/summary/transactions')\r\n        let data = res.data.data\r\n\r\n        if(data.cancelled != 0 || data.pending != 0 || data.confirmed != 0 || data.completed)\r\n        setTransactions(prev => ({...prev, 'series' : [data.cancelled, data.pending, data.confirmed, data.completed]}))\r\n\r\n    }\r\n\r\n    const fetchActiveCampaigns = async event => {\r\n\r\n        const res = await axios.get('/summary/active_campaigns')\r\n        let data = res.data.data\r\n\r\n        setCampaigns(data.total)\r\n\r\n    }\r\n\r\n    const fetchActiveActions = async event => {\r\n\r\n        const res = await axios.get('/summary/active_actions')\r\n        let data = res.data.data\r\n\r\n        setActions(data.total)\r\n\r\n    }\r\n\r\n    const fetchCustomers = async event => {\r\n\r\n        const res = await axios.get('/summary/total_customers')\r\n        let data = res.data.data\r\n\r\n        setCustomers(data.total)\r\n\r\n    }\r\n\r\n    const fetchPackages = async event => {\r\n\r\n        const res = await axios.get('/summary/total_packages')\r\n        let data = res.data.data\r\n\r\n        setPackages(data.total)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"dashboard-page\">\r\n                <Col md={12} className=\"mb-3\">\r\n                    <Carousel indicators={false}>\r\n                        <Carousel.Item>\r\n                            <img\r\n                            className=\"d-block w-100\"\r\n                            src={config.url.BASE_URL+\"/images/slider-1.png\"}\r\n                            alt=\"First slide\"\r\n                            />\r\n                        </Carousel.Item>\r\n                        <Carousel.Item>\r\n                            <img\r\n                            className=\"d-block w-100\"\r\n                            src={config.url.BASE_URL+\"/images/slider-2.png\"}\r\n                            alt=\"Second slide\"\r\n                            />\r\n                        </Carousel.Item>\r\n                    </Carousel>\r\n                </Col>\r\n                <Col className=\"d-flex mt-n5\">\r\n                    <Col md={6} className=\"mb-3\">\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Text>\r\n                                    <Chart options={transactions.options} series={transactions.series} type=\"pie\"/>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6} className=\"mb-3\">\r\n                        <Row>\r\n                            <Col md={6} className=\"mb-3\">\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                            <h6>Active Campaigns</h6>\r\n                                            <h3>{campaigns}</h3>\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col md={6} className=\"mb-3\">\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                            <h6>Active Actions</h6>\r\n                                            <h3>{actions}</h3>\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col md={6} className=\"mb-3\">\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                            <h6>Users</h6>\r\n                                            <h3>{customers}</h3>\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col md={6} className=\"mb-3\">\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Card.Text>\r\n                                            <h6>Packages</h6>\r\n                                            <h3>{packages}</h3>\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Dashboard;","import axios from \"axios\";\r\n\r\nexport const Auth = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"LOGIN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post('/login', data)\r\n\r\n        dispatch({\r\n            type: \"LOGIN_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        props.history.push(\"/\");\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"LOGIN_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const Register = (props, data) => async dispatch => {\r\n    dispatch({\r\n        type: \"USER_REQUEST\"\r\n    })\r\n\r\n    await axios.post('/register', data)\r\n    .then((res) => {\r\n\r\n        dispatch({\r\n            type: \"USER_ADD\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n\r\n    })\r\n    .catch((error) => {\r\n        if(error.response) {\r\n            dispatch({\r\n                type: \"USER_FAIL\",\r\n                payload: error.response.data\r\n            })\r\n        }\r\n\r\n        return Promise.reject(error);\r\n    })\r\n}\r\n\r\nexport const Logout = (props) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"USER_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post('/logout')\r\n\r\n        window.Echo.disconnect();\r\n\r\n        dispatch({\r\n            type: \"LOGOUT_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"USER_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nconst apiRoute = '/users'\r\n\r\nexport const GetData = (props, url = apiRoute, params = {}) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"USER_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(url, {params: params})\r\n\r\n        dispatch({\r\n            type: \"USER_FETCH\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"USER_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"USER_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.put(apiRoute + '/' + data.id, data)\r\n\r\n        dispatch({\r\n            type: \"USER_UPDATE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve()\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"USER_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n\r\n        return Promise.reject(error)\r\n        \r\n    }\r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"USER_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.delete(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"USER_DELETE\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"USER_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/logo.60af3259.png\";","import React, { useState } from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, Form, Image } from 'react-bootstrap';\r\nimport { Auth } from \"../actions/userAction\";\r\nimport '../css/signin.css'\r\nimport logo from '../images/logo.png'\r\n\r\nconst Login = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const onLogin = async (event) => {\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const form = event.currentTarget;\r\n    \r\n        setValidated(true);\r\n\r\n        if (form.checkValidity() === false) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        const data = {\r\n            email: username,\r\n            password: password\r\n        }\r\n\r\n        dispatch(Auth(props, data));\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container text-center\">\r\n            <Form className=\"form-signin\" noValidate validated={validated} onSubmit={onLogin}>\r\n                <Image className=\"mb-4\" src={logo} height=\"180\"/>\r\n\r\n                <div className=\"form-fields\">\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"EMAIL\" \r\n                        onChange={ e => setUsername(e.target.value) }\r\n                        isInvalid={auth.errorMsg}\r\n                        required\r\n                    />\r\n            \r\n                    <Form.Control \r\n                        type=\"password\" \r\n                        placeholder=\"PASSWORD\" \r\n                        onChange={ e => setPassword(e.target.value) }\r\n                        isInvalid={auth.errorMsg}\r\n                        required\r\n                    />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {auth.errorMsg && (\r\n                            <div>{auth.errorMsg}</div>\r\n                        )}\r\n                    </Form.Control.Feedback>\r\n\r\n                    <Button \r\n                        variant=\"dark\" \r\n                        type=\"submit\"\r\n                    >\r\n                        LOG IN\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, ButtonGroup, Col, Form, Row, Modal, Pagination, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport AsyncSelect from 'react-select/async';\r\nimport { Register, GetData, EditData, DeleteData } from \"../actions/userAction\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport moment from 'moment-timezone';\r\nimport {config} from '../utils/Constants'\r\n\r\nconst User = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userList = useSelector(state => state.User);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [filters, setFilters] = useState({});\r\n    const [show, setShow] = useState(false);  \r\n    const dmsAxios = axios.create({\r\n        baseURL: 'https://stage.apigw.cdkapps.eu',\r\n        headers: {\"Access-Control-Allow-Origin\": \"http://localhost:3000\"}\r\n    });\r\n    const fields = [\r\n        {\r\n            'key': 'user_type_id',\r\n            'title': 'Type',\r\n            'type': 'select',\r\n            'placeholder': 'Enter action type',\r\n            'options': [\r\n                {\r\n                    'label': 'Customer',\r\n                    'key': '3'\r\n                }, \r\n                {\r\n                    'label': 'Admin',\r\n                    'key': '2'\r\n                }\r\n            ],\r\n            'default': 2,\r\n            'control_id': 'formActionType',\r\n            'errorMsg': 'Please select type.',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'firstname',\r\n            'title': 'First name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter first name',\r\n            'control_id': 'formFirstName',\r\n            'errorMsg': 'Please provide first name.',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'middlename',\r\n            'title': 'Middle name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter middle name',\r\n            'control_id': 'formMiddleName'\r\n        },\r\n        {\r\n            'key': 'lastname',\r\n            'title': 'Last name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter last name',\r\n            'control_id': 'formLastName',\r\n            'errorMsg': 'Please provide last name.',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'email',\r\n            'title': 'Email',\r\n            'type': 'email',\r\n            'placeholder': 'Enter email',\r\n            'control_id': 'formEmail',\r\n            'errorMsg': 'Please provide email address.',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'phone_number',\r\n            'title': 'Phone number',\r\n            'type': 'text',\r\n            'placeholder': 'Enter phone number',\r\n            'control_id': 'formPhone',\r\n            'errorMsg': 'Please provide phone number.',\r\n            'required': true\r\n        }\r\n    ];\r\n    const customerFields = [\r\n        {\r\n            'key': 'user_type_id',\r\n            'title': 'Type',\r\n            'type': 'select',\r\n            'placeholder': 'Enter action type',\r\n            'options': [\r\n                {\r\n                    'label': 'Customer',\r\n                    'key': '3'\r\n                }, \r\n                {\r\n                    'label': 'Admin',\r\n                    'key': '2'\r\n                }\r\n            ],\r\n            'default': 2,\r\n            'control_id': 'formActionType',\r\n            'errorMsg': 'Please select type.',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'customer_id',\r\n            'title': 'Customer ID',\r\n            'type': 'text',\r\n            'placeholder': 'Enter customer ID',\r\n            'control_id': 'formCustomerId',\r\n            'errorMsg': 'Please provide customer ID.',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'firstname',\r\n            'title': 'First name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter first name',\r\n            'control_id': 'formFirstName',\r\n            'errorMsg': 'Please provide first name.',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'middlename',\r\n            'title': 'Middle name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter middle name',\r\n            'control_id': 'formMiddleName'\r\n        },\r\n        {\r\n            'key': 'lastname',\r\n            'title': 'Last name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter last name',\r\n            'control_id': 'formLastName',\r\n            'errorMsg': 'Please provide last name.',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'email',\r\n            'title': 'Email',\r\n            'type': 'email',\r\n            'placeholder': 'Enter email',\r\n            'control_id': 'formEmail',\r\n            'errorMsg': 'Please provide email address.',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'phone_number',\r\n            'title': 'Phone number',\r\n            'type': 'text',\r\n            'placeholder': 'Enter phone number',\r\n            'control_id': 'formPhone',\r\n            'errorMsg': 'Please provide phone number.',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'points',\r\n            'title': 'Points',\r\n            'type': 'number',\r\n            'placeholder': 'Enter points',\r\n            'control_id': 'formPoints',\r\n            'required': false\r\n        },\r\n        {\r\n            'key': 'package_id',\r\n            'title': 'Search name',\r\n            'type': 'asyncselect',\r\n            'placeholder': 'Enter name',\r\n            'control_id': 'formName',\r\n            'errorMsg': 'Please add package.',\r\n            'required': true\r\n        }\r\n    ];\r\n    \r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {\r\n\r\n        setData({user_type_id: 3})\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    const addUser = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n    \r\n            if(data.id) {\r\n                dispatch(EditData(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n\r\n                    toast.success(\"User updated successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n        \r\n                })\r\n            } else {\r\n                dispatch(Register(props, data))\r\n                .then(() => {\r\n                    setShow(false);\r\n\r\n                    toast.success(\"User added successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n        \r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const fetchUsers = (url = '/users', $params = {}) => {\r\n\r\n        dispatch(GetData(props, url, $params));\r\n\r\n    }\r\n\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(userList.data.links))\r\n        return userList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchUsers(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const timezoneConvert = (time) => {\r\n        var userTz = moment.tz.guess(true);\r\n        var time = moment.tz(time, config.url.TIMEZONE);\r\n\r\n        return time.tz(userTz);\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(userList.data.data)) {\r\n\r\n            return userList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td><Link to={'user/' + el.id}>{el.info ? el.info.customer_id : '-'}</Link></td>\r\n                    <td><Link to={'user/' + el.id}>{el.name}</Link></td>\r\n                    <td>{el.type_name}</td>\r\n                    <td>{el.email}</td>\r\n                    <td>{el.phone_number}</td>\r\n                    <td>{el.info && el.info.package ? el.info.package.name : 'None'}</td>\r\n                    <td>{timezoneConvert(el.created_at).format('YYYY-MM-DD hh:mm:ss A')}</td>\r\n                    <td>{timezoneConvert(el.updated_at).format('YYYY-MM-DD hh:mm:ss A')}</td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id)}}>Delete</Button>\r\n                            <Button onClick={e => handleEditShow(el)}>Edit</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(userList.loading) {\r\n\r\n            return <tr><td colSpan=\"9\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(userList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"9\" className=\"text-center\">{userList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"9\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const handleEditShow = (val) => {\r\n\r\n        val.customer_id = val.info ? val.info.customer_id : ''\r\n        val.package_id = val.info ? {'value' : val.info.package.id, 'label' : val.info.package.name} : ''\r\n\r\n        setData(val)\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    const handleDelete = id => {\r\n    \r\n        dispatch(DeleteData(props, id))\r\n\r\n    }\r\n\r\n    const fetchPackages = async (search) => {\r\n\r\n        const res = await axios.get('/packages?search=' + search)\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n\r\n        return options\r\n        \r\n    }\r\n\r\n    const promisePackagesOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(fetchPackages(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    const searchCustomer = async (email) => {\r\n\r\n        const res = await dmsAxios.get('/sample/sample/v3/customers?email='+email+'&page=1&pageSize=50')\r\n\r\n        console.log(res);\r\n    }\r\n\r\n    const promiseCustomersOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(searchCustomer(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    const userForm = () => {\r\n        let form = fields\r\n\r\n        if(data.user_type_id == 3) form = customerFields\r\n\r\n        return form.map((field, i) => {\r\n            if(field.type === 'text' || field.type === 'email' || field.type === 'number') {\r\n                return <Form.Group as={Row} key={i} controlId={field.control_id}>\r\n                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                    <Col sm={9}>\r\n                        <Form.Control \r\n                            required={field.required}\r\n                            type={field.type} \r\n                            placeholder={field.placeholder}\r\n                            value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                            defaultValue={data[field.key]}\r\n                            onChange={ e => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {field.errorMsg}\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                </Form.Group>\r\n            } else if(field.type === 'select') {\r\n                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                    <Col sm={9}>\r\n                        <Form.Control \r\n                            size=\"sm\"\r\n                            required={field.required}\r\n                            as={field.type} \r\n                            placeholder={field.placeholder}\r\n                            value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                            onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }>\r\n\r\n                            {field.options.map((option, i) => {\r\n                                return <option key={i} value={option.key}>{option.label}</option>\r\n                            })}\r\n\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {field.errorMsg}\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                </Form.Group>\r\n            } else if(field.type === 'asyncselect') {\r\n                if(field.key == 'package_id') {\r\n                    return <AsyncSelect defaultOptions defaultValue={!_.isUndefined(data[field.key]) ? data[field.key] : ''} loadOptions={promisePackagesOptions} onChange={value => setData(prev => ({...prev, [field.key] : value}))} /> \r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleTypeChange = (val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, type : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchUsers('/users', tmpFilter)\r\n    }\r\n\r\n    const handleFilterInputChange = (key, val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, [key] : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchUsers('/users', tmpFilter)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchUsers()\r\n\r\n        // fetchRewards()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Button variant=\"primary\" onClick={handleShow}>\r\n                        Add User\r\n                    </Button>\r\n                </Col>\r\n        \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Form noValidate validated={validated} onSubmit={addUser}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{!_.isUndefined(data.id) ? 'Edit User' : 'Add User'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>                            \r\n                            {userForm()}\r\n                            {/* <AsyncSelect cacheOptions defaultOptions loadOptions={promisePackagesOptions} onChange={value => setData(prev => ({...prev, 'test' : value.value}))} /> */}\r\n\r\n                            {/* <AsyncSelect loadOptions={promiseCustomersOptions} onChange={value => searchCustomer(value.value)} />     */}\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                            Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>Type</Form.Label>\r\n                            <Col lg={3}>\r\n                                <Form.Control as=\"select\" size=\"sm\" custom defaultValue={!_.isEmpty(filters) && !_.isEmpty(filters.type) ? filters.type : 'all'} onChange={(e) => handleTypeChange(e.target.value)}>\r\n                                <option value=\"all\">All</option>\r\n                                <option value=\"3\">Customers</option>\r\n                                <option value=\"2\">Admins</option>\r\n                                <option value=\"1\">Super Admins</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Customer ID\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g ABC123\" onChange={(e) => handleFilterInputChange('customer_id', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Name\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g John Doe\" onChange={(e) => handleFilterInputChange('search', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Email\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g example@example.com\" onChange={(e) => handleFilterInputChange('email', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table responsive hover size=\"sm\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Type</th>\r\n                                <th>Email</th>\r\n                                <th>Phone</th>\r\n                                <th>Package</th>\r\n                                <th>Created</th>\r\n                                <th>Updated</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {showData()}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Pagination size=\"sm\" className=\"float-right\">                    \r\n                        {showPagination()}\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default User;","import React, {useState, useRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Figure, Form, ListGroup, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport QRCode from \"qrcode.react\";\r\nimport AsyncSelect from 'react-select/async';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst AdminProfile = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const asyncSel = useRef(null);\r\n\r\n    const userid = props.match.params.user;\r\n    const [data, setData] = useState({});\r\n\r\n    const [user, setUser] = useState({})\r\n    const [rewards, setRewards] = useState({\r\n        loading: false,\r\n        data: [],\r\n        errorMsg: ''\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n        fetchUserRewards()\r\n        \r\n        setData(prev => ({'type' : 'earn', 'user_id' : userid}))\r\n    }, [])\r\n\r\n    const fetchUserRewards = async ($url = null) => {\r\n\r\n        setRewards(prev => ({...prev, 'loading' : true}));\r\n\r\n        const res = await axios.get($url ? $url : '/users/' + userid + '/rewards')\r\n\r\n        let result = res.data.data\r\n        \r\n        setRewards(prev => ({...prev, 'loading' : false}));\r\n\r\n        setRewards(prev => ({...prev, 'data' : result.rewards}));\r\n\r\n    }\r\n\r\n    const showRewardsPagination = () => {\r\n        if(!_.isEmpty(rewards.data.links))\r\n        return rewards.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchUserRewards(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const showRewards = () => {\r\n\r\n        let dataList = rewards\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n                return <ListGroup.Item key={key}>{el.reward_name}</ListGroup.Item>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const fetchData = async event => {\r\n\r\n        const res = await axios.get('/users/' + userid)\r\n\r\n        setUser(res.data.data)\r\n\r\n    }\r\n\r\n    const qrCode = () => {\r\n        if(!_.isEmpty(user.info) && !_.isEmpty(user.info.customer_id)) {\r\n\r\n            return <Figure>\r\n                        <QRCode value={user.info.customer_id} />\r\n                        <Figure.Caption>{user.info.customer_id}</Figure.Caption>\r\n                    </Figure>\r\n\r\n        }\r\n    }\r\n\r\n    const fetchActions = async (search) => {\r\n\r\n        const res = await axios.get('/campaigns/'+data.campaign_id+'/actions', {\r\n            'search': search,\r\n            'activity': true\r\n        })\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a].action\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n\r\n        return options\r\n        \r\n    }\r\n\r\n    const promiseActionOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(fetchActions(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    const fetchRewards = async (search) => {\r\n\r\n        const res = await axios.get('/campaigns/' + data.campaign_id + '/actions/' + data.action_id)\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a].reward\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n\r\n        return options\r\n        \r\n    }\r\n\r\n    const promiseRewardOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(fetchRewards(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    const fetchCampaigns = async (search) => {\r\n\r\n        const res = await axios.get('/campaigns', {\r\n            params : {\r\n                'search': search,\r\n                'activity': true\r\n            }\r\n        })\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n\r\n        return options\r\n        \r\n    }\r\n\r\n    const promiseCampaignOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(fetchCampaigns(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    const handleRewardSubmit = async () => {\r\n        try {\r\n            const res = await axios.post('transactions', data)\r\n    \r\n            var result = res.data.data\r\n            \r\n            setData(prev => ({'type' : 'earn', 'user_id' : userid}))\r\n            setUser(prev => ({...prev, 'points' : result.balance}))\r\n    \r\n            asyncSel.current.select.select.clearValue();\r\n\r\n            toast.success(\"Reward has been added successfully\", {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n    \r\n            fetchUserRewards()\r\n        } catch (error) {\r\n            toast.error(error.response.data.message, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <Card className=\"user-info\">\r\n                        <Card.Body>\r\n                            {qrCode()}\r\n                            <Card.Title>{user.name}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{!_.isEmpty(user.info) && !_.isEmpty(user.info.address) ? user.info.address : '' }</Card.Subtitle>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md={9} className=\"user-points-container d-flex pr-0 pl-0 pb-1\">\r\n                                        <Col md=\"5\" className=\"font-weight-bold m-0\">Points</Col>\r\n                                        <Col md=\"7\" className=\"m-0\">{user.points}</Col>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Personal Information</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Firstname</Col>\r\n                                    <Col md=\"8\">{user.firstname}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Middlename</Col>\r\n                                    <Col md=\"8\">{user.middlename}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Lastname</Col>\r\n                                    <Col md=\"8\">{user.lastname}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Email</Col>\r\n                                    <Col md=\"8\">{user.email}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Phone</Col>\r\n                                    <Col md=\"8\">{user.phone_number}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Package</Col>\r\n                                    <Col md=\"8\">{!_.isEmpty(user.info) && !_.isNull(user.info.package) ? user.info.package.name : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Vehicle Info</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Year</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_year) ? user.info.vehicle_year : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Make</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_make) ? user.info.vehicle_make : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Model</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_model) ? user.info.vehicle_model : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Trim</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_trim) ? user.info.vehicle_trim : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Color</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_color) ? user.info.vehicle_color : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Vin No.</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_vin_no) ? user.info.vehicle_vin_no : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Card className=\"user-info\">\r\n                        <Card.Body>\r\n                            <Card.Title>Add User Action</Card.Title>\r\n                            <Card.Text>\r\n                                <AsyncSelect ref={asyncSel} defaultOptions loadOptions={promiseCampaignOptions} onChange={value => {(value != null) ? setData(prev => ({'type' : 'earn', 'user_id' : userid, 'campaign_id' : value.value, 'campaign_name' : value.label})) : setData(prev => ({'type' : 'earn', 'user_id' : userid}))}} />\r\n                                {data.campaign_id ? <AsyncSelect key={'campaign-' + data.campaign_id} defaultOptions loadOptions={promiseActionOptions} onChange={value => setData(prev => ({...prev, 'action_id' : value.value, 'action_name' : value.label}))} /> : ''}\r\n                                {data.action_id ? <AsyncSelect key={'action-' + data.action_id} isMulti defaultOptions loadOptions={promiseRewardOptions} onChange={value => setData(prev => ({...prev, 'rewards' : value}))} /> : ''}\r\n\r\n                                {data.campaign_id && data.action_id  && !_.isEmpty(data.rewards) ? <Button onClick={handleRewardSubmit}>Submit</Button> : ''}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card className=\"user-rewards\">\r\n                        <Card.Body>\r\n                            <Card.Title>Rewards</Card.Title>\r\n                            <Card.Text>\r\n                                <ListGroup variant=\"flush\">\r\n                                {showRewards()}\r\n                                </ListGroup>\r\n                                \r\n                                <Pagination size=\"sm\" className=\"float-right\">                    \r\n                                    {showRewardsPagination()}\r\n                                </Pagination>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst CustomerProfile = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const userid = props.match.params.user;\r\n    const [data, setData] = useState({});\r\n\r\n    const [user, setUser] = useState({})\r\n    const [rewards, setRewards] = useState({\r\n        loading: false,\r\n        data: [],\r\n        errorMsg: ''\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n        fetchUserRewards()\r\n        \r\n        setData(prev => ({...prev, 'type' : 'earn'}))\r\n        setData(prev => ({...prev, 'user_id' : userid}))\r\n    }, [])\r\n\r\n    const fetchUserRewards = async ($url = null) => {\r\n\r\n        setRewards(prev => ({...prev, 'loading' : true}));\r\n\r\n        const res = await axios.get($url ? $url : '/users/' + userid + '/rewards')\r\n\r\n        let result = res.data.data\r\n        \r\n        setRewards(prev => ({...prev, 'loading' : false}));\r\n\r\n        setRewards(prev => ({...prev, 'data' : result.rewards}));\r\n\r\n    }\r\n\r\n    const handleClaim = async (reward_id) => {\r\n\r\n        const res = await axios.post('claim', {'reward_id' : reward_id, 'qty' : 1})\r\n\r\n        let result = res.data.data\r\n        let reward = result.reward\r\n\r\n        if(reward.status == 'completed') {\r\n            let stateData = rewards.data\r\n            let newData = stateData.data.filter((item) => item.id !== reward.id)\r\n            \r\n            stateData.data = newData;\r\n\r\n            setRewards(prev => ({...prev, 'data' : stateData}));\r\n        }\r\n\r\n    }    \r\n\r\n    const showRewardsPagination = () => {\r\n        if(!_.isEmpty(rewards.data.links))\r\n        return rewards.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchUserRewards(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const showRewards = () => {\r\n\r\n        let dataList = rewards\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n                return <ListGroup.Item key={key}>{el.reward_name} <Button size=\"sm\" onClick={() => handleClaim(el.id)}>Claim</Button></ListGroup.Item>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const fetchData = async event => {\r\n\r\n        const res = await axios.get('/users/' + userid)\r\n\r\n        setUser(res.data.data)\r\n\r\n    }\r\n\r\n    const qrCode = () => {\r\n        if(!_.isEmpty(user.info) && !_.isEmpty(user.info.customer_id)) {\r\n\r\n            return <Figure>\r\n                        <QRCode value={user.info.customer_id} />\r\n                        <Figure.Caption>{user.info.customer_id}</Figure.Caption>\r\n                    </Figure>\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            {qrCode()}\r\n                            <Card.Title>{user.name}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{!_.isEmpty(user.info) && !_.isEmpty(user.info.address) ? user.info.address : '' }</Card.Subtitle>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Points</Col>\r\n                                    <Col md=\"9\"><Badge variant=\"info\">{user.points}</Badge></Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Personal Information</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Firstname</Col>\r\n                                    <Col md=\"8\">{user.firstname}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Middlename</Col>\r\n                                    <Col md=\"8\">{user.middlename}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Lastname</Col>\r\n                                    <Col md=\"8\">{user.lastname}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Email</Col>\r\n                                    <Col md=\"8\">{user.email}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Phone</Col>\r\n                                    <Col md=\"8\">{user.phone_number}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Package</Col>\r\n                                    <Col md=\"8\">{!_.isEmpty(user.info) && !_.isNull(user.info.package) ? user.info.package.name : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Vehicle Info</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Year</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_year) ? user.info.vehicle_year : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Make</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_make) ? user.info.vehicle_make : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Model</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_model) ? user.info.vehicle_model : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Trim</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_trim) ? user.info.vehicle_trim : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Color</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_color) ? user.info.vehicle_color : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Vin No.</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_vin_no) ? user.info.vehicle_vin_no : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Rewards</Card.Title>\r\n                            <Card.Text>\r\n                                <ListGroup variant=\"flush\">\r\n                                {showRewards()}\r\n                                </ListGroup>\r\n                                \r\n                                <Pagination size=\"sm\" className=\"float-right\">                    \r\n                                    {showRewardsPagination()}\r\n                                </Pagination>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminProfile(props)\r\n\r\n    } else {\r\n\r\n        return CustomerProfile(props)\r\n\r\n    }\r\n}","import React, {useState, useRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Figure, Form, ListGroup, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport QRCode from \"qrcode.react\";\r\n\r\nconst AdminProfile = (props) => {\r\n    \r\n    const [user, setUser] = useState({})\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = async event => {\r\n\r\n        const res = await axios.get('/profile')\r\n\r\n        setUser(res.data.data)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col md=\"8\">\r\n                    <Card className=\"user-info\">\r\n                        <Card.Body>\r\n                            <Card.Title>{user.name}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{user.type_name}</Card.Subtitle>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Points</Col>\r\n                                    <Col md=\"9\"><Badge variant=\"info\">{user.points}</Badge></Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Personal Information</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Firstname</Col>\r\n                                    <Col md=\"8\">{user.firstname || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Middlename</Col>\r\n                                    <Col md=\"8\">{user.middlename || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Lastname</Col>\r\n                                    <Col md=\"8\">{user.lastname || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Email</Col>\r\n                                    <Col md=\"8\">{user.email}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Phone</Col>\r\n                                    <Col md=\"8\">{user.phone_number || '-'}</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst CustomerProfile = (props) => {\r\n    \r\n    const auth = useSelector(state => state.Auth);\r\n    const [user, setUser] = useState({})\r\n    const [rewards, setRewards] = useState({\r\n        loading: false,\r\n        data: [],\r\n        errorMsg: ''\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n        fetchUserRewards()\r\n    }, [])\r\n\r\n    const fetchUserRewards = async ($url = null) => {\r\n\r\n        setRewards(prev => ({...prev, 'loading' : true}));\r\n\r\n        const res = await axios.get($url ? $url : '/users/' + auth.user.id + '/rewards')\r\n\r\n        let result = res.data.data\r\n        \r\n        setRewards(prev => ({...prev, 'loading' : false}));\r\n\r\n        setRewards(prev => ({...prev, 'data' : result.rewards}));\r\n\r\n    }\r\n\r\n    const fetchData = async event => {\r\n\r\n        const res = await axios.get('/profile')\r\n\r\n        setUser(res.data.data)\r\n\r\n    }\r\n\r\n    const handleClaim = async (reward_id) => {\r\n\r\n        const res = await axios.post('claim', {'reward_id' : reward_id, 'qty' : 1})\r\n\r\n        let result = res.data.data\r\n        let reward = result.reward\r\n\r\n        if(reward.status == 'completed') {\r\n            let stateData = rewards.data\r\n            let newData = stateData.data.filter((item) => item.id !== reward.id)\r\n            \r\n            stateData.data = newData;\r\n\r\n            setRewards(prev => ({...prev, 'data' : stateData}));\r\n        }\r\n\r\n    }    \r\n\r\n    const showRewardsPagination = () => {\r\n        if(!_.isEmpty(rewards.data.links))\r\n        return rewards.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchUserRewards(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const showRewards = () => {\r\n\r\n        let dataList = rewards\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n                return <ListGroup.Item key={key}>{el.reward_name}<Button size=\"sm\" className=\"float-right\" variant=\"dark\" onClick={() => handleClaim(el.id)}>Claim</Button></ListGroup.Item>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">Unable to get data</td></tr>\r\n\r\n    }\r\n\r\n    const qrCode = () => {\r\n        if(!_.isEmpty(user.info) && !_.isEmpty(user.info.customer_id)) {\r\n\r\n            return <Figure>\r\n                        <QRCode value={user.info.customer_id} />\r\n                        <Figure.Caption>{user.info.customer_id}</Figure.Caption>\r\n                    </Figure>\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <Card className=\"user-info\">\r\n                        <Card.Body>\r\n                            {qrCode()}\r\n                            <Card.Title>{user.name}</Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">{user.type_name}</Card.Subtitle>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Points</Col>\r\n                                    <Col md=\"9\"><Badge variant=\"info\">{user.points}</Badge></Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Personal Information</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Firstname</Col>\r\n                                    <Col md=\"8\">{user.firstname || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Middlename</Col>\r\n                                    <Col md=\"8\">{user.middlename || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Lastname</Col>\r\n                                    <Col md=\"8\">{user.lastname || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Email</Col>\r\n                                    <Col md=\"8\">{user.email}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Phone</Col>\r\n                                    <Col md=\"8\">{user.phone_number || '-'}</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"4\" className=\"font-weight-bold\">Package</Col>\r\n                                    <Col md=\"8\">{!_.isEmpty(user.info) && !_.isNull(user.info.package) ? user.info.package.name : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Body>\r\n                            <Card.Title>Vehicle Info</Card.Title>\r\n                            <Card.Text>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Year</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_year) ? user.info.vehicle_year : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Make</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_make) ? user.info.vehicle_make : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Model</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_model) ? user.info.vehicle_model : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Trim</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_trim) ? user.info.vehicle_trim : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Color</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_color) ? user.info.vehicle_color : '' }</Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md=\"3\" className=\"font-weight-bold\">Vin No.</Col>\r\n                                    <Col md=\"9\">{!_.isEmpty(user.info) && !_.isNull(user.info.vehicle_vin_no) ? user.info.vehicle_vin_no : '' }</Col>\r\n                                </Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Card className=\"user-rewards\">\r\n                        <Card.Body>\r\n                            <Card.Title>Rewards</Card.Title>\r\n                            <Card.Text>\r\n                                <ListGroup variant=\"flush\">\r\n                                {showRewards()}\r\n                                </ListGroup>\r\n                                \r\n                                <Pagination className=\"float-right\">                    \r\n                                    {showRewardsPagination()}\r\n                                </Pagination>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminProfile(props)\r\n\r\n    } else {\r\n\r\n        return CustomerProfile(props)\r\n\r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Form, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nconst Setting = (props) => {\r\n    \r\n    const [user, setUser] = useState({})\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    React.useEffect(() => {\r\n        fetchProfile(1)\r\n    }, [])\r\n\r\n    const fetchProfile = async event => {\r\n\r\n        const res = await axios.get('/profile')\r\n\r\n        setUser(res.data.data)\r\n\r\n        console.log(res.data.data);\r\n\r\n    }\r\n\r\n    const handleSettingSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const res = await axios.post('/settings', user)\r\n\r\n        console.log(user);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Card>\r\n            <Form noValidate validated={validated} onSubmit={handleSettingSubmit}>\r\n                <Card.Body>\r\n                    <Card.Title>Personal Information</Card.Title>\r\n                    <Card.Text>\r\n                        <Row><Col>Name</Col></Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Form.Control \r\n                                placeholder=\"First name\"\r\n                                value={user.firstname}\r\n                                onChange={ (e) => setUser(prev => ({...prev, firstname : e.target.value})) } />\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control placeholder=\"Middle name\"\r\n                                value={user.middlename}\r\n                                onChange={ (e) => setUser(prev => ({...prev, middlename : e.target.value})) } />\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Control placeholder=\"Last name\"\r\n                                value={user.lastname}\r\n                                onChange={ (e) => setUser(prev => ({...prev, lastname : e.target.value})) } />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Form.Group controlId=\"formGridAddress1\">\r\n                            <Form.Label>Phone number</Form.Label>\r\n                            <Form.Control placeholder=\"1234 Main St\"\r\n                            value={user.phone_number}\r\n                            onChange={ (e) => setUser(prev => ({...prev, phone_number : e.target.value})) } />\r\n                        </Form.Group>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                <Card.Body>\r\n                    <Card.Title>Security</Card.Title>\r\n                    <Card.Text>\r\n                        <Form.Group controlId=\"formGridEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control placeholder=\"Email\"\r\n                            value={user.email}\r\n                            onChange={ (e) => setUser(prev => ({...prev, email : e.target.value})) } />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGridPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            onChange={ (e) => setUser(prev => ({...prev, password : e.target.value})) } />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGridNewPassword\">\r\n                            <Form.Label>New Password</Form.Label>\r\n                            <Form.Control placeholder=\"New Password\"\r\n                            type=\"password\"\r\n                            onChange={ (e) => setUser(prev => ({...prev, new_password : e.target.value})) } />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGridConfirmPassword\">\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control placeholder=\"Confirm Password\"\r\n                            type=\"password\"\r\n                            onChange={ (e) => setUser(prev => ({...prev, new_password_confirmation : e.target.value})) } />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Update\r\n                        </Button>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Form>\r\n        </Card>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Setting;","import axios from \"axios\";\r\n\r\nexport const GetPackages = (props, url = '/packages') => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(url)\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const AddPackage = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post('/packages', data)\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_ADDED\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const EditPackage = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.put('/packages/' + data.id, data)\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_UPDATED\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const DeletePackage = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.delete('/packages/' + id)\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_DELETED\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"PACKAGE_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, ButtonGroup, Col, Form, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport {AddPackage, DeletePackage, EditPackage, GetPackages} from \"../actions/packageAction\";\r\nimport AsyncSelect from 'react-select/async';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport moment from 'moment-timezone';\r\nimport {config} from '../utils/Constants'\r\n\r\nconst Package = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const packageList = useSelector(state => state.Package);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [reward, setReward] = useState({});\r\n    const fields = [\r\n        {\r\n            'key': 'id',\r\n            'title': 'Name',\r\n            'type': 'hidden',\r\n            'placeholder': 'Package ID',\r\n            'control_id': 'formPackageId',\r\n            'hidden': true\r\n        },\r\n        {\r\n            'key': 'name',\r\n            'title': 'Name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter package name',\r\n            'control_id': 'formPackageName',\r\n            'errorMsg': 'Please provide package name.',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'description',\r\n            'title': 'Description',\r\n            'type': 'text',\r\n            'placeholder': 'Enter package description',\r\n            'control_id': 'formPackageDescription',\r\n            'errorMsg': 'Please provide package description.',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'multiplier',\r\n            'title': 'Multiplier',\r\n            'type': 'number',\r\n            'placeholder': 'Enter package multiplier',\r\n            'control_id': 'formPackageMultiplier',\r\n            'errorMsg': 'Please provide package multiplier.',\r\n            'min': 0,\r\n            'required': true\r\n        }\r\n    ];\r\n\r\n    const productName = props.match.params.product;\r\n\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (packageData) => {\r\n\r\n        setData({})\r\n\r\n        setShow(true);\r\n\r\n    }\r\n    const handleEditShow = (packageData) => {\r\n\r\n        packageData.rewards.map((reward, i) => {\r\n            reward['value'] = reward.reward_id\r\n            reward['label'] = reward.reward.name\r\n            return reward\r\n        })\r\n\r\n        setData(packageData)\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = (url = '/packages') => {\r\n\r\n        console.log(process.env.NODE_ENV);\r\n\r\n        dispatch(GetPackages(props, url));\r\n\r\n    }\r\n\r\n    const addPackage = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n\r\n            if(data.id) {\r\n                dispatch(EditPackage(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n\r\n                    toast.success(\"Package updated successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                }).catch((error) => {\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            }\r\n            else {\r\n                dispatch(AddPackage(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n\r\n                    toast.success(\"Package added successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                }).catch((error) => {\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const fetchRewards = async () => {\r\n\r\n        const res = await axios.get('/rewards')\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n        \r\n        return options\r\n    }\r\n\r\n    const promiseRewardOptions = inputValue => new Promise(resolve => {\r\n\r\n        setTimeout(() => {\r\n            resolve(fetchRewards(inputValue));\r\n        }, 1000);\r\n\r\n    });\r\n\r\n    const handleDelete = id => {\r\n    \r\n        dispatch(DeletePackage(props, id))\r\n\r\n    }\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(packageList.data.links))\r\n        return packageList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const timezoneConvert = (time) => {\r\n        var userTz = moment.tz.guess(true);\r\n        var time = moment.tz(time, config.url.TIMEZONE);\r\n\r\n        return time.tz(userTz).format('YYYY-MM-DD hh:mm:ss A');\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(packageList.data.data)) {\r\n\r\n            return packageList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.name}</td>\r\n                    <td>{el.description}</td>\r\n                    <td>{el.multiplier}</td>\r\n                    <td>{timezoneConvert(el.created_at)}</td>\r\n                    <td>{timezoneConvert(el.updated_at)}</td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id)}}>Delete</Button>\r\n                            <Button onClick={e => handleEditShow(el)}>Edit</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(packageList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(packageList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{packageList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const showTmp = () => {\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {showTmp()}\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Button variant=\"primary\" onClick={handleShow}>\r\n                        Add Package\r\n                    </Button>\r\n                </Col>\r\n        \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Form noValidate validated={validated} onSubmit={addPackage}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Add Package</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            {fields.map((field, i) => {\r\n                                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        {field.type == 'number' ?                                        \r\n                                            <Form.Control \r\n                                                required={field.required}\r\n                                                type={field.type} \r\n                                                min={field.min} \r\n                                                placeholder={field.placeholder}\r\n                                                value={data[field.key]}\r\n                                                onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                            />\r\n                                        :\r\n                                            <Form.Control \r\n                                                required={field.required}\r\n                                                type={field.type} \r\n                                                placeholder={field.placeholder}\r\n                                                value={data[field.key]}\r\n                                                onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                            />\r\n                                        }\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                          {field.errorMsg}\r\n                                        </Form.Control.Feedback>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            })}\r\n                            <AsyncSelect key={0} isMulti cacheOptions defaultOptions defaultValue={data.rewards} loadOptions={promiseRewardOptions} onChange={value => setData(prev => ({...prev, 'rewards' : value}))} placeholder=\"None\" />\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                            Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table responsive hover size=\"sm\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n                                <th>Multiplier</th>\r\n                                <th>Created</th>\r\n                                <th>Updated</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {showData()}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Pagination size=\"sm\" className=\"float-right\">                    \r\n                        {showPagination()}\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Package;","import axios from \"axios\";\r\n\r\nconst apiRoute = '/actions'\r\n\r\nexport const GetData = (props, url = apiRoute) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"ACTION_REQUEST\"\r\n    })\r\n\r\n    await axios.get(url)\r\n    .then((res) => {\r\n\r\n        dispatch({\r\n            type: \"ACTION_FETCH\",\r\n            payload: res.data.data\r\n        })\r\n\r\n    })\r\n    .catch((error) => {\r\n        if(error.response) {\r\n            dispatch({\r\n                type: \"ACTION_FAIL\",\r\n                payload: error.response.data.message\r\n            })\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport const AddData = (props, data) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"ACTION_REQUEST\"\r\n    })\r\n\r\n    await axios.post(apiRoute, data)\r\n    .then((res) => {\r\n\r\n        dispatch({\r\n            type: \"ACTION_ADD\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n\r\n    })\r\n    .catch((error) => {\r\n        if(error.response) {\r\n            dispatch({\r\n                type: \"ACTION_FAIL\",\r\n                payload: error.response.data.message\r\n            })\r\n        }\r\n\r\n        return Promise.reject(error);\r\n    })\r\n\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"ACTION_REQUEST\"\r\n    })\r\n\r\n    await axios.put(apiRoute + '/' + data.id, data)\r\n    .then((res) => {\r\n\r\n        dispatch({\r\n            type: \"ACTION_UPDATE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n\r\n    })\r\n    .catch((error) => {\r\n        if(error.response) {\r\n            dispatch({\r\n                type: \"ACTION_FAIL\",\r\n                payload: error.response.data.message\r\n            })\r\n        }\r\n\r\n        return Promise.reject(error);\r\n    })\r\n\r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"ACTION_REQUEST\"\r\n    })\r\n\r\n    await axios.delete(apiRoute + '/' + id)\r\n    .then((res) => {\r\n\r\n        dispatch({\r\n            type: \"ACTION_DELETE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n    })\r\n    .catch((error) => {\r\n        if(error.response) {\r\n            dispatch({\r\n                type: \"ACTION_FAIL\",\r\n                payload: error.response.data.message\r\n            })\r\n        }\r\n    })\r\n        \r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, ButtonGroup, Card, Col, Form, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport {AddData, DeleteData, EditData, GetData} from \"../actions/actionAction\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport moment from 'moment-timezone';\r\nimport {config} from '../utils/Constants'\r\n\r\nconst AdminAction = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const actionList = useSelector(state => state.Action);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const fields = [\r\n        {\r\n            'key': 'id',\r\n            'title': 'Name',\r\n            'type': 'hidden',\r\n            'placeholder': 'Action ID',\r\n            'control_id': 'formActionId',\r\n            'hidden': true\r\n        },\r\n        {\r\n            'key': 'name',\r\n            'title': 'Name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter action name',\r\n            'control_id': 'formActionName',\r\n            'errorMsg': 'Please provide action name.',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'description',\r\n            'title': 'Description',\r\n            'type': 'text',\r\n            'placeholder': 'Enter action description',\r\n            'control_id': 'formActionDescription',\r\n            'errorMsg': 'Please provide action description.',\r\n            'required': true\r\n        }\r\n    ];\r\n\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {\r\n\r\n        setData({})\r\n\r\n        setShow(true);\r\n\r\n    }\r\n    const handleEditShow = (val) => {\r\n\r\n        setData(val)\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    const fetchData = (url = '/actions') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n\r\n            if(data.id) {\r\n                dispatch(EditData(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n\r\n                    toast.success(\"Action updated successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                }).catch((error) => {\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            } else {\r\n                dispatch(AddData(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n\r\n                    toast.success(\"Action added successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                }).catch((error) => {\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleDelete = id => {\r\n    \r\n        dispatch(DeleteData(props, id))\r\n\r\n    }\r\n\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(actionList.data.links))\r\n        return actionList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const timezoneConvert = (time) => {\r\n        var userTz = moment.tz.guess(true);\r\n        var time = moment.tz(time, config.url.TIMEZONE);\r\n\r\n        return time.tz(userTz).format('YYYY-MM-DD hh:mm:ss A');\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(actionList.data.data)) {\r\n\r\n            return actionList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.name}</td>\r\n                    <td>{el.description}</td>\r\n                    <td>{timezoneConvert(el.created_at)}</td>\r\n                    <td>{timezoneConvert(el.updated_at)}</td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id)}}>Delete</Button>\r\n                            <Button onClick={e => handleEditShow(el)}>Edit</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(actionList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(actionList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{actionList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Button variant=\"primary\" onClick={handleShow}>\r\n                        Add Action\r\n                    </Button>\r\n                </Col>\r\n        \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Add Action</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            {fields.map((field, i) => {\r\n                                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        <Form.Control \r\n                                            required={field.required}\r\n                                            type={field.type} \r\n                                            placeholder={field.placeholder}\r\n                                            value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                            onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                          {field.errorMsg}\r\n                                        </Form.Control.Feedback>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            })}\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                            Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table responsive hover size=\"sm\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n                                <th>Created</th>\r\n                                <th>Updated</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {showData()}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Pagination size=\"sm\" className=\"float-right\">                    \r\n                        {showPagination()}\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst UserAction = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const actionList = useSelector(state => state.Action);\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(actionList.data.data)) {\r\n\r\n            return actionList.data.data.map((el, key) => {\r\n\r\n                return <Col md={4} className=\"mb-3\">\r\n                    <Card key={key}>\r\n                        <Card.Body>\r\n                            <Card.Title>{el.name}</Card.Title>\r\n                            <Card.Text>{el.description}</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            })\r\n\r\n        }\r\n\r\n        if(actionList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(actionList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{actionList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchData()\r\n\r\n    }, [])\r\n\r\n    const fetchData = (url = '/actions') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"pt-3\">\r\n                {showData()}\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst Init  = (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminAction(props)\r\n\r\n    } else {\r\n\r\n        return UserAction(props)\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default AdminAction","import axios from \"axios\";\r\n\r\nconst apiRoute = '/campaigns'\r\n\r\nexport const GetData = (props, url = apiRoute) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(url)\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FETCH\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const GetDataById = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FETCH\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const AddData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post(apiRoute, data)\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_ADD\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.put(apiRoute + '/' + data.id, data)\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_UPDATE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.delete(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_DELETE\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        console.log(error.response.data);\r\n\r\n        dispatch({\r\n            type: \"CAMPAIGN_FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Form, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport {AddData, DeleteData, EditData, GetData} from \"../actions/campaignAction\";\r\nimport Moment from 'react-moment';\r\nimport AsyncSelect from 'react-select/async';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport moment from 'moment-timezone';\r\nimport {config} from '../utils/Constants'\r\n\r\nconst AdminCampaign = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const dataList = useSelector(state => state.Campaign);\r\n    const [campaignList, setCampaignList] = useState({\r\n        loading: false,\r\n        data: [],\r\n        errorMsg: ''\r\n    });\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [reward, setReward] = useState({});\r\n    const [showAddCampaign, setShowAddCampaign] = useState(false);\r\n    const [showAddReward, setShowAddReward] = useState(false);\r\n    const fields = [\r\n        {\r\n            'key': 'id',\r\n            'title': 'ID',\r\n            'type': 'hidden',\r\n            'placeholder': 'Campaign ID',\r\n            'control_id': 'formCampaignId',\r\n            'hidden': true\r\n        },\r\n        {\r\n            'key': 'name',\r\n            'title': 'Name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter campaign name',\r\n            'errorMsg': 'Please provide campaign name.',\r\n            'control_id': 'formCampaignName',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'description',\r\n            'title': 'Description',\r\n            'type': 'text',\r\n            'placeholder': 'Enter campaign description',\r\n            'errorMsg': 'Please provide campaign description.',\r\n            'control_id': 'formCampaignDescription',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'start_date',\r\n            'title': 'Start Date',\r\n            'type': 'datepicker',\r\n            'placeholder': 'Enter campaign start date',\r\n            'errorMsg': 'Please provide campaign name.',\r\n            'control_id': 'formStartDescription',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'end_date',\r\n            'title': 'End Date',\r\n            'type': 'datepicker',\r\n            'placeholder': 'Enter campaign end date',\r\n            'control_id': 'formEndDescription',\r\n            'required': true\r\n        }\r\n    ];\r\n    \r\n    const handleCloseAddCampaign = () => setShowAddCampaign(false);\r\n\r\n    const handleShow = () => {\r\n\r\n        setData({\r\n            'start_date': new Date(),\r\n            'end_date': new Date()\r\n        })\r\n\r\n        setShowAddCampaign(true);\r\n\r\n    }\r\n\r\n    const handleEditShow = (val) => {\r\n\r\n        setData({\r\n            'id': val.id,\r\n            'name': val.name,\r\n            'description': val.description,\r\n            'start_date': new Date(val.start_date),\r\n            'end_date': new Date(val.end_date)\r\n        })\r\n\r\n        setShowAddCampaign(true);\r\n\r\n    }\r\n\r\n    const handleCloseAddReward = () => setShowAddReward(false);\r\n\r\n    const handleRewardsShow = async (campaign_id) => {\r\n\r\n        setShowAddReward(true);\r\n\r\n        setCampaignList({...campaignList, loading: true});\r\n        \r\n        const res = await axios.get('/campaigns/' + campaign_id)\r\n        var data = res.data.data;\r\n\r\n        setCampaignList({...campaignList, data: data, loading: false});\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchData()\r\n\r\n        // fetchActions()\r\n\r\n        // fetchRewards()\r\n\r\n    }, [])\r\n\r\n    const fetchData = (url = '/campaigns') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    const fetchActions = async (search) => {\r\n\r\n        const res = await axios.get('/actions?search=' + search)\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n\r\n        return options\r\n        \r\n    }\r\n\r\n    const promiseActionOptions = inputValue => new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(fetchActions(inputValue));\r\n        }, 1000);\r\n    });\r\n\r\n    const fetchRewards = async () => {\r\n\r\n        const res = await axios.get('/rewards')\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n        \r\n        return options\r\n    }\r\n\r\n    const promiseRewardOptions = inputValue => new Promise(resolve => {\r\n\r\n        setTimeout(() => {\r\n            resolve(fetchRewards(inputValue));\r\n        }, 1000);\r\n\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n\r\n            if(data.id) {\r\n                dispatch(EditData(props, data))\r\n                .then(() => {\r\n                    setShowAddCampaign(false)\r\n                    \r\n                    toast.success(\"Campaign added successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            }\r\n            else {\r\n                dispatch(AddData(props, data))\r\n                .then(() => {\r\n                    setShowAddCampaign(false)\r\n                    \r\n                    toast.success(\"Campaign added successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const addReward = async () => {\r\n        const data = {...reward, campaign_id: campaignList.data.id}\r\n\r\n        const res = await axios.post('/campaign_rewards', data)\r\n\r\n        const newCampaign = res.data.data;\r\n\r\n        const tmp = campaignList\r\n\r\n        tmp.data.campaigns.data = [newCampaign, ...tmp.data.campaigns.data];\r\n\r\n        setCampaignList({...campaignList, ...tmp});\r\n\r\n    }\r\n\r\n    const handleDelete = async (id, key) => {\r\n\r\n        switch (key) {\r\n            case 'campaign':\r\n\r\n                const res = await axios.delete('campaign_rewards/' + id)\r\n\r\n                const data = res.data.data;\r\n\r\n                var tmp = campaignList.data\r\n                tmp.campaigns.data = tmp.campaigns.data.filter((item) => item.id !== data.id)\r\n                \r\n                setCampaignList({...campaignList, data: tmp});\r\n\r\n                break;\r\n        \r\n            default:\r\n    \r\n                dispatch(DeleteData(props, id))\r\n\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    const fetchCampaignData = async (url) => {\r\n\r\n        const res = await axios.get(url)\r\n        const data = res.data.data\r\n\r\n        setCampaignList({...campaignList, data: data});\r\n\r\n    }\r\n\r\n    const showPagination = (key) => {\r\n        switch (key) {\r\n            case 'campaigns':\r\n\r\n                if(!_.isEmpty(campaignList.data.campaigns) && !_.isEmpty(campaignList.data.campaigns.links))\r\n                return campaignList.data.campaigns.links.map((page, i) => {\r\n                    return <Pagination.Item key={i} active={page.active} onClick={() => fetchCampaignData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                        __html: page.label\r\n                    }}></span></Pagination.Item>\r\n                })\r\n                \r\n                break;\r\n        \r\n            default:\r\n\r\n                if(!_.isEmpty(dataList.data.links))\r\n                return dataList.data.links.map((page, i) => {\r\n                    return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                        __html: page.label\r\n                    }}></span></Pagination.Item>\r\n                })\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    const timezoneConvert = (time) => {\r\n        var userTz = moment.tz.guess(true);\r\n        var time = moment.tz(time, config.url.TIMEZONE);\r\n\r\n        return time.tz(userTz);\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.name} <Badge variant={(el.is_expired ? \"danger\": \"success\")}>{(el.is_expired ? \"expired\": \"active\")}</Badge></td>\r\n                    <td>{el.description}</td>\r\n                    <td><Moment format=\"YYYY/MM/DD\">{timezoneConvert(el.start_date)}</Moment></td>\r\n                    <td><Moment format=\"YYYY/MM/DD\">{timezoneConvert(el.end_date)}</Moment></td>\r\n                    <td><Moment format=\"YYYY/MM/DD hh:mm:ss\">{timezoneConvert(el.created_at)}</Moment></td>\r\n                    <td><Moment format=\"YYYY/MM/DD hh:mm:ss\">{timezoneConvert(el.updated_at)}</Moment></td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"success\" onClick={() => {handleRewardsShow(el.id)}}>Rewards</Button>\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id)}}>Delete</Button>\r\n                            <Button onClick={e => handleEditShow(el)}>Edit</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"7\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"7\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"7\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const showCampaigns = () => {\r\n\r\n        if(!_.isEmpty(campaignList.data.campaigns) && !_.isEmpty(campaignList.data.campaigns.data)) {\r\n\r\n            return campaignList.data.campaigns.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.reward.name}</td>\r\n                    <td>{el.action.name}</td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id, 'campaign')}}>Delete</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(campaignList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(campaignList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Button variant=\"primary\" onClick={handleShow}>\r\n                        Add Campaign\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table responsive striped bordered hover size=\"sm\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n                                <th>Start</th>\r\n                                <th>End</th>\r\n                                <th>Created</th>\r\n                                <th>Updated</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {showData()}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Pagination size=\"sm\" className=\"float-right\">                    \r\n                        {showPagination()}\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* Start Modals */}\r\n        \r\n            <Modal show={showAddCampaign} onHide={handleCloseAddCampaign}>\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{!_.isUndefined(data.id) ? 'Edit Campaign' : 'Add Campaign'}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {fields.map((field, i) => {\r\n                            if(field.type === 'text') {\r\n                                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        <Form.Control \r\n                                            required={field.required}\r\n                                            type={field.type} \r\n                                            placeholder={field.placeholder}\r\n                                            value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                            onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                          {field.errorMsg}\r\n                                        </Form.Control.Feedback>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            } else if(field.type === 'select') {\r\n                                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                    <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        <Form.Control \r\n                                            size=\"sm\"\r\n                                            required={field.required}\r\n                                            as={field.type} \r\n                                            placeholder={field.placeholder}\r\n                                            value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                            onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }>\r\n\r\n                                            {field.options.map((option, i) => {\r\n                                                return <option key={i} value={option.key}>{option.label}</option>\r\n                                            })}\r\n\r\n                                        </Form.Control>\r\n                                        <Form.Control.Feedback type=\"invalid\">\r\n                                            {field.errorMsg}\r\n                                        </Form.Control.Feedback>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            } else if(field.type === 'datepicker') {\r\n                                return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                <Col sm={9}>\r\n                                    <DatePicker className=\"form-control\" minDate={new Date()} dateFormat=\"MM/dd/yyyy\" selected={data[field.key]} onChange={date => setData(prev => ({...prev, [field.key] : (date == null ? new Date() : date)}))} required={field.required} />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {field.errorMsg}\r\n                                    </Form.Control.Feedback>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            }\r\n                        })}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleCloseAddCampaign}>\r\n                        Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                        Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        \r\n            <Modal show={showAddReward} onHide={handleCloseAddReward}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Rewards</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row>\r\n                        <Col md=\"12\">\r\n                            Action:\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <AsyncSelect cacheOptions defaultOptions loadOptions={promiseActionOptions} onChange={value => setReward(prev => ({...prev, 'action_id' : value.value}))} />\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            Reward:\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <AsyncSelect cacheOptions defaultOptions loadOptions={promiseRewardOptions} onChange={value => setReward(prev => ({...prev, 'reward_id' : value.value}))} />\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <Button onClick={addReward}>Add</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>     \r\n                        <Col md=\"12\">\r\n                            <Table responsive striped bordered hover size=\"sm\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Reward</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {showCampaigns()}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                            <Pagination size=\"sm\" className=\"float-right\">                    \r\n                                {showPagination('campaigns')}\r\n                            </Pagination>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* End Modals */}\r\n\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst UserCampaign = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const dataList = useSelector(state => state.Campaign);\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n\r\n                return <Col md={4}>\r\n                    <Card key={key}>\r\n                        <Card.Body>\r\n                            <Card.Title>{el.name}</Card.Title>\r\n                            <Card.Text>\r\n                                <Row><Col>{el.description}</Col></Row>\r\n                                <Row><Col>Expiration: {el.end_date}</Col></Row>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchData()\r\n\r\n    }, [])\r\n\r\n    const fetchData = (url = '/campaigns') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"pt-3\">\r\n                {showData()}\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminCampaign(props)\r\n\r\n    } else {\r\n\r\n        return UserCampaign(props)\r\n\r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, ButtonGroup, Col, Form, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\n\r\nconst CampaignDetail = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const campaignid = props.match.params.campaign;\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const [campaign, setCampaign] = useState({})\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = async event => {\r\n\r\n        const res = await axios.get('/campaigns/' + campaignid)\r\n\r\n        console.log(res.data.data);\r\n\r\n        setCampaign(res.data.data)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md=\"12\">{campaign.name}</Col>\r\n                <Col md=\"12\">{campaign.description}</Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default CampaignDetail;","import axios from \"axios\";\r\n\r\nconst apiRoute = '/rewards'\r\n\r\nexport const GetData = (props, url = apiRoute) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REWARD_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(url)\r\n\r\n        dispatch({\r\n            type: \"REWARD_FETCH\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"REWARD_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const AddData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REWARD_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post(apiRoute, data)\r\n\r\n        dispatch({\r\n            type: \"REWARD_ADD\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"REWARD_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REWARD_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.put(apiRoute + '/' + data.id, data)\r\n\r\n        dispatch({\r\n            type: \"REWARD_UPDATE\",\r\n            payload: res.data.data\r\n        })\r\n\r\n        return Promise.resolve();\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"REWARD_FAIL\",\r\n            payload: error.response.data\r\n        })\r\n\r\n        return Promise.reject(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REWARD_REQUEST\"\r\n        })\r\n\r\n        const res = await axios.delete(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"REWARD_DELETE\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"REWARD_FAIL\",\r\n            payload: error.response.data.message\r\n        })\r\n        \r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Badge, Button, ButtonGroup, Card, Col, Form, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport {AddData, DeleteData, EditData, GetData} from \"../actions/rewardAction\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport moment from 'moment-timezone';\r\nimport {config} from '../utils/Constants'\r\n\r\nconst AdminReward = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const dataList = useSelector(state => state.Reward);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const fields = [\r\n        {\r\n            'key': 'id',\r\n            'title': 'Name',\r\n            'type': 'hidden',\r\n            'placeholder': 'Reward ID',\r\n            'control_id': 'formActionId',\r\n            'hidden': true\r\n        },\r\n        {\r\n            'key': 'type',\r\n            'title': 'Type',\r\n            'type': 'select',\r\n            'placeholder': 'Enter action type',\r\n            'errorMsg': 'Please select type.',\r\n            'options': [\r\n                {\r\n                    'label': 'Item',\r\n                    'key': 'item'\r\n                }, \r\n                {\r\n                    'label': 'Discount',\r\n                    'key': 'discount'\r\n                },\r\n                {\r\n                    'label': 'Points',\r\n                    'key': 'points'\r\n                }\r\n            ],\r\n            'control_id': 'formActionType',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'value',\r\n            'title': 'Value',\r\n            'type': 'number',\r\n            'min': 0,\r\n            'placeholder': 'Enter reward value',\r\n            'errorMsg': 'Please provide reward value.',\r\n            'control_id': 'formValue',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'cost',\r\n            'title': 'Cost',\r\n            'type': 'number',\r\n            'min': 0,\r\n            'placeholder': 'Enter reward cost',\r\n            'errorMsg': 'Please provide reward cost.',\r\n            'control_id': 'formCost',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'name',\r\n            'title': 'Name',\r\n            'type': 'text',\r\n            'placeholder': 'Enter reward name',\r\n            'errorMsg': 'Please provide reward name.',\r\n            'control_id': 'formActionName',\r\n            'required': true\r\n        },\r\n        {\r\n            'key': 'description',\r\n            'title': 'Description',\r\n            'type': 'text',\r\n            'placeholder': 'Enter reward description',\r\n            'errorMsg': 'Please provide reward description.',\r\n            'control_id': 'formActionDescription',\r\n            'required': true\r\n        }\r\n    ];\r\n\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {\r\n\r\n        setData({\r\n            'type': 'item'\r\n        })\r\n\r\n        setShow(true);\r\n\r\n    }\r\n    const handleEditShow = (val) => {\r\n\r\n        setData(val)\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = (url = '/rewards') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n\r\n            if(data.id) {\r\n                dispatch(EditData(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n\r\n                    toast.success(\"Reward edited successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                })\r\n                .catch(error => {\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            }\r\n            else {\r\n                dispatch(AddData(props, data))\r\n                .then(() => {\r\n                    setShow(false)\r\n\r\n                    toast.success(\"Reward added successfully\", {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n        \r\n                    toast.error(error.response.data.message, {\r\n                        position: toast.POSITION.BOTTOM_RIGHT\r\n                    });\r\n\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleDelete = id => {\r\n    \r\n        dispatch(DeleteData(props, id))\r\n\r\n    }\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(dataList.data.links))\r\n        return dataList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const timezoneConvert = (time) => {\r\n        var userTz = moment.tz.guess(true);\r\n        var time = moment.tz(time, config.url.TIMEZONE);\r\n\r\n        return time.tz(userTz).format('YYYY-MM-DD hh:mm:ss A');\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.name}</td>\r\n                    <td>{el.description}</td>\r\n                    <td>{el.type}</td>\r\n                    <td>{timezoneConvert(el.created_at)}</td>\r\n                    <td>{timezoneConvert(el.updated_at)}</td>\r\n                    <td>\r\n                        <ButtonGroup size=\"sm\">\r\n                            <Button variant=\"danger\" onClick={() => {handleDelete(el.id)}}>Delete</Button>\r\n                            <Button onClick={e => handleEditShow(el)}>Edit</Button>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Button variant=\"primary\" onClick={handleShow}>\r\n                        Add Reward\r\n                    </Button>\r\n                </Col>\r\n        \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Add Reward</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            {fields.map((field, i) => {\r\n                                if(field.type === 'text') {\r\n                                    return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                        <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                        <Col sm={9}>\r\n                                            <Form.Control \r\n                                                required={field.required}\r\n                                                type={field.type} \r\n                                                placeholder={field.placeholder}\r\n                                                value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                                onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                              {field.errorMsg}\r\n                                            </Form.Control.Feedback>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                } else if(field.type === 'number' && field.key != 'cost' && data.type != 'item') {\r\n                                    return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                        <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                        <Col sm={9}>\r\n                                            <Form.Control \r\n                                                required={field.required}\r\n                                                type={field.type} \r\n                                                placeholder={field.placeholder}\r\n                                                value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                                min={field.min}\r\n                                                onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                              {field.errorMsg}\r\n                                            </Form.Control.Feedback>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                } else if(field.type === 'number' && field.key === 'cost' && data.type == 'item') {\r\n                                    return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                        <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                        <Col sm={9}>\r\n                                            <Form.Control \r\n                                                required={field.required}\r\n                                                type={field.type} \r\n                                                placeholder={field.placeholder}\r\n                                                value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                                min={field.min}\r\n                                                onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                              {field.errorMsg}\r\n                                            </Form.Control.Feedback>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                } else if(field.type === 'select') {\r\n                                    return <Form.Group hidden={field.hidden} key={i} as={Row} controlId={field.control_id}>\r\n                                        <Form.Label column sm={3}>{field.title}</Form.Label>\r\n                                        <Col sm={9}>\r\n                                            <Form.Control \r\n                                                size=\"sm\"\r\n                                                required={field.required}\r\n                                                as={field.type} \r\n                                                placeholder={field.placeholder}\r\n                                                value={!_.isUndefined(data[field.key]) ? data[field.key] : ''}\r\n                                                onChange={ (e) => setData(prev => ({...prev, [field.key] : e.target.value})) }>\r\n\r\n                                                {field.options.map((option, i) => {\r\n                                                    return <option key={i} value={option.key}>{option.label}</option>\r\n                                                })}\r\n\r\n                                            </Form.Control>\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                            {field.errorMsg}\r\n                                            </Form.Control.Feedback>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                }\r\n                            })}\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                            Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table responsive hover size=\"sm\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n                                <th>Type</th>\r\n                                <th>Created</th>\r\n                                <th>Updated</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {showData()}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Pagination size=\"sm\" className=\"float-right\">                    \r\n                        {showPagination()}\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst UserReward = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const dataList = useSelector(state => state.Reward);\r\n\r\n    const handleRedeem = async (reward_id) => {\r\n        \r\n        try {\r\n        \r\n            const res = await axios.post('redeem', {'reward_id' : reward_id})\r\n    \r\n            var result = res.data.data\r\n\r\n            toast.success(\"Redemption successful\", {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n            \r\n        } catch (error) {\r\n        \r\n            toast.error(error.response.data.message, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(dataList.data.data)) {\r\n\r\n            return dataList.data.data.map((el, key) => {\r\n\r\n                return <Col md={4} key={key} className=\"mb-3 reward-content\">\r\n                    <Card style={{ height: '100%' }}>\r\n                        <Card.Body>\r\n                            <Card.Title>{el.name}</Card.Title>\r\n                            <Card.Text>{el.description}</Card.Text>\r\n                        </Card.Body>\r\n                        {el.type != 'points' ? <Button variant=\"dark\" onClick={() => handleRedeem(el.id)}>Redeem ({el.cost} PTS)</Button> : ''}\r\n                    </Card>\r\n                </Col>\r\n            })\r\n\r\n        }\r\n\r\n        if(dataList.loading) {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(dataList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"6\" className=\"text-center\">{dataList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"6\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(dataList.data.links))\r\n        return dataList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url)} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const fetchData = (url = '/rewards') => {\r\n\r\n        dispatch(GetData(props, url));\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchData()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"pt-3\">\r\n                <Card className=\"reward-container ml-5 mr-5\">\r\n                    <Card.Body className=\"row\">\r\n                        {showData()}\r\n                    </Card.Body>\r\n                    <Card.Body className=\"row\">\r\n                        <Col md={12}>\r\n                            <Pagination size=\"sm\" className=\"float-right\">                    \r\n                                {showPagination()}\r\n                            </Pagination>\r\n                        </Col>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Row>\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminReward(props)\r\n\r\n    } else {\r\n\r\n        return UserReward(props)\r\n\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nconst apiRoute = '/transactions'\r\n\r\nexport const GetData = (props, url = apiRoute, params = {}) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REQUEST\"\r\n        })\r\n\r\n        const res = await axios.get(url, {params: params})\r\n\r\n        dispatch({\r\n            type: \"FETCH_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"FAIL\",\r\n            payload: error.response.data.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const AddData = (props, data) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REQUEST\"\r\n        })\r\n\r\n        const res = await axios.post(apiRoute, data)\r\n\r\n        dispatch({\r\n            type: \"ADD_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const EditData = (props, data) => async dispatch => {\r\n\r\n    dispatch({\r\n        type: \"REQUEST\"\r\n    })\r\n\r\n    await axios.put(apiRoute + '/' + data.id, data)\r\n    .then((res) => {\r\n\r\n        dispatch({\r\n            type: \"UPDATE_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n\r\n    })\r\n    .catch((error) => {\r\n        if(error.response) {\r\n            dispatch({\r\n                type: \"FAIL\",\r\n                payload: error.response.data.message\r\n            })\r\n        }\r\n    })\r\n    \r\n}\r\n\r\nexport const DeleteData = (props, id) => async dispatch => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: \"REQUEST\"\r\n        })\r\n\r\n        const res = await axios.delete(apiRoute + '/' + id)\r\n\r\n        dispatch({\r\n            type: \"DELETE_SUCCESS\",\r\n            payload: res.data.data\r\n        })\r\n        \r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: \"FAIL\",\r\n            payload: error.response.data.data\r\n        })\r\n        \r\n    }\r\n}","import React, {useState, useRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Accordion, Badge, Button, ButtonGroup, Col, Form, Modal, Pagination, Row, Table } from 'react-bootstrap';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport {AddData, DeleteData, EditData, GetData} from \"../actions/transactionAction\";\r\nimport AsyncSelect from 'react-select/async';\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport 'bootstrap-daterangepicker/daterangepicker.css';\r\nimport moment from \"moment\";\r\n\r\nconst AdminTransaction = (props) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const transactionList = useSelector(state => state.Transaction);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [reward, setReward] = useState({});\r\n    const [filters, setFilters] = useState({\r\n        type: 'all'\r\n    });\r\n    const fields = [];\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [dialogShow, setDialogShow] = useState(false);\r\n    const [statusUpdateData, setStatusUpdateData] = useState({});\r\n  \r\n    const handleDialogClose = () => {\r\n        setDialogShow(false);\r\n        setStatusUpdateData({});\r\n    }\r\n    \r\n    const handleDialogConfirm = async () => {\r\n        await axios.put('transactions/' + statusUpdateData.id, statusUpdateData)\r\n        .then((res) => {\r\n    \r\n            dispatch({\r\n                type: \"UPDATE_SUCCESS\",\r\n                payload: res.data.data\r\n            })\r\n\r\n            handleDialogClose()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response) {\r\n                dispatch({\r\n                    type: \"FAIL\",\r\n                    payload: error.response.data.message\r\n                })\r\n            }\r\n        })\r\n    }\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (packageData) => {\r\n\r\n        setData({})\r\n\r\n        setShow(true);\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = (url = '/transactions', params = filters) => {\r\n\r\n        dispatch(GetData(props, url, params));\r\n\r\n    }\r\n\r\n    const addPackage = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const form = e.currentTarget;\r\n\r\n        setValidated(true);\r\n\r\n        if(form.checkValidity() !== false) {\r\n\r\n            if(data.id) dispatch(EditData(props, data))\r\n            else dispatch(AddData(props, data))\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const fetchRewards = async () => {\r\n\r\n        const res = await axios.get('/rewards')\r\n\r\n        var results = res.data.data\r\n\r\n        var options = [];\r\n\r\n        for (let a = 0; a < results.data.length; a++) {\r\n            const result = results.data[a]\r\n            \r\n            options = [...options, {value: result.id, label: result.name}]\r\n        }\r\n        \r\n        return options\r\n    }\r\n\r\n    const promiseRewardOptions = inputValue => new Promise(resolve => {\r\n\r\n        setTimeout(() => {\r\n            resolve(fetchRewards(inputValue));\r\n        }, 1000);\r\n\r\n    });\r\n\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(transactionList.data.links))\r\n        return transactionList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url, {})} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const handleTransactionStatusChange = (id, status) => {\r\n        setDialogShow(true);\r\n        setStatusUpdateData({\r\n            'id' : id,\r\n            'status' : status\r\n        })\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(transactionList.data.data)) {\r\n\r\n            return transactionList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.transaction_id}</td>\r\n                    <td>{el.type}</td>\r\n                    <td>{el.reference_no}</td>\r\n                    <td>{el.balance}</td>\r\n                    <td>{el.cost}</td>\r\n                    <td>{el.customer.name}</td>\r\n                    <td>{el.salesperson ? el.salesperson.name : ''}</td>\r\n                    <td>{el.created_at}</td>\r\n                    <td>{el.updated_at}</td>\r\n                    <td>\r\n                        <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                            <Form.Row>\r\n                                <Form.Control as=\"select\" size=\"sm\" custom value={el.status} onChange={(e) => handleTransactionStatusChange(el.id, e.target.value, el.status)}>\r\n                                    <option value=\"pending\">Pending</option>\r\n                                    <option value=\"cancelled\">Cancelled</option>\r\n                                    <option value=\"confirmed\">Confirmed</option>\r\n                                    <option value=\"completed\">Completed</option>\r\n                                </Form.Control>\r\n                            </Form.Row>\r\n                        </Form.Group>\r\n                    </td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(transactionList.loading) {\r\n\r\n            return <tr><td colSpan=\"10\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(transactionList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"10\" className=\"text-center\">{transactionList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"10\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const handleTypeChange = (val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, type : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    const handleFilterInputChange = (key, val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, [key] : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    const handleDateRangeChange = (start, end, label) => {\r\n        let tmpFilter = filters\r\n\r\n        start = start.format('YYYY-MM-DD');\r\n        end = end.format('YYYY-MM-DD');\r\n        tmpFilter = {...tmpFilter, 'start_date' : start, 'end_date' : end};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>Type</Form.Label>\r\n                            <Col lg={3}>\r\n                                <Form.Control as=\"select\" size=\"sm\" custom defaultValue={!_.isEmpty(filters) && !_.isEmpty(filters.type) ? filters.type : 'all'} onChange={(e) => handleTypeChange(e.target.value)}>\r\n                                <option value=\"all\">All</option>\r\n                                <option value=\"rewards\">Rewards</option>\r\n                                <option value=\"redeems\">Redeems</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Transaction ID\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. abcd1234\" onChange={(e) => handleFilterInputChange('transaction_id', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Reference No.\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. abcd1234\" onChange={(e) => handleFilterInputChange('reference_no', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Customer\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. John Doe\" onChange={(e) => handleFilterInputChange('customer', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Salesperson\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. Jane Doe\" onChange={(e) => handleFilterInputChange('salesperson', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Date\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                                <DateRangePicker\r\n                                initialSettings={{ startDate: moment(), endDate: moment() }}\r\n                                onCallback={handleDateRangeChange}\r\n                                >\r\n                                <input type=\"text\" className=\"form-control\" />\r\n                                </DateRangePicker>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Modal show={dialogShow} onHide={handleDialogClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Are you sure?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>You want to mark this as <b>{!_.isEmpty(statusUpdateData) ? statusUpdateData.status : '' }</b>?</p>\r\n                        {!_.isEmpty(statusUpdateData) && statusUpdateData.status == 'confirmed' ? <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Reference No.</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter reference no.\" onChange={ (e) => setStatusUpdateData(prev => ({...prev, 'reference_no' : e.target.value})) } />\r\n                        </Form.Group> : '' }\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleDialogClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={(e) => handleDialogConfirm()}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Col md={12}>\r\n                    <Table responsive hover size=\"sm\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>Transaction ID</th>\r\n                                <th>Type</th>\r\n                                <th>Reference No.</th>\r\n                                <th>Running Balance</th>\r\n                                <th>Cost</th>\r\n                                <th>Customer</th>\r\n                                <th>Salesperson</th>\r\n                                <th>Created</th>\r\n                                <th>Updated</th>\r\n                                <th style={{width: \"10%\"}}>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {showData()}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Pagination size=\"sm\" className=\"float-right\">                    \r\n                        {showPagination()}\r\n                    </Pagination>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst CustomerTransaction = (props) => {\r\n    const dispatch = useDispatch();\r\n    const transactionList = useSelector(state => state.Transaction);\r\n    const [validated, setValidated] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [reward, setReward] = useState({});\r\n    const [filters, setFilters] = useState({\r\n        type: 'all'\r\n    });\r\n    const [dialogShow, setDialogShow] = useState(false);\r\n    const [statusUpdateData, setStatusUpdateData] = useState({});\r\n  \r\n    const handleDialogClose = () => {\r\n        setDialogShow(false);\r\n        setStatusUpdateData({});\r\n    }\r\n    \r\n    const handleDialogConfirm = async () => {\r\n        await axios.put('transactions/' + statusUpdateData.id, statusUpdateData)\r\n        .then((res) => {\r\n    \r\n            dispatch({\r\n                type: \"UPDATE_SUCCESS\",\r\n                payload: res.data.data\r\n            })\r\n\r\n            handleDialogClose()\r\n        })\r\n        .catch((error) => {\r\n            if(error.response) {\r\n                dispatch({\r\n                    type: \"FAIL\",\r\n                    payload: error.response.data.message\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    const fetchData = (url = '/transactions', params = filters) => {\r\n\r\n        dispatch(GetData(props, url, params));\r\n\r\n    }\r\n\r\n    const showPagination = () => {\r\n        if(!_.isEmpty(transactionList.data.links))\r\n        return transactionList.data.links.map((page, i) => {\r\n            return <Pagination.Item key={i} active={page.active} onClick={() => fetchData(page.url, {})} disabled={!page.url}><span dangerouslySetInnerHTML={{\r\n                __html: page.label\r\n            }}></span></Pagination.Item>\r\n        })\r\n    }\r\n\r\n    const showData = () => {\r\n\r\n        if(!_.isEmpty(transactionList.data.data)) {\r\n\r\n            return transactionList.data.data.map((el, key) => {\r\n                return <tr key={key}>\r\n                    <td>{el.transaction_id}</td>\r\n                    <td>{el.type}</td>\r\n                    <td>{el.reference_no}</td>\r\n                    <td>{el.balance}</td>\r\n                    <td>{el.cost}</td>\r\n                    <td>{el.customer.name}</td>\r\n                    <td>{el.salesperson ? el.salesperson.name : ''}</td>\r\n                    <td>{el.created_at}</td>\r\n                    <td>{el.updated_at}</td>\r\n                    <td><Badge variant=\"info\">{el.status}</Badge></td>\r\n                </tr>\r\n            })\r\n\r\n        }\r\n\r\n        if(transactionList.loading) {\r\n\r\n            return <tr><td colSpan=\"10\" className=\"text-center\">Loading...</td></tr>\r\n\r\n        }\r\n\r\n        if(transactionList.errorMsg !== \"\") {\r\n\r\n            return <tr><td colSpan=\"10\" className=\"text-center\">{transactionList.errorMsg}</td></tr>\r\n\r\n        }\r\n\r\n        return <tr><td colSpan=\"10\" className=\"text-center\">No data available</td></tr>\r\n\r\n    }\r\n\r\n    const handleTypeChange = (val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, type : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    const handleFilterInputChange = (key, val) => {\r\n        let tmpFilter = filters\r\n\r\n        tmpFilter = {...tmpFilter, [key] : val};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    const handleDateRangeChange = (start, end, label) => {\r\n        let tmpFilter = filters\r\n\r\n        start = start.format('YYYY-MM-DD');\r\n        end = end.format('YYYY-MM-DD');\r\n        tmpFilter = {...tmpFilter, 'start_date' : start, 'end_date' : end};\r\n        setFilters(tmpFilter)\r\n\r\n        fetchData('/transactions', tmpFilter)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>Type</Form.Label>\r\n                            <Col lg={3}>\r\n                                <Form.Control as=\"select\" size=\"sm\" custom defaultValue={!_.isEmpty(filters) && !_.isEmpty(filters.type) ? filters.type : 'all'} onChange={(e) => handleTypeChange(e.target.value)}>\r\n                                <option value=\"all\">All</option>\r\n                                <option value=\"rewards\">Rewards</option>\r\n                                <option value=\"redeems\">Redeems</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Transaction ID\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. abcd1234\" onChange={(e) => handleFilterInputChange('transaction_id', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Reference No.\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. abcd1234\" onChange={(e) => handleFilterInputChange('reference_no', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Salesperson\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                            <Form.Control size=\"sm\" type=\"text\" placeholder=\"e.g. Jane Doe\" onChange={(e) => handleFilterInputChange('salesperson', e.target.value)} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column=\"sm\" lg={1}>\r\n                            Date\r\n                            </Form.Label>\r\n                            <Col lg={3}>\r\n                                <DateRangePicker\r\n                                initialSettings={{ startDate: moment(), endDate: moment() }}\r\n                                onCallback={handleDateRangeChange}\r\n                                >\r\n                                <input type=\"text\" className=\"form-control\" />\r\n                                </DateRangePicker>\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Modal show={dialogShow} onHide={handleDialogClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Are you sure?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>You want to mark this as <b>{!_.isEmpty(statusUpdateData) ? statusUpdateData.status : '' }</b>?</p>\r\n                        {!_.isEmpty(statusUpdateData) && statusUpdateData.status == 'confirmed' ? <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Reference No.</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter reference no.\" onChange={ (e) => setStatusUpdateData(prev => ({...prev, 'reference_no' : e.target.value})) } />\r\n                        </Form.Group> : '' }\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleDialogClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={(e) => handleDialogConfirm()}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Table responsive striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Transaction ID</th>\r\n                            <th>Type</th>\r\n                            <th>Reference No.</th>\r\n                            <th>Running Balance</th>\r\n                            <th>Cost</th>\r\n                            <th>Customer</th>\r\n                            <th>Salesperson</th>\r\n                            <th>Created</th>\r\n                            <th>Updated</th>\r\n                            <th style={{width: \"10%\"}}>Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {showData()}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Pagination size=\"sm\" className=\"float-right\">                    \r\n                    {showPagination()}\r\n                </Pagination>\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(auth.user.type === 1 || auth.user.type === 2) {\r\n\r\n        return AdminTransaction(props)\r\n\r\n    } else {\r\n\r\n        return CustomerTransaction(props)\r\n\r\n    }\r\n}","import React, {useState, useRef} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { Button, Container, Nav, Navbar, NavDropdown, Overlay, Popover } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport '../css/notifications.css'\r\nimport NotifyMe from 'react-notification-timeline';\r\nimport moment from 'moment-timezone';\r\nimport { config } from '../utils/Constants';\r\nimport { Bell, BellOff, BookOpen, AlertTriangle } from 'react-feather';\r\n\r\nconst NotificationMenu = (props) => {\r\n\r\n    // State variabls\r\n    const [showCount, setShowCount] = useState(false);\r\n    const [messageCount, setMessageCount] = useState(0);\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n    const [raedIndex, setReadIndex] = useState(0);\r\n\r\n    // Useref for the overlay\r\n    const ref = useRef(null);\r\n\r\n    const [notifications, setNotifications] = useState({\r\n        loading: false,\r\n        data: []\r\n    })\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    React.useEffect(() => {\r\n        fetchNotification()\r\n        initEcho()\r\n    }, [])\r\n\r\n    // Start Laravel Echo\r\n\r\n    const initEcho = () => {\r\n        window.Echo.private('App.Models.User.' + auth.user.id)\r\n        .notification((notification) => {\r\n            let newNotification = {\r\n                'data' : {\r\n                    'data': notification.data,\r\n                    'title': notification.title\r\n                },\r\n                'created_at': moment()\r\n            }\r\n\r\n            setNotifications(prev => ({...prev, data: [...prev.data, newNotification]}))\r\n        });\r\n    }\r\n\r\n    // End Laravel Echo\r\n\r\n    const fetchNotification = async () => {\r\n        const res = await axios.get('notifications');\r\n\r\n        let data = res.data.data;\r\n\r\n        setNotifications(prev => ({...prev, data: data, loading: false}));\r\n\r\n        setMessageCount(data.filter((notification) => {return notification.read_at == null}).length);\r\n        setShowCount(data.filter((notification) => {return notification.read_at == null}).length);\r\n    }\r\n\r\n    const hide = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    // Handle the click on the notification bell\r\n    const handleClick = (event) => {\r\n        setShow(!show);\r\n        setTarget(event.target);\r\n    }\r\n\r\n    // Calculate the day diff\r\n    const getDayDiff = timestamp => {\r\n        let a = moment();\r\n        let b = moment(timestamp);\r\n        let diff = a.diff(b, 'year');\r\n        if (diff === 0) {\r\n            diff = a.diff(b, 'month');\r\n            if (diff === 0) {\r\n                diff = a.diff(b, 'days');\r\n                if (diff === 0) {\r\n                    diff = a.diff(b, 'hour');\r\n                    if (diff === 0) {\r\n                        diff = a.diff(b, 'minute');\r\n                        if (diff === 0) {\r\n                            diff = a.diff(b, 'second');\r\n                            return `${diff} second(s) ago`;\r\n                        } else {\r\n                            return `${diff} minute(s) ago`;\r\n                        }\r\n                    } else {\r\n                        return `${diff} hour(s) ago`;\r\n                    }\r\n                } else {\r\n                    return `${diff} days(s) ago`;\r\n                }\r\n            } else {\r\n                return `${diff} month(s) ago`;\r\n            }\r\n        } else {\r\n            return `${diff} year(s) ago`;\r\n        }\r\n    };\r\n\r\n    const getWhen = timestamp => {\r\n        let when = `${moment(timestamp).format('L')} ${moment(timestamp).format('LTS')}`;\r\n        return when;\r\n    }\r\n    \r\n    // Get the notification message\r\n    const getContent = message => {\r\n        if (message.indexOf('\\n') >= 0) {\r\n            let splitted = message.split('\\n');\r\n            let ret = '<ul>';\r\n\r\n            for (let i = 0; i <= splitted.length - 1; i++) {\r\n                if (splitted[i] !== '') {\r\n                    ret = ret + '<li>' + splitted[i] + '</li>';\r\n                }\r\n            }\r\n\r\n            ret = ret + '</ul>';\r\n            return {\r\n                __html: ret\r\n            };\r\n        }\r\n        return {\r\n            __html: `<ul><li>${message}</li></ul>`\r\n        };\r\n    };\r\n\r\n    const markAsRead = async (event) => {\r\n        const res = await axios.post('notifications/read');\r\n\r\n        setNotifications(prev => ({...prev, data: notifications.data.map((el, key) => {\r\n            return {...el, read_at: moment().format()}\r\n        })}));\r\n\r\n        setShowCount(false);\r\n        setMessageCount(0);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"notification-container\">\r\n            <div className={showCount ? 'notification notify show-count' : 'notification notify'}\r\n                data-count={messageCount}\r\n                onClick={event => handleClick(event)}>\r\n                <Bell color=\"yellow\" size=\"25\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div ref={ref}>\r\n            <Overlay\r\n                show={show}\r\n                target={target}\r\n                placement=\"bottom\"\r\n                container={ref.current}\r\n                containerPadding={20}\r\n                rootClose={true}\r\n                onHide={hide}\r\n            >\r\n                <Popover id=\"popover-contained\">\r\n                    <Popover.Title as=\"h3\">Notifications</Popover.Title>\r\n                    <Popover.Content style={{ padding: '3px 3px' }}>\r\n                        {Boolean(showCount) && <div>\r\n                            <Button variant=\"link\" onClick={event => markAsRead(event)}>\r\n                                <BookOpen size={24} />\r\n                                Mark all as read\r\n                            </Button>\r\n                        </div>\r\n                        }\r\n                        <ul className=\"notification-info-panel\">\r\n                            {\r\n                                notifications.data.length > 0 ?\r\n                                \r\n                                notifications.data.map((message, index) =>\r\n                                    <li\r\n                                        className={!message['read_at'] ? 'notification-message unread' : 'notification-message'}\r\n                                        key={index}>\r\n                                        <div className=\"timestamp\">\r\n                                            <span>{getDayDiff(parseInt(moment.parseZone(message['created_at']).format('x')))}</span>\r\n                                            {/* <span>{' ('}{getWhen(parseInt(moment.parseZone(message['created_at']).format('x')))}{')'}</span> */}\r\n                                        </div>\r\n                                        <div className=\"content\" dangerouslySetInnerHTML={getContent(message['data']['title'])}></div>\r\n                                    </li>\r\n                                ) :\r\n                                <>\r\n                                    <AlertTriangle color='#000000' size={32} />\r\n                                    <h5 className=\"nodata\">No Notifications found!</h5>\r\n                                </>\r\n                            }\r\n                        </ul>\r\n                    </Popover.Content>\r\n                </Popover>\r\n            </Overlay>\r\n        </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default NotificationMenu;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport _ from 'lodash';\r\nimport { config } from '../utils/Constants';\r\nimport NotificationMenu from './NotificationMenu';\r\n\r\nexport const SuperAdminHeader = (props) => {\r\n\r\n    return (\r\n        <Navbar collapseOnSelect className=\"sticky-top shadow-sm\" expand=\"*\" bg=\"light\" variant=\"light\">\r\n            <Navbar.Brand className=\"col-sm-3 col-md-2 mr-0 px-3\" href=\"#home\">\r\n            <img\r\n                alt=\"\"\r\n                src={config.url.BASE_URL+'/icons/logo.png'}\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n            />\r\n            </Navbar.Brand>\r\n\r\n            <button className=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <ul className=\"navbar-nav px-3\">\r\n                <li className=\"nav-item text-nowrap notification-section\">\r\n                    <NotificationMenu/>\r\n                </li>\r\n                <li className=\"nav-item text-nowrap\">\r\n                    <Link className=\"nav-link logout-btn\" onClick={ e => props.onLogout() }>LOG OUT</Link>\r\n                </li>\r\n            </ul>\r\n        </Navbar>\r\n    );\r\n\r\n}\r\n\r\nexport const SuperAdminSidebar = (props) => {\r\n\r\n    return (\r\n        \r\n        <Navbar.Collapse id=\"sidebarMenu\" className=\"col-md-4 col-lg-3 d-md-block bg-light sidebar collapse shadow\">\r\n            <div className=\"sidebar-sticky pt-3\">\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/\">\r\n                            <img\r\n                                alt=\"Dashboard\"\r\n                                src={config.url.BASE_URL+'/icons/dashboard-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Dashboard <span className=\"sr-only\">(current)</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/actions\">\r\n                            <img\r\n                                alt=\"Dashboard\"\r\n                                src={config.url.BASE_URL+'/icons/actions-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Actions\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/packages\">\r\n                            <img\r\n                                alt=\"Dashboard\"\r\n                                src={config.url.BASE_URL+'/icons/package-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Packages\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/rewards\">\r\n                            <img\r\n                                alt=\"Rewards\"\r\n                                src={config.url.BASE_URL+'/icons/reward-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Rewards\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/campaigns\">\r\n                            <img\r\n                                alt=\"Campaigns\"\r\n                                src={config.url.BASE_URL+'/icons/campaign-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Campaigns\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/users\">\r\n                            <img\r\n                                alt=\"Profile\"\r\n                                src={config.url.BASE_URL+'/icons/profile-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Users\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/transactions\">\r\n                            <img\r\n                                alt=\"Transactions\"\r\n                                src={config.url.BASE_URL+'/icons/transaction-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Transactions\r\n                        </Link>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/transactions\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-bar-chart-2\"><line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line><line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line></svg>\r\n                        Settings\r\n                        </Link>\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n        </Navbar.Collapse>\r\n\r\n    );\r\n\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport _ from 'lodash';\r\nimport { config } from '../utils/Constants';\r\nimport NotificationMenu from './NotificationMenu';\r\n\r\nexport const AdminHeader = (props) => {\r\n\r\n    return (\r\n        <Navbar collapseOnSelect className=\"sticky-top shadow-sm\" expand=\"*\" bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand className=\"col-sm-3 col-md-2 mr-0 px-3\" href=\"#home\">\r\n            <img\r\n                alt=\"\"\r\n                src={config.url.BASE_URL+'/icons/logo.png'}\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n            />\r\n            </Navbar.Brand>\r\n\r\n            <button className=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <ul className=\"navbar-nav px-3\">\r\n                <li className=\"nav-item text-nowrap notification-section\">\r\n                    <NotificationMenu/>\r\n                </li>\r\n                <li className=\"nav-item text-nowrap\">\r\n                    <Link className=\"nav-link logout-btn\" onClick={ e => props.onLogout() }>Logout</Link>\r\n                </li>\r\n            </ul>\r\n        </Navbar>\r\n    );\r\n\r\n}\r\n\r\nexport const AdminSidebar = (props) => {\r\n\r\n    return (\r\n        \r\n        <Navbar.Collapse id=\"sidebarMenu\" className=\"col-md-4 col-lg-3 d-md-block bg-light sidebar collapse shadow\">\r\n            <div className=\"sidebar-sticky pt-3\">\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/\">\r\n                            <img\r\n                                alt=\"Dashboard\"\r\n                                src={config.url.BASE_URL+'/icons/dashboard-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Dashboard <span className=\"sr-only\">(current)</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/actions\">\r\n                            <img\r\n                                alt=\"Dashboard\"\r\n                                src={config.url.BASE_URL+'/icons/actions-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Actions\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/packages\">\r\n                            <img\r\n                                alt=\"Dashboard\"\r\n                                src={config.url.BASE_URL+'/icons/package-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Packages\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/rewards\">\r\n                            <img\r\n                                alt=\"Rewards\"\r\n                                src={config.url.BASE_URL+'/icons/reward-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Rewards\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/campaigns\">\r\n                            <img\r\n                                alt=\"Campaigns\"\r\n                                src={config.url.BASE_URL+'/icons/campaign-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Campaigns\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/users\">\r\n                            <img\r\n                                alt=\"Profile\"\r\n                                src={config.url.BASE_URL+'/icons/profile-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Users\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/transactions\">\r\n                            <img\r\n                                alt=\"Transactions\"\r\n                                src={config.url.BASE_URL+'/icons/transaction-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Transactions\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/profile\">\r\n                            <img\r\n                                alt=\"Profile\"\r\n                                src={config.url.BASE_URL+'/icons/profile-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Profile\r\n                        </Link>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/transactions\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-bar-chart-2\"><line x1=\"18\" y1=\"20\" x2=\"18\" y2=\"10\"></line><line x1=\"12\" y1=\"20\" x2=\"12\" y2=\"4\"></line><line x1=\"6\" y1=\"20\" x2=\"6\" y2=\"14\"></line></svg>\r\n                        Settings\r\n                        </Link>\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n        </Navbar.Collapse>\r\n\r\n    );\r\n\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport _ from 'lodash';\r\nimport '../css/notifications.css'\r\nimport { config } from '../utils/Constants';\r\nimport NotificationMenu from './NotificationMenu';\r\n\r\nexport const CustomerHeader = (props) => {\r\n\r\n    return (\r\n        <Navbar collapseOnSelect className=\"sticky-top shadow-sm\" expand=\"*\" bg=\"light\" variant=\"light\">\r\n            <Navbar.Brand className=\"col-sm-3 col-md-2 mr-0 px-3\" href=\"#home\">\r\n            <img\r\n                alt=\"\"\r\n                src={config.url.BASE_URL+'/icons/logo.png'}\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n            />\r\n            </Navbar.Brand>\r\n\r\n            <button className=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <ul className=\"navbar-nav px-3\">\r\n                <li className=\"nav-item text-nowrap notification-section\">\r\n                    <NotificationMenu/>\r\n                </li>\r\n                <li className=\"nav-item text-nowrap ml-3\">\r\n                    <Link className=\"nav-link logout-btn\" onClick={ e => props.onLogout() }>Logout</Link>\r\n                </li>\r\n            </ul>\r\n        </Navbar>\r\n    );\r\n\r\n}\r\n\r\nexport const CustomerSidebar = (props) => {\r\n\r\n    return (\r\n        \r\n        <Navbar.Collapse id=\"sidebarMenu\" className=\"col-md-4 col-lg-3 d-md-block bg-light sidebar collapse shadow\">\r\n            <div className=\"sidebar-sticky pt-3\">\r\n                <ul className=\"nav flex-column\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/\">\r\n                            <img\r\n                                alt=\"Dashboard\"\r\n                                src={config.url.BASE_URL+'/icons/dashboard-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Dashboard <span className=\"sr-only\">(current)</span>\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/rewards\">\r\n                            <img\r\n                                alt=\"Rewards\"\r\n                                src={config.url.BASE_URL+'/icons/reward-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Rewards\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/campaigns\">\r\n                            <img\r\n                                alt=\"Campaigns\"\r\n                                src={config.url.BASE_URL+'/icons/campaign-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Campaigns\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/transactions\">\r\n                            <img\r\n                                alt=\"Transactions\"\r\n                                src={config.url.BASE_URL+'/icons/transaction-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Transactions\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/profile\">\r\n                            <img\r\n                                alt=\"Profile\"\r\n                                src={config.url.BASE_URL+'/icons/profile-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Profile\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/settings\">\r\n                            <img\r\n                                alt=\"Dashboard\"\r\n                                src={config.url.BASE_URL+'/icons/settings-icon.png'}\r\n                                width=\"26\"\r\n                                className=\"d-inline-block align-top\"\r\n                            />\r\n                            Settings\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </Navbar.Collapse>\r\n\r\n    );\r\n\r\n}\r\n","import React from \"react\";\r\nimport { Link, Route, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport { Logout } from \"../actions/userAction\";\r\nimport { config } from '../utils/Constants';\r\nimport Pusher from \"pusher-js\"\r\nimport Echo from 'laravel-echo';\r\nimport {SuperAdminHeader, SuperAdminSidebar} from \"../components/SuperAdminLayout\"\r\nimport {AdminHeader, AdminSidebar} from \"../components/AdminLayout\"\r\nimport {CustomerHeader, CustomerSidebar} from \"../components/CustomerLayout\"\r\nimport '../css/style.css'\r\nimport moment from 'moment-timezone';\r\nmoment.tz.setDefault(moment.tz.guess(true));\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    if(!_.isEmpty(auth.user)){\r\n        axios.defaults.headers['Authorization'] = \"Bearer \" + auth.user.token;\r\n\r\n        // axios.defaults.headers['X-Socket-Id'] = \"Bearer \" + auth.user.token;\r\n\r\n        const initEchoB = () => { // own websockets\r\n\r\n            window.Echo = new Echo({\r\n                broadcaster: 'pusher',\r\n                key: 'FRPUSHERKEY',\r\n                wsHost: config.url.BROADCAST_URL,\r\n                wsPort: 6001,\r\n                disableStats: true,\r\n                forceTLS: false,\r\n                authorizer: (channel, options) => {\r\n                    return {\r\n                        authorize: (socketId, callback) => {\r\n    \r\n                            axios.post('/broadcasting/auth', {\r\n                                socket_id: socketId,\r\n                                channel_name: channel.name\r\n                            })\r\n                            .then(response => {\r\n                                axios.defaults.headers['X-Socket-ID'] = socketId\r\n                                callback(false, response.data);\r\n                            })\r\n                            .catch(error => {\r\n                                callback(true, error);\r\n                            });\r\n                        }\r\n                    };\r\n                },\r\n            });\r\n            \r\n            window.Echo.private(`notification`)\r\n            .listen('UserRegistered', (e) => {\r\n                console.log('channel', e);\r\n            });\r\n        }\r\n\r\n        const initEcho = () => {\r\n\r\n            window.Echo = new Echo({\r\n                broadcaster: 'pusher',\r\n                key: '658ad8bb2f982c7fa645',\r\n                cluster: 'ap1',\r\n                wsHost: config.url.BROADCAST_URL,\r\n                wsPort: 6001,\r\n                forceTLS: true,\r\n                authorizer: (channel, options) => {\r\n                    return {\r\n                        authorize: (socketId, callback) => {\r\n    \r\n                            axios.post('/broadcasting/auth', {\r\n                                socket_id: socketId,\r\n                                channel_name: channel.name\r\n                            })\r\n                            .then(response => {\r\n                                axios.defaults.headers['X-Socket-ID'] = socketId\r\n                                callback(false, response.data);\r\n                            })\r\n                            .catch(error => {\r\n                                callback(true, error);\r\n                            });\r\n                        }\r\n                    };\r\n                },\r\n                // wsHost: config.url.BROADCAST_URL,\r\n                // wsPort: 6001,\r\n                //authEndpoint is your apiUrl + /broadcasting/auth\r\n                // authEndpoint: config.url.API_URL + '/broadcasting/auth', \r\n                // As I'm using JWT tokens, I need to manually set up the headers.\r\n                auth: {\r\n                  headers: {\r\n                    Authorization: `Bearer ${auth.user.token}`,\r\n                    Accept: 'application/json',\r\n                  },\r\n                },\r\n            });\r\n            \r\n            window.Echo.private(`notification`)\r\n            .listen('UserRegistered', (e) => {\r\n                console.log('channel', e);\r\n            });\r\n        }\r\n\r\n        initEcho();\r\n    }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render = { props => {\r\n\r\n                if(!_.isEmpty(auth.user)) {\r\n\r\n                    const onLogout = (e) => {\r\n                        \r\n                        dispatch(Logout(props));\r\n                \r\n                        props.history.push(\"/login\");\r\n                    }\r\n\r\n                    if(_.indexOf(rest.allowed, auth.user.type) == -1) {\r\n    \r\n                        return (\r\n    \r\n                            <>Not Allowed</>\r\n                            \r\n                        )\r\n    \r\n                    }\r\n\r\n                    if(auth.user.type == 1) {\r\n\r\n                        return (\r\n    \r\n                            <div className=\"superadmin-page\">\r\n                                <SuperAdminHeader onLogout={onLogout}/>\r\n                                <Container fluid>\r\n                                    <div className=\"row\">\r\n                                        <SuperAdminSidebar/>\r\n                                        <main role=\"main\" className=\"col-md-8 col-lg-9 ml-sm-auto px-md-4\">\r\n                                            <Component { ...props }/>\r\n                                        </main>\r\n                                    </div>\r\n                                </Container>\r\n                            </div>\r\n                            \r\n                        )\r\n\r\n                    } else if(auth.user.type == 2) {\r\n\r\n                        return (\r\n    \r\n                            <div className=\"admin-page\">\r\n                                <AdminHeader onLogout={onLogout}/>\r\n                                <Container fluid>\r\n                                    <div className=\"row\">\r\n                                        <AdminSidebar/>\r\n                                        <main role=\"main\" className=\"col-md-8 col-lg-9 ml-sm-auto px-md-4\">\r\n                                            <Component { ...props }/>\r\n                                        </main>\r\n                                    </div>\r\n                                </Container>\r\n                            </div>\r\n                            \r\n                        )\r\n\r\n                    } else {\r\n\r\n                        return (\r\n                            <div className=\"customer-page\">\r\n                                <CustomerHeader onLogout={onLogout}/>\r\n                                <Container fluid>\r\n                                    <div className=\"row\">\r\n                                        <CustomerSidebar userid={auth.user.id}/>\r\n                                        <main role=\"main\" className=\"col-md-8 col-lg-9 ml-sm-auto px-md-4\">\r\n                                            <Component { ...props }/>\r\n                                        </main>\r\n                                    </div>\r\n                                </Container>\r\n                            </div>\r\n                        )\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: \"/login\",\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }\r\n                    } />\r\n\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nexport const ProtectedLogin = ({ component: Component, ...rest }) => {\r\n    \r\n    const auth = useSelector(state => state.Auth);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render = { props => {\r\n                if(_.isEmpty(auth.user)) {\r\n\r\n                    return <div className=\"login-page\">\r\n                        <span className=\"top-shape\"></span>\r\n                        <span className=\"bottom-shape\"></span>\r\n                        <Component { ...props }/>\r\n                    </div>\r\n\r\n                } else {\r\n\r\n                    return <Redirect to={\r\n                        {\r\n                            pathname: \"/\",\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                        }\r\n                    } />\r\n\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};","import {NavLink, Redirect, Route, Switch} from \"react-router-dom\";\nimport Dashboard from './containers/Dashboard';\nimport Login from './containers/Login';\nimport ProductList from './containers/ProductList';\nimport Product from './containers/Product';\nimport User from './containers/User';\nimport UserProfile from './containers/UserProfile';\nimport MyProfile from './containers/MyProfile';\nimport Setting from './containers/Setting';\nimport Package from './containers/Package';\nimport Action from './containers/Action';\nimport Campaign from './containers/Campaign';\nimport CampaignDetail from './containers/CampaignDetail';\nimport Reward from './containers/Reward';\nimport Transaction from './containers/Transaction';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \nimport $ from 'jquery';\nimport { ProtectedRoute } from \"./router/ProtectedRoute\";\nimport { ProtectedLogin } from \"./router/ProtectedLogin\";\n// import 'bootstrap/dist/js/bootstrap.bundle';\n \nfunction App() {\n    return (\n        <Switch>\n            <ProtectedLogin path={\"/login\"} exact component={Login}/>\n            {/* <ProtectedRoute path={\"/products\"} exact component={ProductList}/> */}\n            {/* <ProtectedRoute path={\"/product/:product\"} exact component={Product}/> */}\n            <ProtectedRoute path={\"/users\"} exact component={User} allowed={[1,2]}/>\n            <ProtectedRoute path={\"/user/:user\"} exact component={UserProfile} allowed={[1,2]}/>\n            <ProtectedRoute path={\"/profile\"} exact component={MyProfile} allowed={[2,3]}/>\n            <ProtectedRoute path={\"/settings\"} exact component={Setting} allowed={[1,2,3]}/>\n            <ProtectedRoute path={\"/packages\"} exact component={Package} allowed={[1,2]}/>\n            <ProtectedRoute path={\"/actions\"} exact component={Action} allowed={[1,2]}/>\n            <ProtectedRoute path={\"/rewards\"} exact component={Reward} allowed={[1,2,3]}/>\n            <ProtectedRoute path={\"/transactions\"} exact component={Transaction} allowed={[1,2,3]}/>\n            <ProtectedRoute path={\"/campaigns\"} exact component={Campaign} allowed={[1,2,3]}/>\n            <ProtectedRoute path={\"/campaign/:campaign\"} exact component={CampaignDetail}/>\n            <ProtectedRoute path={\"/\"} exact component={Dashboard} allowed={[1,2,3]}/>\n\n            {/* <Redirect to={\"/\"}/> */}\n            <Route path=\"*\" component={ () => \"404 NOT FOUND\" }/>\n        </Switch>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const DefaultState = {\r\n    loading: false,\r\n    data: [],\r\n    count: 0,\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst ProductListReducer = (state = DefaultState, action) => {\r\n    switch (action.type) {\r\n        case \"PRODUCT_LIST_LOADING\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"PRODUCT_LIST_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                // count: action.payload.count,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"PRODUCT_LIST_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: \"Unable to get products\"\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ProductListReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst ActionReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ACTION_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"ACTION_FETCH\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"ACTION_ADD\":\r\n\r\n            var stateData = state.data\r\n            var newData = [...state.data.data, action.payload]\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"ACTION_UPDATE\":\r\n\r\n            var stateData = state.data\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            var newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"ACTION_DELETE\":\r\n\r\n            var newData = state.data;\r\n            var newPackages = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            newData.data = newPackages;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: newData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"ACTION_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default ActionReducer;","const DefaultState = {\r\n    loading: false,\r\n    user: localStorage.getItem('user') != 'undefined' ? JSON.parse(localStorage.getItem('user')) : {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst LoginReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"LOGIN_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"LOGIN_SUCCESS\":\r\n\r\n            localStorage.setItem('user', JSON.stringify(action.payload));\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"LOGIN_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n            \r\n        case \"LOGOUT_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"LOGOUT_SUCCESS\":\r\n\r\n            localStorage.removeItem('user');\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: {},\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"LOGOUT_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default LoginReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst CampaignReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"CAMPAIGN_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"CAMPAIGN_FETCH\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"CAMPAIGN_ADD\":\r\n\r\n            var newData = [...state.data.data, action.payload]\r\n\r\n            var stateData = state.data\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"CAMPAIGN_UPDATE\":\r\n\r\n            var stateData = state.data\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            var newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"CAMPAIGN_DELETE\":\r\n\r\n            var stateData = state.data\r\n            var newData = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"CAMPAIGN_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default CampaignReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst PackageReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"PACKAGE_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"PACKAGE_SUCCESS\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"PACKAGE_ADDED\":\r\n\r\n            var newData = state.data;\r\n            var newPackages = [...state.data.data, action.payload]\r\n\r\n            newData.data = newPackages;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: newData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"PACKAGE_UPDATED\":\r\n\r\n            var newData = state.data;\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            var newPackages = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            newData.data[index] = newPackages;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: newData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"PACKAGE_DELETED\":\r\n\r\n            var newData = state.data;\r\n            var newPackages = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            newData.data = newPackages;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: newData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"PACKAGE_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default PackageReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst RewardReducer = (state = DefaultState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"REWARD_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"REWARD_FETCH\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"REWARD_ADD\":\r\n\r\n            var stateData = state.data\r\n            var newData = [...state.data.data, action.payload]\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"REWARD_UPDATE\":\r\n\r\n            var stateData = state.data\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            var newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"REWARD_DELETE\":\r\n\r\n            var stateData = state.data\r\n            var newData = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"REWARD_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default RewardReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst TransactionReducer = (state = DefaultState, action) => {\r\n\r\n    var stateData = state.data, newData\r\n\r\n    switch (action.type) {\r\n        case \"REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"FETCH_SUCCESS\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"ADD_SUCCESS\":\r\n\r\n            newData = [...state.data.data]\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"UPDATE_SUCCESS\":\r\n\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            console.log('update success 2');\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"DELETE_SUCCESS\":\r\n\r\n            newData = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default TransactionReducer;","const DefaultState = {\r\n    loading: false,\r\n    data: {},\r\n    errorMsg: \"\"\r\n}\r\n\r\nconst UserReducer = (state = DefaultState, action) => {\r\n\r\n    var stateData = state.data, newData\r\n\r\n    switch (action.type) {\r\n        case \"USER_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case \"USER_FETCH\":\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"USER_ADD\":\r\n\r\n            newData = [action.payload, ...state.data.data]\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"USER_UPDATE\":\r\n\r\n            var index = state.data.data.findIndex((item) => item.id === action.payload.id)\r\n            newData = {\r\n                ...state.data.data[index], \r\n                ...action.payload\r\n            }\r\n\r\n            stateData.data[index] = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"USER_DELETE\":\r\n\r\n            newData = state.data.data.filter((item) => item.id !== action.payload.id)\r\n\r\n            stateData.data = newData;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: stateData,\r\n                errorMsg: \"\"\r\n            }\r\n            \r\n        case \"USER_FAIL\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMsg: action.payload.error\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default UserReducer;","import {combineReducers} from \"redux\";\r\nimport ProductListReducer from \"./ProductListReducer\";\r\nimport ActionReducer from \"./ActionReducer\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport CampaignReducer from \"./CampaignReducer\";\r\nimport PackageReducer from \"./PackageReducer\";\r\nimport RewardReducer from \"./RewardReducer\";\r\nimport TransactionReducer from \"./TransactionReducer\";\r\nimport UserReducer from \"./UserReducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n    Action: ActionReducer,\r\n    Auth: AuthReducer,\r\n    Campaign: CampaignReducer,\r\n    Package: PackageReducer,\r\n    ProductList: ProductListReducer,\r\n    Reward: RewardReducer,\r\n    Transaction: TransactionReducer,\r\n    User: UserReducer\r\n});\r\n\r\nexport default RootReducer;","import {createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport RootReducer from \"./reducers/RootReducer\";\r\n\r\nconst myLogger = (store) => next => action => {\r\n\r\n    // console.log(\"middleware run\", store.getState());\r\n    return next(action);\r\n\r\n}\r\n\r\nconst Store = createStore(RootReducer, composeWithDevTools(applyMiddleware(myLogger, thunk)));\r\n\r\nexport default Store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './App.css';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport Store from \"./Store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport { config } from '../src/utils/Constants';\nimport axios from \"axios\";\n\naxios.defaults.baseURL = config.url.API_URL\naxios.defaults.headers = {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={Store}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}